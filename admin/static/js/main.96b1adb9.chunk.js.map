{"version":3,"sources":["components/ProfilesPanel.js","components/TypePanel.js","components/PriorityPanel.js","assets/img/day-night.jpg","components/DayNightSwitcher.js","components/Interval.js","components/Intervals.js","components/IntervalsContainer.js","components/DayOfWeekPanel.js","components/DevicesPanel.js","components/EditPanel.js","App.js","serviceWorker.js","index.js"],"names":["ProfilesPanel","props","onActive","id","on","isEdit","onClick","setTimeout","onDialog","setState","isDialogOpen","state","onEditDialog","element","element_title","title","element_id","element_parent","parent","isnew","onUpdateItem","evt","menu","console","log","newMenu","push","type","element_type","forEach","e","i","n","onChangeMenu","onDeleteItem","onAddChild","I18n","t","uuidv4","onOpen","is_open","map","onCloseAll","onOpenAll","folder","fld","level","active","submenus","isSearch","searchbled","filter","sub","profile","folder_sample","className","MenuItem","style","marginLeft","disableRipple","Typography","variant","onSearch","onSearchedText","text","target","value","head","TextField","placeholder","onChange","IconButton","aria-label","component","size","length","this","items","toLowerCase","indexOf","Paper","height","Divider","MenuList","Dialog","onClose","aria-labelledby","open","DialogTitle","width","minHeight","htmlFor","Input","startAdornment","InputAdornment","position","Button","Component","TypePanel","FormControl","FormLabel","Select","labelId","PriorityPanel","priority","DayNightSwitcher","onSlide","quorte_id","sections","region","quortes","Array","fill","_","src","day_night","alt","maxWidth","left","usePrettoSliderStyles","makeStyles","root","color","theme","palette","primary","dark","intervalsWidth","borderRadius","transition","thumb","display","backgroundColor","valueLabel","background","fontWeight","fontSize","track","rail","borderBottomLeftRadius","borderBottomRightRadius","light","PrettoSlider","Slider","classes","Interval","handleSliderChange","event","data","handleSelected","selected","field","getLabel","step","label","parseInt","slice","toString","minmax","options","defaultOptions","getMinMax","min","max","val","isNaN","vl","getPostfix","v2","orientation","valueLabelFormat","valueLabelDisplay","withStyles","Intervals","getSectionByRange","range","getCountByRange","getMaxByRange","prev","slide_id","setSlide_id","next","selectAll","selectNone","inSelected","index","onSwipedDown","onSwipeEnd","onSwipeLeftListener","onSwipeRightListener","onSwipeListener","onTransitionEnd","prevProps","count","sliders","nodeName","mouseSwipe","onSwipe","onSwipedLeft","onSwipedRight","getSlide","IntervalsContainer","updateWindowDimensions","w","tapperRef","current","getBoundingClientRect","React","createRef","window","addEventListener","removeEventListener","intervals","padding","paddingBottom","default","ref","tab","column","verticalAlign","marginRight","columnSettings","daysOfWeek","DayOfWeekPanel","FormControlLabel","control","Checkbox","checked","dow","includes","CssTextField","margin","DevicesPanel","members","join","helperText","fullWidth","multiline","rows","InputLabelProps","shrink","AntTabs","justifyContent","indicator","Tabs","AntTab","minWidth","opacity","Tab","App","extendedProps","encryptedFields","translations","require","windowWidth","innerWidth","windowHeight","innerHeight","onLeftOpen","panelIndex","leftOpen","onType","JSON","parse","stringify","oldMax","newMax","interval","Math","round","onPriority","prio","onDevices","devices","split","onDow","day","enabled","splice","onIntervals","onMenu","activeMenu","onEditMenu","isMenuEdit","onRange","intervalDuration","relation","newIntervals","chunk","reduce","a","b","newIndex","shift","leftOpen7","isExpert","name","selectedTab","loaded","themeType","max_menu_id","app","Grid","container","spacing","paper","item","xs","lg","paneling","clip_left_sm_7","indicatorColor","textColor","centered","duration","clip_left_sm_2","clip_left_sm_5","flexGrow","clip_left_sm_4","GenericApp","mobile_panel","flexDirection","alignItems","tabContent","overflow","tabContentIFrame","clip_left_sm_6","Boolean","location","hostname","match","adapterName","themeName","Utils","getThemeName","build","ReactDOM","render","onThemeChange","_theme","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.96b1adb9.chunk.js","sourcesContent":["import { Button, Dialog, DialogTitle, Divider, IconButton, Input, InputAdornment, MenuItem, MenuList, Typography, TextField } from '@material-ui/core';\r\nimport React, { Component } from 'react';\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { Paper } from '@material-ui/core';\r\n\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport CreateNewFolderIcon from '@material-ui/icons/CreateNewFolder';\r\nimport ImportExportIcon from '@material-ui/icons/ImportExport';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport FolderIcon from '@material-ui/icons/Folder';\r\nimport FolderOpenIcon from '@material-ui/icons/FolderOpen';\r\nimport ScheduleIcon from '@material-ui/icons/Schedule';\r\nimport PlaylistAddIcon from '@material-ui/icons/PlaylistAdd'; \r\nimport UnfoldLessIcon from '@material-ui/icons/UnfoldLess';\r\nimport UnfoldMoreIcon from '@material-ui/icons/UnfoldMore';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nclass ProfilesPanel extends Component\r\n{\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.state ={\r\n            isDialogOpen    : false,\r\n            isSearch        : false,\r\n            searchbled      : \"\"\r\n        }\r\n    } \r\n    onActive = id =>\r\n    {\r\n        if(this.props.on && !this.props.isEdit)\r\n        {\r\n            this.props.on( id )\r\n        }\r\n    }\r\n    onClick = id =>\r\n    { \r\n        setTimeout( () => this.onActive(id), 200 );\r\n    }\r\n    onDialog = () =>\r\n    {\r\n        this.setState({ isDialogOpen : !this.state.isDialogOpen })\r\n    }\r\n    onEditDialog = element =>\r\n    { \r\n        this.setState(\r\n            { \r\n                isDialogOpen : true,\r\n                element_title: element.title,\r\n                element_id : element.id,\r\n                element_parent: element.parent,\r\n                isnew: false\r\n            }\r\n        )\r\n    }\r\n    onUpdateItem = evt =>\r\n    {\r\n        let menu = [ ...this.props.menu ];\r\n        console.log(menu )\r\n        let newMenu= [];\r\n        if(this.state.isnew)\r\n        {\r\n            newMenu = [...menu];\r\n            newMenu.push({\r\n                id: this.state.element_id,\r\n                title : this.state.element_title,\r\n                parent: this.state.element_parent,\r\n                type: this.state.element_type\r\n            })\r\n        }\r\n        else\r\n        {\r\n            menu.forEach((e, i) =>\r\n            {\r\n                if(e.id === this.state.element_id)\r\n                {\r\n                    newMenu[ i ] ={\r\n                        n: this.state.element_id,\r\n                        title : this.state.element_title,\r\n                        parent: this.state.element_parent,\r\n                        type: this.state.element_type                     \r\n                    };\r\n                }\r\n                else\r\n                    newMenu[i] = e;\r\n            }); \r\n        }\r\n        \r\n        this.setState({ isDialogOpen : false,  isnew : false });\r\n        this.props.onChangeMenu(newMenu)\r\n    }\r\n    onDeleteItem = () =>\r\n    {\r\n        let menu = [ ...this.props.menu ];\r\n        let newMenu = [];\r\n        menu.forEach((e, i) =>\r\n        {\r\n            if(e.id === this.state.element_id)\r\n            {\r\n                \r\n            }\r\n            else\r\n                newMenu.push(e);\r\n        }); \r\n        this.setState({ isDialogOpen : false,  isnew : false });\r\n        this.props.onChangeMenu(newMenu)\r\n    }\r\n    onAddChild = (element, type) =>\r\n    {        \r\n        this.setState(\r\n            { \r\n                isDialogOpen : true,\r\n                element_title: I18n.t( type),\r\n                element_type: type,\r\n                element_id :  uuidv4(),\r\n                element_parent: element.id,\r\n                isnew: true\r\n            }\r\n        )\r\n        this.props.onChangeMenu(this.props.menu)\r\n    }\r\n    onOpen = (id, is_open) =>\r\n    { \r\n        let menu    = [ ...this.props.menu ];\r\n        let newMenu = menu.map( e =>\r\n        {\r\n            if(e.id == id)  e.is_open = is_open;\r\n            return e;    \r\n        })\r\n        this.props.onChangeMenu(newMenu)\r\n    }\r\n    onCloseAll = () =>\r\n    {\r\n        let menu    = [ ...this.props.menu ];\r\n        console.log( menu );\r\n        let newMenu = menu.map( e =>\r\n        {\r\n            if(e.type == \"folder\")  e.is_open = false;\r\n            return e;    \r\n        })\r\n        this.props.onChangeMenu(newMenu)\r\n    }\r\n    onOpenAll = () =>\r\n    {\r\n        let menu    = [ ...this.props.menu ];\r\n        console.log( menu );\r\n        let newMenu = menu.map( e =>\r\n        {\r\n            if(e.type == \"folder\")  e.is_open = true;\r\n            return e;    \r\n        })\r\n        this.props.onChangeMenu(newMenu)\r\n    }\r\n    folder = (fld, level) =>\r\n    {\r\n        const { menu, active, isEdit } = this.props;\r\n        const submenus = this.state.isSearch && this.state.searchbled\r\n            ?\r\n            null\r\n            :\r\n            menu\r\n                .filter(sub => sub.parent === fld.id )\r\n                    .map( sub =>\r\n                    { \r\n                        return fld.is_open\r\n                            ?\r\n                            <div key={sub.id}>\r\n                            {\r\n                                sub.type ==\"profile\" \r\n                                    ? \r\n                                    this.profile( sub, level + 1 ) \r\n                                    : \r\n                                    this.folder( sub, level + 1 )\r\n                            }\r\n                            </div>\r\n                            :\r\n                            null\r\n                    });\r\n        const folder_sample = fld.is_open\r\n            ?  \r\n            <FolderOpenIcon className=\"pr-1\" onClick={ evt => this.onOpen(fld.id, false) }  /> \r\n            : \r\n            <FolderIcon     className=\"pr-1\" onClick={ evt => this.onOpen(fld.id, true ) } />\r\n        return <div key={ fld.id }>\r\n            <MenuItem                     \r\n                className={ \"flow-menu-item \" + ( active === fld.id ? \" active \" : \"\") } \r\n                onClick={() => this.onClick( fld.id )} \r\n                style={{ marginLeft: (level * 20) }}\r\n                disableRipple\r\n            >\r\n                <Typography variant=\"inherit\"  className=\" w-100\">\r\n                    {folder_sample}  {I18n.t( fld.title  )}\r\n                </Typography>\r\n\r\n                <div className=\"absolute-right\">\r\n                    <div \r\n                        className=\"edit_button\" \r\n                        title={I18n.t(\"Add new child profile\")} \r\n                        onClick={() =>this.onAddChild( fld, \"profile\" )}\r\n                    >\r\n                        <AddIcon />\r\n                    </div>\r\n                    <div \r\n                        className=\"edit_button\" \r\n                        title={I18n.t(\"Add new child folder\")} \r\n                        onClick={() =>this.onAddChild( fld, \"folder\" )}\r\n                    >\r\n                        <CreateNewFolderIcon />\r\n                    </div>\r\n                    <div \r\n                        className=\"edit_button\" \r\n                        title={I18n.t(\"Edit\")}  \r\n                        onClick={() => this.onEditDialog( fld )}\r\n                    >\r\n                        <EditIcon />\r\n                    </div>\r\n                </div>\r\n                        \r\n            </MenuItem>\r\n            { submenus }\r\n        </div>\r\n    }\r\n    profile = (sub, level) =>\r\n    {\r\n        const { active } = this.props;\r\n        return <MenuItem                        \r\n            className={ \"flow-menu-item sub \" + ( active === sub.id ? \" active \" : \"\") } \r\n            style={{ marginLeft: (level * 20) }}\r\n            onClick={() => this.onClick( sub.id, level + 1 )} \r\n            disableRipple\r\n        >\r\n            <Typography variant=\"inherit\" className=\"pl-1 w-100\">\r\n                <ScheduleIcon className=\"pr-1\" /> {I18n.t( sub.title  )}\r\n            </Typography>\r\n            \r\n            <div className=\"absolute-right\">\r\n                <div \r\n                    className=\"edit_button\" \r\n                    title={I18n.t(\"Edit\")} \r\n                    onClick={ () => this.onEditDialog( sub ) }\r\n                >\r\n                    <EditIcon />\r\n                </div> \r\n            </div>\r\n\r\n        </MenuItem>\r\n    }\r\n    onSearch = () =>\r\n    {\r\n        this.setState({ isSearch : !this.state.isSearch, searchbled: \"\" });\r\n    }\r\n    onSearchedText = evt =>\r\n    {\r\n        const text = evt.target.value;\r\n        this.setState( { searchbled : text } );\r\n        console.log(text);\r\n    }\r\n    head = () =>\r\n    {\r\n        const { menu } = this.props;\r\n        return this.state.isSearch\r\n            ?\r\n            <>\r\n                <TextField\r\n                    className=\"ml-1 w-100\" \r\n                    placeholder={I18n.t(\"search text\")}\r\n                    onChange={ this.onSearchedText }\r\n                />\r\n                 <IconButton  \r\n                    aria-label=\"upload picture\" \r\n                    component=\"span\"\r\n                    size=\"small\" \r\n                    title={I18n.t(\"finish searching\")}\r\n                    onClick={ this.onSearch }\r\n                >\r\n                   <CloseIcon />  \r\n                </IconButton> \r\n            </>\r\n            :\r\n            <>\r\n                <IconButton  \r\n                    aria-label=\"upload picture\" \r\n                    component=\"span\"\r\n                    size=\"small\" \r\n                    title={I18n.t(\"Add folder\")}\r\n                    onClick={ \r\n                        () => {\r\n                            this.onAddChild( { id : \"\" }, \"folder\" );\r\n                            setTimeout( () => {\r\n                                // this.onUpdateItem()\r\n                            }, 200);\r\n                        }\r\n                    }\r\n                >\r\n                   <CreateNewFolderIcon />  \r\n                </IconButton>\r\n                {\r\n                    menu.filter(e => e.is_open ).length > 0\r\n                        ?\r\n                        <IconButton  \r\n                            aria-label=\"upload picture\" \r\n                            component=\"span\"\r\n                            size=\"small\"\r\n                            title={I18n.t(\"Close all\")}\r\n                        >\r\n                            <UnfoldLessIcon \r\n                                onClick={this.onCloseAll}\r\n                            />\r\n                        </IconButton>                        \r\n                        :                        \r\n                        <IconButton  \r\n                            aria-label=\"upload picture\" \r\n                            component=\"span\"\r\n                            size=\"small\"\r\n                            title={I18n.t(\"Open all\")}\r\n                        >\r\n                            <UnfoldMoreIcon \r\n                                onClick={ this.onOpenAll }\r\n                            />\r\n                        </IconButton>\r\n                        \r\n                }\r\n                <IconButton  \r\n                    aria-label=\"upload picture\" \r\n                    component=\"span\"\r\n                    size=\"small\" \r\n                    className=\"ml-auto\" \r\n                    title={I18n.t(\"Search\")}\r\n                    onClick={ this.onSearch }\r\n                >\r\n                   <SearchIcon />  \r\n                </IconButton>\r\n            </>\r\n    }\r\n    render()\r\n    {\r\n        const { isDialogOpen } = this.state;\r\n        const { menu, active, isEdit } = this.props;\r\n        const items = this.state.isSearch && this.state.searchbled\r\n            ?\r\n            menu\r\n                .map((e,i) =>\r\n                {\r\n                    return e.title.toLowerCase().indexOf( this.state.searchbled.toLowerCase() ) > -1\r\n                        ?\r\n                        e.type == \"folder\"\r\n                            ?\r\n                            this.folder(e, 0)\r\n                            :\r\n                            this.profile(e, 0)\r\n                        :\r\n                        null\r\n                })\r\n            :\r\n            menu\r\n                .filter(e => e.parent == \"\" )\r\n                    .map((e, i) =>\r\n                    {\r\n                        return this.folder(e, 0);\r\n                    })\r\n        return <div className=\"flow-menu flex-grow-1000 scrolled-auto m-0\" onClick={ () => this.onActive( -1 ) } >\r\n            <Paper className=\"d-flex\" style={{ height : 32 }}> \r\n                { this.head() }\r\n            </Paper>\r\n            <Divider>\r\n\r\n            </Divider>\r\n            <MenuList className=\"p-1\">\r\n                { items }\r\n            </MenuList>\r\n            \r\n            <Dialog \r\n                onClose={ this.onDialog } \r\n                aria-labelledby=\"simple-dialog-title\" \r\n                open={isDialogOpen}\r\n            >\r\n                <DialogTitle id=\"simple-dialog-title\">\r\n                    {I18n.t(\"Edit\")}\r\n                </DialogTitle>\r\n                <div className=\"p-2 flex-column\" style={{ width:250, minHeight:200 }}>\r\n                    <div className=\"p-2\">\r\n                        <div htmlFor=\"label\">\r\n                            {I18n.t( \"label\" )}\r\n                        </div>\r\n                        <Input \r\n                            id=\"label\" \r\n                            value={ this.state.element_title } \r\n                            onChange={ evt => this.setState({ element_title : evt.target.value })} \r\n                            startAdornment={\r\n                                <InputAdornment position=\"start\">\r\n                                    <EditIcon />\r\n                                </InputAdornment>\r\n                            }/>\r\n                    </div> \r\n                    <div className=\"mt-auto\">\r\n                        <Button onClick={ this.onUpdateItem }>\r\n                            {I18n.t( this.state.isnew ? \"create\" : \"update\" )}\r\n                        </Button>\r\n                        {\r\n                            this.state.isnew\r\n                                ?\r\n                                null\r\n                                :\r\n                                <Button onClick={ this.onDeleteItem }>\r\n                                    {I18n.t( \"delete\" )}\r\n                                </Button>\r\n\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </Dialog>\r\n        </div>\r\n    }\r\n\r\n}\r\nexport default ProfilesPanel;","import React, { Component } from 'react';\r\nimport { FormControl, FormLabel, MenuItem, Select } from '@material-ui/core';\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\n\r\nclass TypePanel extends Component\r\n{\r\n    on = evt =>\r\n    {\r\n        const type = evt.target.value;\r\n        this.props.on(type);\r\n    }\r\n    render()\r\n    {\r\n        const{type} = this.props;\r\n        return <FormControl component=\"fieldset\" className=\"w-100\"> \r\n                <FormLabel component=\"legend\" className=\"tapper-title\">{ I18n.t( \"Type\" ) }</FormLabel>\r\n                <Select\r\n                    labelId=\"type-select-label\"\r\n                    id=\"type-select\" \r\n                    className=\"w-100\"\r\n                    value={type}\r\n                    onChange={ this.on }\r\n                >\r\n                    <MenuItem value=\"percent\">\r\n                        {I18n.t( \"Percent\")}\r\n                    </MenuItem>\r\n                    <MenuItem value=\"temperature\">\r\n                        {I18n.t( \"Temperature\")}\r\n                    </MenuItem>\r\n                    <MenuItem value=\"onoff\">\r\n                        {I18n.t( \"On/Off\")}\r\n                    </MenuItem>\r\n                </Select>\r\n                {/*\r\n                <RadioGroup defaultValue=\"female\" aria-label=\"gender\" name=\"customized-radios\">\r\n                    <FormControlLabel \r\n                        value=\"percent\" \r\n                        control={\r\n                            <Radio \r\n                                color=\"primary\" \r\n                                className={ \"flow-little checkbox\" } \r\n                                checked={this.state.type === \"percent\"}\r\n                                disableRipple\r\n                                onChange={ evt => this.on( evt, \"percent\" ) }\r\n                            />\r\n                        } \r\n                        className=\"px-1\"\r\n                        label={I18n.t( \"Percent\")} \r\n                    />\r\n                    <FormControlLabel \r\n                        value=\"temperature\" \r\n                        control={\r\n                            <Radio \r\n                                color=\"primary\" \r\n                                className={ \"flow-little checkbox\" } \r\n                                checked={this.state.type === \"temperature\"}\r\n                                disableRipple\r\n                                onChange={ evt => this.on( evt, \"temperature\" ) }\r\n                            />} \r\n                        className=\"px-1\"\r\n                        label={I18n.t( \"Temperature\")} \r\n                    />\r\n                    <FormControlLabel \r\n                        value=\"onnoff\" \r\n                        control={\r\n                            <Radio \r\n                                color=\"primary\" \r\n                                checked={this.state.type === \"onnoff\"}\r\n                                className={ \"flow-little checkbox\" } \r\n                                disableRipple\r\n                                onChange={ evt => this.on( evt,  \"onnoff\" ) }\r\n                            />\r\n                        } \r\n                        className=\"px-1\"\r\n                        label={I18n.t( \"On/Off\")} \r\n                    />\r\n                </RadioGroup>\r\n                */}\r\n            </FormControl>\r\n    }\r\n\r\n}\r\nexport default TypePanel;","import React, { Component } from 'react';\r\nimport { FormControl, FormLabel, MenuItem, Select } from '@material-ui/core';\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\n\r\nclass PriorityPanel extends Component\r\n{\r\n    on = evt =>\r\n    {\r\n        const priority = evt.target.value\r\n        this.props.on( priority );\r\n        \r\n    }\r\n    render()\r\n    {\r\n        const {priority} = this.props;\r\n        return <FormControl component=\"fieldset\"  className=\"w-100\"> \r\n            <FormLabel component=\"legend\" className=\"tapper-title\">{ I18n.t( \"Priority\" ) }</FormLabel>\r\n            <Select\r\n                labelId=\"demo-simple-select-label\"\r\n                id=\"demo-simple-select\"\r\n                className=\"w-100\"\r\n                value={priority}\r\n                onChange={ this.on }\r\n            >\r\n                <MenuItem value={0}>\r\n                    {I18n.t( \"Normal\")}\r\n                </MenuItem>\r\n                <MenuItem value={1}>\r\n                    {I18n.t( \"High\")}\r\n                </MenuItem>\r\n                <MenuItem value={2}>\r\n                    {I18n.t( \"Highest eg. Holiday\")}\r\n                </MenuItem>\r\n            </Select>\r\n            {/*\r\n            <RadioGroup \r\n                defaultValue=\"female\" \r\n                aria-label=\"gender\"\r\n                name=\"customized-radios\"\r\n            >\r\n                <FormControlLabel \r\n                    value=\"normal\" \r\n                    control={\r\n                        <Radio \r\n                            color=\"primary\"\r\n                            className={ \"flow-little checkbox\" } \r\n                            disableRipple\r\n                        />\r\n                    } \r\n                    className=\"px-1\"\r\n                    label={I18n.t( \"Normal\")}\r\n                />\r\n                <FormControlLabel \r\n                    value=\"high\" \r\n                    control={\r\n                        <Radio \r\n                            color=\"primary\"\r\n                            className={ \"flow-little checkbox\" } \r\n                            disableRipple\r\n                        />\r\n                    } \r\n                    className=\"px-1\"\r\n                    label={I18n.t( \"High\")} \r\n                />\r\n                <FormControlLabel \r\n                    value=\"highest\" \r\n                    control={\r\n                        <Radio \r\n                            color=\"primary\"  \r\n                            className={ \"flow-little checkbox\" } \r\n                            disableRipple\r\n                        />\r\n                    } \r\n                    className=\"px-1\"\r\n                    label={I18n.t( \"Highest eg. Holiday\")} \r\n                />\r\n            </RadioGroup>\r\n            */}\r\n        </FormControl> \r\n    }\r\n\r\n}\r\nexport default PriorityPanel;","export default __webpack_public_path__ + \"static/media/day-night.d6f09cbf.jpg\";","import { Component } from 'react';\r\nimport day_night from '../assets/img/day-night.jpg'\r\n\r\nclass DayNightSwitcher extends Component\r\n{\r\n    onSlide = quorte_id =>\r\n    {\r\n        \r\n        if(this.props.on)\r\n        {\r\n            this.props.on( quorte_id )     \r\n        }\r\n        \r\n       /*this.setState({ quorte_id })*/\r\n    }\r\n    render()\r\n    {\r\n        const {sections} = this.props;\r\n        const height = sections === 1 ? 0 : 78;\r\n        const region = 100 / sections;\r\n        const quortes = Array( sections ).fill().map((_, i) => \r\n        {\r\n            return <div \r\n                key={i}\r\n                className=\"day-night-quorte\" \r\n                onClick={()=> this.onSlide( i )}\r\n            >\r\n\r\n            </div>\r\n        })\r\n        return <div className=\"day_night_cont\" style={{ height }}>\r\n            <div>\r\n                <img src={ day_night } alt=\"day-night\" id=\"day-night\"/>\r\n                <div className=\"day_night\">\r\n                    \r\n                    { quortes }\r\n                    <div\r\n                        className=\"day-night-slide\"\r\n                        style={{ \r\n                            maxWidth: region + \"%\", \r\n                            width: region + \"%\", \r\n                            left: \"calc(\"+(this.props.quorte_id * region) +\"% - 5px)\" }}\r\n                    >\r\n                    </div>\r\n                </div>\r\n            </div>  \r\n        </div>\r\n    }\r\n}\r\nexport default DayNightSwitcher;","import { Component } from 'react';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport defaultOptions from '../data/defaultOptions.json'\r\nimport minmax from '../data/minmax.json'\r\n\r\nconst styles = theme => ({\r\n    \r\n});\r\nconst usePrettoSliderStyles = makeStyles({\r\n    root: (props) => {return {\r\n        //color: options.backgrounds[ 2 ], \r\n        color: props.theme.palette.primary.dark,\r\n        width: props.intervalsWidth + 'px!important',\r\n        borderRadius: 0,\r\n        height: 'calc(100% - 90px)!important',\r\n        transition: 'all 100ms ease-out',\r\n        position: 'relative'\r\n    }},\r\n    thumb:  (props) => {\r\n        console.log(props.theme.palette);\r\n        return {\r\n            //left: 'calc(-50% + ' + (props.intervalsWidth/2-15) + 'px)!important',\r\n            left: 'calc( 50% + ' + 10 + 'px)!important',\r\n            width:0,\r\n            height: 0,\r\n            display: props.type == \"onoff\" ? \"none\" : \"flex\"\r\n        }\r\n    },\r\n    active: {\r\n        backgroundColor:\"transparent\",\r\n        width:0,\r\n        height:0\r\n\r\n    },\r\n    valueLabel:  (props) => {\r\n        console.log(props.theme.palette);\r\n        return {\r\n            left: -20,\r\n            '& *': {\r\n                background: 'transparent',\r\n                fontWeight: 100, \r\n                color: props.theme.palette.text.primary,\r\n                fontSize: '1.0rem',  \r\n                transition: 'all 100ms ease-out' \r\n            }\r\n        }\r\n    },\r\n    track: {\r\n        width: '90%!important',\r\n        transition: 'all 100ms ease-out',\r\n        borderRadius:4                \r\n    },\r\n    rail: (props) => {return {\r\n        transition: 'all 100ms ease-out',\r\n        width: '90%!important',\r\n        borderRadius: 4, \r\n        borderBottomLeftRadius: '0px!important',  \r\n        borderBottomRightRadius: '0px!important',  \r\n        height:'calc(100% + ' + props.intervalsWidth + 'px)',\r\n        // backgroundColor:'#FFF',\r\n        backgroundColor:props.theme.palette.primary.light,\r\n    }},\r\n});\r\n\r\n\r\nconst PrettoSlider = props => {\r\n    return <Slider \r\n        classes={\r\n            usePrettoSliderStyles({\r\n                intervalsWidth: props.intervalsWidth, \r\n                type: props.type, \r\n                theme: props.theme\r\n            })\r\n        } \r\n        {...props}\r\n    />\r\n}\r\nclass Interval extends Component\r\n{\r\n    \r\n    handleSliderChange = ( event, data) =>\r\n    {\r\n        //this.setState({value: data});\r\n        this.on( 'data', data );\r\n    }\r\n    handleSelected = evt =>\r\n    { \r\n        this.on( 'selected', !this.props.selected );\r\n    }\r\n    on = (field, value) =>\r\n    {\r\n        if(this.props.on)\r\n        {\r\n            this.props.on( field, value, this.props.i );\r\n        }\r\n    }\r\n    getPostfix(value)\r\n    {\r\n        switch(this.props.type)\r\n        {\r\n            case 'temperature':\r\n                return value.toString() + 'º';\r\n            case 'onoff':\r\n                return value \r\n                    ? \r\n                    <span className='text-success'>on</span> \r\n                    : \r\n                    <span className='text-danger'>off</span>\r\n            case 'percent':\r\n            default:\r\n                return value.toString() + '%';\r\n        }\r\n    }\r\n    getMinMax()\r\n    {\r\n        return minmax[this.props.type];\r\n    }\r\n    getLabel = () =>\r\n    {\r\n        const {step, i} = this.props;         \r\n        let label = i * step;\r\n        const hrs = parseInt(label)\r\n        const secs = ( '0' + ( label % 1 * 60) ).slice( -2 ) ;\r\n        return [hrs, secs];\r\n    }\r\n    render()\r\n    {\r\n        const options = this.props.options\r\n                ?\r\n                this.props.options\r\n                :\r\n                defaultOptions.options; \r\n        const { value, i, selected, theme, intervalsWidth, type } = this.props;\r\n        if(i < 0 )\r\n        {\r\n            return '';\r\n        } \r\n        const{min, max} = this.getMinMax();\r\n        const label = this.getLabel();\r\n        const val = isNaN(value) ? 0 : value;\r\n        const vl = type===\"onoff\" ? this.getPostfix( val || 0 ) : '';\r\n        const v2 = type!==\"onoff\" ? this.getPostfix( val || 0 ) : '';\r\n        return <span className=\"pretto\" >\r\n            <span className=\"pretto-label\" >\r\n                { vl } \r\n            </span>\r\n            <PrettoSlider\r\n                key={i}\r\n                theme={theme}\r\n                intervalsWidth={intervalsWidth}\r\n                type={type}\r\n                orientation=\"vertical\"  \r\n                aria-label=\"pretto slider\"\r\n                value={ val }\r\n                valueLabelFormat={ v2 }\r\n                min={min}\r\n                max={max}\r\n                selected= { selected }\r\n                onChange={ this.handleSliderChange }\r\n                valueLabelDisplay=\"on\"\r\n            /> \r\n            <div \r\n                className={\"pretto-time flow-square\" + ( selected ? \" active\" : \"\" )} \r\n                style={{ }}\r\n                i={i}\r\n                onClick={this.handleSelected}\r\n            >\r\n                <span>{ label[0] }</span><span className=\"pretto-secs\">{label[1]}</span>\r\n                    \r\n            </div>\r\n        </span>  \r\n    }\r\n}\r\nexport default withStyles(styles)(Interval);","import React, { Component } from 'react'; \r\nimport { Fragment } from 'react';\r\nimport {Swipe} from 'react-swipe-component';\r\nimport DayNightSwitcher from './DayNightSwitcher'\r\nimport Interval from './Interval';\r\n\r\nclass Intervals extends Component\r\n{\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.state = {\r\n            slide_id: 0,\r\n            selected : []\r\n        }\r\n    }\r\n    componentDidUpdate(prevProps)\r\n    {\r\n        if(prevProps.range !== this.props.range || prevProps.intervalsWidth !== this.props.intervalsWidth)\r\n        {\r\n            this.setState({\r\n                slide_id:0\r\n            })\r\n        }\r\n    }\r\n    getSectionByRange = range =>\r\n    {\r\n        if( this.props.intervalsWidth >= 720 )\r\n        {\r\n            return range === 0.5 ? 2 : 1;\r\n        }\r\n        switch( range )\r\n        {\r\n          case 0.5: \r\n            return 8; \r\n          case 1: \r\n            return 4; \r\n          case 2: \r\n            return 3; \r\n          case 4: \r\n            return 1; \r\n          case 3:\r\n          default: \r\n            return 2; \r\n        }\r\n    }\r\n    getCountByRange = range =>\r\n    {\r\n        if( this.props.intervalsWidth >= 720 )\r\n        {\r\n            return range === 0.5 ? 24 : this.getMaxByRange( range );\r\n        }\r\n        switch( range )\r\n        {\r\n          case 0.5: \r\n            return 6;\r\n          case 1:\r\n            return 6;\r\n          case 2:\r\n            return 4;\r\n          case 4:\r\n            return 6;\r\n          case 3:\r\n          default:\r\n            return 4;\r\n        }\r\n    }\r\n    getMaxByRange = range =>\r\n    {\r\n        return 24 / range;\r\n    }\r\n\r\n    //\r\n    prev = () =>\r\n    {\r\n        const{ slide_id } = this.state;\r\n        const{ range } = this.props;\r\n        if(slide_id > 0)\r\n          this.setSlide_id( slide_id - 1 )\r\n        else\r\n          this.setSlide_id( this.getSectionByRange(range) - 1 );\r\n    }\r\n    next = () =>\r\n    {\r\n        const{ slide_id } = this.state;\r\n        const{ range } = this.props;\r\n        if( slide_id < this.getSectionByRange(range) - 1 )\r\n            this.setSlide_id( slide_id + 1 );\r\n        else\r\n            this.setSlide_id( 0 );\r\n    }\r\n    selectAll = () =>\r\n    {\r\n        const{ range } = this.props;\r\n        this.setState( {selected: Array( this.getMaxByRange( range ) + 1).fill( 1 ).map( ( e, i ) => i ) } )\r\n    }\r\n    selectNone = () =>\r\n    {\r\n        this.setState( {selected: [] } )\r\n    }\r\n\r\n    setSlide_id = slide_id =>\r\n    {\r\n        this.setState( { slide_id : parseInt( slide_id ) } );\r\n    }\r\n    onChange = ( field, value, i ) =>\r\n    {     \r\n        const {selected} = this.state;\r\n        let state = {...this.state };\r\n        if (field === 'selected') {\r\n            state[ field ][i] = value;\r\n            this.setState( state )\r\n        }\r\n        if (field === 'data') {\r\n            let data = [...this.props.data];\r\n            let inSelected = selected[i];\r\n            if (!inSelected) {\r\n                this.setState({selected: []});\r\n            }\r\n            if( !inSelected || selected.filter( e  => e ).length === 0)\r\n            {\r\n                data[i] = value; \r\n            }\r\n            else\r\n            {\r\n                data.forEach((element, index) => {\r\n                    if( selected[index] )\r\n                    {\r\n                        data[index] =  value;\r\n                    }\r\n                });\r\n            }\r\n            this.props.onChange(data);\r\n        }\r\n    }\r\n    getSlide()\r\n    {\r\n        const {slide_id, selected} = this.state;\r\n        const {type, intervalsWidth, theme, range, data} = this.props;\r\n        const count = this.getCountByRange(range);\r\n       \r\n        let sliders = []\r\n        for( let i = slide_id * count; i < ( slide_id + 1 ) * count; i++ )\r\n        {\r\n          sliders.push(\r\n            <Interval\r\n                key={ i + 'step' + range }\r\n                value={ data[ i ] } \r\n                selected= { selected[ i ] }\r\n                label={ '' }\r\n                i={ i }\r\n                step={range}\r\n                on={ this.onChange }\r\n                type={ type }\r\n                theme={ theme }\r\n                intervalsWidth={ intervalsWidth / count }\r\n            /> \r\n          )\r\n        }\r\n        return sliders;\r\n    }\r\n    // \r\n    onSwipedDown = evt =>\r\n    { \r\n\r\n    }\r\n    onSwipeEnd = evt =>\r\n    { \r\n\r\n    }\r\n    onSwipeLeftListener = () => \r\n    {\r\n        this.prev();\r\n    }\r\n    onSwipeRightListener = () =>\r\n    {\r\n        this.next();\r\n    }\r\n    onSwipingRight()\r\n    {\r\n    }\r\n    onSwipingLeft() \r\n    {\r\n    }\r\n    onSwipeListener = e =>\r\n    { \r\n    }\r\n    onTransitionEnd = () =>\r\n    {\r\n    } \r\n    render()\r\n    {\r\n        if (!this.props.intervalsWidth) {\r\n            return null;\r\n        }\r\n        const {slide_id} = this.state;\r\n        const {range} = this.props;\r\n        const sections = this.getSectionByRange(range);\r\n        return <Fragment> \r\n            <div className=\"swiper-content\"> \r\n                <Swipe\r\n                    nodeName=\"div\"\r\n                    className=\"h-100 w-100\"\r\n                    mouseSwipe={false}\r\n                    onSwipedDown={this.onSwipedDown}\r\n                    onSwipeEnd={this.onSwipeEnd}\r\n                    onSwipe={this.onSwipeListener}\r\n                    onSwipedLeft={this.onSwipeLeftListener}\r\n                    onSwipedRight={this.onSwipeRightListener} \r\n                    onTransitionEnd={this.onTransitionEnd}\r\n                >\r\n                    <div className=\"swiper\"> \r\n                        { this.getSlide() }\r\n                    </div>            \r\n                </Swipe> \r\n            </div>\r\n            <DayNightSwitcher\r\n                sections={ sections }\r\n                quorte_id={ parseInt(slide_id ) }\r\n                on={ quorte_id => this.setSlide_id ( quorte_id ) }\r\n            />\r\n      </Fragment> ;\r\n    }\r\n}\r\nexport default Intervals;","import React, { Component } from 'react';\r\nimport { withStyles } from '@material-ui/core/styles'; \r\nimport Intervals from './Intervals';\r\n\r\nconst styles = theme => ({\r\n    tab: {\r\n        width: '100%',\r\n        minHeight: '100%'\r\n    },\r\n    column: {\r\n        display: 'inline-block',\r\n        verticalAlign: 'top',\r\n        marginRight: 20\r\n    },\r\n    columnSettings: {\r\n        width: 'calc(100% - 370px)',\r\n    },\r\n});\r\n\r\nclass IntervalsContainer extends Component\r\n{\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.tapperRef = React.createRef();\r\n        this.state ={\r\n            selected: []\r\n        }\r\n    }\r\n    componentDidMount()\r\n    {\r\n        window.addEventListener('resize', this.updateWindowDimensions);\r\n        this.updateWindowDimensions();\r\n    }\r\n    componentWillUnmount() \r\n\t{ \r\n        window.removeEventListener('resize', this.updateWindowDimensions);\r\n    }\r\n    updateWindowDimensions = () =>\r\n\t{\r\n        const w = this.tapperRef.current.getBoundingClientRect().width; \r\n        this.setState({\r\n            intervalsWidth : w ? w * .85 : 30 \r\n        })\r\n    }\r\n    componentDidUpdate(prevProps)\r\n    {\r\n        if(prevProps.range !== this.props.range )\r\n        { \r\n            this.updateWindowDimensions( );\r\n        } \r\n    } \r\n    \r\n    render()\r\n    { \r\n        const { type, theme, range, intervals } = this.props; \r\n        return  <div \r\n            className={\"tapper-grid tapper-shadow m-1 p-1 h-100 \"}\r\n            style={{\r\n                padding : 0,\r\n                paddingBottom:0,\r\n                backgroundColor : theme.palette.background.default,\r\n\r\n            }}    \r\n        >\r\n            <div \r\n                className=\"tapper-inside\"\r\n                id=\"tapper-inside\"\r\n                ref={this.tapperRef}\r\n                style={{ \r\n                    padding: 0,\r\n                    width:\"100%\" \r\n                }}\r\n            > \r\n                <Intervals \r\n                    data={ intervals }\r\n                    onChange={this.props.onChange}\r\n                    theme={ theme }\r\n                    type={ type }\r\n                    range={ range }\r\n                    intervalsWidth={this.state.intervalsWidth}\r\n                />\r\n            </div>\r\n        </div> \r\n    }\r\n\r\n}\r\nexport default withStyles(styles)(IntervalsContainer);","import { FormControl, FormControlLabel } from '@material-ui/core';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport React, { Component } from 'react';\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\n\r\nconst daysOfWeek = [\r\n    'Sn',\r\n    'Mn',\r\n    'Tu',\r\n    'We',\r\n    'Th',\r\n    'Fr',\r\n    'Sa'\r\n]\r\n\r\nclass DayOfWeekPanel extends Component\r\n{\r\n    render()\r\n    {\r\n        return <FormControl component=\"fieldset\"> \r\n            {daysOfWeek.map((title, index) =>\r\n                <FormControlLabel \r\n                    key={index}\r\n                    control={<Checkbox \r\n                        checked={this.props.dow.includes(index)}\r\n                        color=\"primary\" \r\n                        className={ \"flow checkbox\" } \r\n                        disableRipple={true}\r\n                        onChange={e => this.props.onChange(index, e.target.checked)}\r\n                    />} \r\n                    label={I18n.t( title )}\r\n                    className=\"px-1\"\r\n                />\r\n            )}\r\n        </FormControl>\r\n    }\r\n\r\n}\r\nexport default DayOfWeekPanel;","\r\n\r\nimport React, { Component } from 'react';\r\nimport { FormLabel, TextField, withStyles } from '@material-ui/core';\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\n\r\nconst CssTextField = withStyles({\r\n    root: {\r\n        backgroundColor:'#FFFFFF12', \r\n        padding: 0,\r\n        margin: 0,\r\n        borderRadius:15,                \r\n        display: 'flex',\r\n        width: 'auto'\r\n    },\r\n  })(TextField);\r\n\r\n  class DevicesPanel extends Component\r\n{\r\n    render()\r\n    {\r\n        const title = this.props.title ? this.props.title : 'Devices';\r\n        return <>\r\n            <FormLabel component=\"legend\" className=\"tapper-title\">\r\n                {I18n.t( title )}\r\n            </FormLabel>\r\n            <CssTextField\r\n                id=\"standard-full-width\"\r\n                label=\"\"\r\n                style={{ }}\r\n                value={this.props.members.join(', ')}\r\n                onChange={e => this.props.onChange(e.target.value)}\r\n                className=\"p-0 m-0\"\r\n                placeholder={I18n.t( \"Put device names per comma\" )}\r\n                helperText=\"\"\r\n                fullWidth\r\n                margin=\"normal\"\r\n                multiline\r\n                rows={ this.props.rows || 3 }\r\n                InputLabelProps={{\r\n                    shrink: true,\r\n                }}\r\n            />\r\n        </> \r\n    }\r\n\r\n}\r\nexport default DevicesPanel;","import I18n from '@iobroker/adapter-react/i18n';\r\nimport { Component } from 'react';\r\n\r\nclass EditPanel extends Component\r\n{\r\n    on = () =>\r\n    {\r\n        this.props.on( this.props.isEdit )\r\n    }\r\n    render()\r\n    {\r\n        return <div className=\"flow-menu mt-auto\">\r\n            <div \r\n                className={\"tapper-edit w-100\" + (this.props.isEdit ? \" active\" : \"\") }\r\n                onClick={this.on}\r\n            >\r\n                {I18n.t( this.props.isEdit ? \"Finish edit\" : \"Edit Menu\")}\r\n            </div>            \r\n        </div>\r\n    }\r\n}\r\nexport default EditPanel;","import React from 'react'; \r\nimport './App.scss';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport { MuiThemeProvider } from '@material-ui/core/styles';\r\n\r\nimport Tabs from '@material-ui/core/Tabs';  \r\nimport Tab from '@material-ui/core/Tab';\r\nimport GenericApp from '@iobroker/adapter-react/GenericApp';\r\nimport Loader from '@iobroker/adapter-react/Components/Loader'\r\n\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\nimport ProfilesPanel from './components/ProfilesPanel';\r\nimport TypePanel from './components/TypePanel';\r\nimport PriorityPanel from './components/PriorityPanel';\r\nimport IntervalsContainer from './components/IntervalsContainer';\r\nimport DayOfWeekPanel from './components/DayOfWeekPanel';\r\nimport DevicesPanel from './components/DevicesPanel';\r\nimport EditPanel from './components/EditPanel';\r\nimport defaultOptions from './data/defaultOptions.json'\r\nimport minmax from './data/minmax.json'\r\nimport { Grid } from '@material-ui/core';\r\n\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\nimport DehazeIcon from '@material-ui/icons/Dehaze';\r\nimport AssignmentTurnedInIcon from '@material-ui/icons/AssignmentTurnedIn';\r\nimport CalendarTodayIcon from '@material-ui/icons/CalendarToday';\r\nimport CallSplitIcon from '@material-ui/icons/CallSplit';\r\nimport ViewListIcon from '@material-ui/icons/ViewList';\r\nimport ScheduleIcon from '@material-ui/icons/Schedule';\r\n\r\nconst styles = theme => {\r\n    const mobile_panel = {\r\n        '@media (max-width:570px)': \r\n        {\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: 'center',\r\n            padding: '0px 10px 0 60px !important',\r\n            height: '100%',\r\n            width:'calc(100% - 70px)',\r\n            left:'calc(-100% - 70px)',\r\n            background: theme.palette.background.paper\r\n        }\r\n    }\r\n    return {\r\n        app:{\r\n            display:'flex',\r\n            position: 'relative',\r\n            height: '100%',\r\n            backgroundColor: theme.palette.background.paper\r\n        },\r\n        root: {},\r\n        tabContent: {\r\n            padding: 10,\r\n            height: 'calc(100% - 64px - 48px - 20px)',\r\n            overflow: 'auto'\r\n        },\r\n        tabContentIFrame: {\r\n            padding: 10,\r\n            height: 'calc(100% - 64px - 48px - 20px - 38px)',\r\n            overflow: 'auto'\r\n        },\r\n        paneling: {\r\n            backgroundColor: theme.palette.background.paper\r\n        },\r\n        clip_left_sm_2 : mobile_panel,\r\n        clip_left_sm_4 : mobile_panel,\r\n        clip_left_sm_5 : mobile_panel,\r\n        clip_left_sm_6 : mobile_panel,\r\n        clip_left_sm_7 : mobile_panel\r\n        \r\n    }\r\n};\r\n\r\nconst AntTabs = withStyles({\r\n    root: { \r\n        margin:0,  \r\n        width: '100%',\r\n        justifyContent:'center'\r\n    },\r\n    indicator: { \r\n        transition : 'all 300ms ease-out'\r\n    },\r\n})(Tabs);\r\n\r\nconst AntTab = withStyles((theme) => ({\r\n    root: { \r\n        //backgroundColor:'#444',\r\n        minWidth: 140,\r\n        fontWeight: 700, \r\n        fontSize: '0.75rem',\r\n        opacity: 1, \r\n    },\r\n    selected: {},\r\n}))((props) => <Tab disableRipple {...props} />);\r\n\r\nclass App extends GenericApp {\r\n    constructor(props) {\r\n        const extendedProps = {...props};\r\n        extendedProps.encryptedFields = ['pass'];\r\n        extendedProps.translations = {\r\n            'en': require('./i18n/en'),\r\n            'de': require('./i18n/de'),\r\n            'ru': require('./i18n/ru'),\r\n            'pt': require('./i18n/pt'),\r\n            'nl': require('./i18n/nl'),\r\n            'fr': require('./i18n/fr'),\r\n            'it': require('./i18n/it'),\r\n            'es': require('./i18n/es'),\r\n            'pl': require('./i18n/pl'),\r\n            'zh-cn': require('./i18n/zh-cn'),\r\n        };\r\n\r\n        super(props, extendedProps);\r\n        this.state ={\r\n            ...this.state,\r\n            menu : defaultOptions.menu,\r\n            activeMenu : defaultOptions.menu[0].id,\r\n            isMenuEdit : false,\r\n            isExpert : true,\r\n            leftOpen: 0,\r\n            profile: {\r\n                enabled: false,\r\n                id: '11231359898', \r\n                name: 'Basic', \r\n                members: ['id1', 'id2'],\r\n                type: 'temperature',\r\n                prio: 0, // 0 normal, 1 - high, 2 - highest\r\n                dow: [1, 2, 3, 4, 5], // 0 - sunday, 1 - monday\r\n                intervalDuration: 0.5, // in hours\r\n                intervals: [3, 14, 6, 22, 18, 3, 14, 6, 22, 18, 3, 14, 6, 22, 18, 3, 14, 6, 22, 18, 3, 14, 6, 22, 22 ]\r\n            }\r\n        } \r\n    }\r\n    componentWillMount()\r\n    {\r\n        window.addEventListener('resize', this.updateWindowDimensions);\r\n        this.updateWindowDimensions();\r\n    }\r\n    componentWillUnmount() \r\n\t{ \r\n        window.removeEventListener('resize', this.updateWindowDimensions);\r\n    }\r\n    updateWindowDimensions = () =>\r\n\t{\r\n        this.setState({\r\n            windowWidth : window.innerWidth,\r\n            windowHeight: window.innerHeight\r\n        })\r\n    }\r\n    getSelectedTab() {\r\n        const tab = this.state.selectedTab;\r\n        if (!tab || tab === 'options') {\r\n            return 0;\r\n        }\r\n    }\r\n    onLeftOpen = (panelIndex) =>\r\n    {\r\n        this.setState({ \r\n            leftOpen : this.state.leftOpen === panelIndex ? 0 : panelIndex,  \r\n        })\r\n    }\r\n    onType = type =>\r\n    {\r\n        let profile = JSON.parse(JSON.stringify(this.state.profile))\r\n        profile.type = type;\r\n        if (type !== this.state.profile.type) {\r\n            let oldMax = minmax[this.state.profile.type].max;\r\n            let newMax = minmax[type].max;\r\n\r\n            profile.intervals = profile.intervals.map(interval => {\r\n                interval = Math.round((newMax / oldMax) * interval);\r\n                if (interval < minmax[type].min) {\r\n                    return minmax[type].min;\r\n                }\r\n                if (interval > minmax[type].max) {\r\n                    return minmax[type].max;\r\n                }\r\n                return interval;\r\n            })\r\n        }\r\n        this.setState({ profile });\r\n    }\r\n    onPriority = priority =>\r\n    {\r\n        let profile = JSON.parse(JSON.stringify(this.state.profile))\r\n        profile.prio = priority;\r\n        this.setState({ profile });\r\n    }\r\n    onDevices = devices =>\r\n    {\r\n        let profile = JSON.parse(JSON.stringify(this.state.profile))\r\n        profile.members = devices.split(', ');\r\n        this.setState({ profile });\r\n    }\r\n    onDow = (day, enabled) => {\r\n        let profile = JSON.parse(JSON.stringify(this.state.profile));\r\n        if (enabled && !profile.dow.includes(day)) {\r\n            profile.dow.push(day);\r\n        } else if (!enabled && profile.dow.includes(day)) {\r\n            profile.dow.splice(profile.dow.indexOf(day), 1);\r\n        }\r\n        this.setState({ profile });;\r\n    }\r\n    onIntervals = intervals =>\r\n    {\r\n        let profile = JSON.parse(JSON.stringify(this.state.profile))\r\n        profile.intervals = intervals;\r\n        this.setState({ profile });\r\n    }\r\n    onMenu = active =>\r\n    {\r\n        this.setState({ activeMenu : active, leftOpen : false });\r\n    }\r\n    onEditMenu = isMenuEdit =>\r\n    {\r\n        this.setState({ isMenuEdit: !isMenuEdit })\r\n    }\r\n    onChangeMenu = (newMenu) =>\r\n    {\r\n        this.setState({ menu: newMenu })\r\n    }\r\n    onRange = (event, intervalDuration)  =>\r\n    {\r\n        let profile = JSON.parse(JSON.stringify(this.state.profile))\r\n        profile.intervalDuration = intervalDuration;\r\n        if (this.state.profile.intervalDuration < intervalDuration) {\r\n            let relation = intervalDuration / this.state.profile.intervalDuration;\r\n            let newIntervals = [];\r\n            for (let i = 0; i < this.state.profile.intervals.length; i+=relation) {\r\n                newIntervals.push(this.state.profile.intervals.slice(i, i+relation));\r\n            }\r\n            profile.intervals = newIntervals.map(chunk => Math.round(chunk.reduce((a, b) => a + b, 0) / relation));\r\n        }\r\n        if (this.state.profile.intervalDuration > intervalDuration) {\r\n            let relation = this.state.profile.intervalDuration / intervalDuration;\r\n            let newIntervals = [];\r\n            let newIndex = 0;\r\n            this.state.profile.intervals.forEach((interval, index) => {\r\n               for (let shift = 0; shift < relation; shift++) {\r\n                   newIntervals[newIndex] = interval;\r\n                   newIndex++;\r\n               }\r\n            });\r\n            profile.intervals = newIntervals;\r\n        }\r\n        this.setState({ profile, leftOpen7: false });\r\n    }\r\n    render()\r\n    { \r\n        if (!this.state.loaded) \r\n        {\r\n            return <MuiThemeProvider theme={this.state.theme}>\r\n                <Loader theme={this.state.themeType} />\r\n            </MuiThemeProvider>;\r\n        }   \r\n        const { classes } = this.props;\r\n        const { menu, activeMenu, isMenuEdit, max_menu_id, profile } = this.state;\r\n\r\n        return <MuiThemeProvider theme={this.state.theme}>\r\n            <div className={classes.app}>\r\n                <Grid container \r\n                    spacing={0} \r\n                    style={{ background : this.state.theme.palette.background.paper }}\r\n                    className=\"mobile-scrolled\"\r\n                > \r\n                    <Grid \r\n                        item \r\n                        xs={12} \r\n                        lg={2} \r\n                            className={ \" h-100 sm-hidden \" }\r\n                    > \r\n                        <div \r\n                            className={\r\n                                'tapper-grid tapper-shadow h-100 clip-left-sm-1 m-0 ' + \r\n                                ( this.state.leftOpen === 1 ? ' active ' : '' ) +\r\n                                classes.paneling\r\n                            }\r\n                        > \r\n                            <div className='close-label-left-sm flow-dark ' onClick={() => this.onLeftOpen(1)}>\r\n                                <ClearIcon />\r\n                            </div>\r\n                            <ProfilesPanel\r\n                                active={activeMenu}\r\n                                isEdit={isMenuEdit}\r\n                                menu={menu}\r\n                                on={this.onMenu}\r\n                                max_menu_id={max_menu_id}\r\n                                onChangeMenu={this.onChangeMenu}\r\n                            />\r\n                        </div>\r\n                    </Grid>\r\n                    <Grid item xs={12} lg={ 9 } className=\"sliders-container\"> \r\n                        \r\n                        <IntervalsContainer \r\n                            type={ this.state.profile.type }\r\n                            intervals={ this.state.profile.intervals }\r\n                            onChange={ this.onIntervals }\r\n                            theme={ this.state.theme }\r\n                            range={profile.intervalDuration}\r\n                            windowWidth={ this.state.windowWidth }\r\n                        />\r\n                        {\r\n                            this.state.isExpert\r\n                                ? \r\n                                <div \r\n                                    className={\r\n                                        'tapper-grid tapper-shadow m-1 mt-1 clip_left_sm_7 '+ \r\n                                        classes.clip_left_sm_7 + \r\n                                        (this.state.leftOpen === 7 ? ' active ' :'') \r\n                                    }\r\n                                    style={{ }}\r\n                                >\r\n                                    <div className=\"close-label-left-sm flow-dark \" onClick={() => this.onLeftOpen(7)}>\r\n                                        <ClearIcon />\r\n                                    </div>\r\n                                    <div className=\"mt-sm-auto mb-sm-auto w-100\">\r\n                                        <AntTabs\r\n                                            value={ profile.intervalDuration }\r\n                                            onChange={ this.onRange } \r\n                                            orientation={ this.state.windowWidth < 768 ? 'vertical' : 'horizontal' }                                            \r\n                                            indicatorColor=\"primary\"\r\n                                            textColor=\"primary\"\r\n                                            centered\r\n                                        >\r\n                                            {\r\n                                                [0.5, 1, 2, 3, 4].map(duration => \r\n                                                    <AntTab key={duration} value={duration} label={duration + ' ' + I18n.t('hr')} />\r\n                                                )\r\n                                            }\r\n                                        </AntTabs>\r\n                                    </div>\r\n                                </div>\r\n                                    :\r\n                                    null\r\n                        }\r\n                        <Grid container \r\n                            spacing={0}   \r\n                        > \r\n                        {\r\n                            this.state.isExpert\r\n                                ? \r\n                                <Grid \r\n                                    item \r\n                                    xs={12} \r\n                                    lg={3}  \r\n                                    className={ \"h-100 expert sm-hidden \" }\r\n                                >\r\n                                    <div \r\n                                        className={\r\n                                            \"tapper-grid tapper-shadow h-100 m-1 p-2 clip_left_sm_2 \" + \r\n                                            classes.clip_left_sm_2 + \r\n                                            (this.state.leftOpen === 2 ? \" active \" :\"\")\r\n                                        }\r\n                                    > \r\n                                        <div className=\"close-label-left-sm flow-dark\" onClick={() => this.onLeftOpen(2)}>\r\n                                            <ClearIcon />\r\n                                        </div>\r\n                                        <div className=\"mt-sm-auto mb-sm-auto\">\r\n                                            <div>\r\n                                                <TypePanel\r\n                                                    on={this.onType}\r\n                                                    type={ this.state.profile.type }\r\n                                                \r\n                                                />\r\n                                            </div>\r\n                                           \r\n                                        </div>\r\n                                    </div> \r\n                                </Grid>    \r\n                                :\r\n                                null\r\n                            } \r\n                            <Grid \r\n                                item \r\n                                xs={12} \r\n                                lg={6}  \r\n                                className={ \"h-100 expert sm-hidden \" }\r\n                            >                                           \r\n                                <div className={\r\n                                        \"tapper-grid tapper-shadow m-1 p-2 mt-1 clip_left_sm_5 \"+ \r\n                                        classes.clip_left_sm_5 + \r\n                                        (this.state.leftOpen === 5 ? \" active \" :\"\") \r\n                                    }\r\n                                    style={{flexGrow:100}}\r\n                                >\r\n                                    <div className=\"close-label-left-sm flow-dark \" onClick={() => this.onLeftOpen(5)}>\r\n                                        <ClearIcon />\r\n                                    </div>\r\n                                    <div className=\"mt-sm-auto mb-sm-auto wc-100\">\r\n                                        <DevicesPanel\r\n                                            members={ this.state.profile.members }\r\n                                            onChange={ this.onDevices }\r\n                                            title={ this.state.isExpert ? \"Devices (expert)\" : \"Devices\" }\r\n                                            isExpert={ this.state.isExpert }\r\n                                            rows={ 1 }  \r\n                                            windowWidth={ this.state.windowWidth }\r\n                                        /> \r\n                                    </div>\r\n                                </div>\r\n                            </Grid>  \r\n                            {\r\n                                this.state.isExpert\r\n                                    ? \r\n                                    <Grid \r\n                                        item \r\n                                        xs={12} \r\n                                        lg={3}  \r\n                                        className={ \"h-100 expert sm-hidden \" }\r\n                                    > \r\n                                        <div \r\n                                            className={\r\n                                                \"tapper-grid tapper-shadow h-100 m-1 p-2 clip_left_sm_4 \"+ \r\n                                                classes.clip_left_sm_4 + \r\n                                                (this.state.leftOpen === 4 ? \" active \" :\"\")\r\n\r\n                                            }\r\n                                        > \r\n                                            <div className=\"close-label-left-sm flow-dark\" onClick={() => this.onLeftOpen(4)}>\r\n                                                <ClearIcon />\r\n                                            </div>\r\n                                            <div className=\"mt-sm-auto mb-sm-auto\">\r\n                                                <div className=\" \">\r\n                                                    <PriorityPanel\r\n                                                        profile={ this.state.profile }\r\n                                                        on={this.onPriority}\r\n                                                        priority={ this.state.profile.prio }\r\n                                                        windowWidth={this.state.windowWidth}\r\n                                                    \r\n                                                    />\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </Grid>    \r\n                                    :\r\n                                    null\r\n                            } \r\n                        </Grid> \r\n                    </Grid> \r\n                    <Grid \r\n                        item \r\n                        xs={12} \r\n                        lg={1} \r\n                        className={\r\n                            \"h-100  sm-hidden  \" \r\n                        }\r\n                    >\r\n                        <div \r\n                            className={\r\n                                \"tapper-grid tapper-shadow m-1 p-2 clip_right_sm_3 h-100 \"+ \r\n                                classes.clip_left_sm_2 + \r\n                                (this.state.leftOpen === 3 ? \" active \" :\"\")\r\n                            }                            \r\n                        >\r\n                            <div className=\"close-label-left-sm flow-dark\" onClick={() => this.onLeftOpen(3)}>\r\n                                <ClearIcon />\r\n                            </div>\r\n                            <div className=\"mt-sm-auto mb-sm-auto\">\r\n                                <DayOfWeekPanel\r\n                                    dow={ this.state.profile.dow }\r\n                                    onChange={ this.onDow }\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        \r\n                    </Grid> \r\n                    <div className=\"label-menu\" />\r\n                    <div className={\"label-left-sm-1 \" + (this.state.leftOpen === 1 ? \"active\" : \"\")} onClick={() => this.onLeftOpen(1)}>\r\n                        <DehazeIcon />\r\n                    </div>\r\n                    <div className={\"label-right-sm-5 \" + (this.state.leftOpen === 5 ? \"active\" : \"\")} onClick={() => this.onLeftOpen(5)}>\r\n                        <CallSplitIcon/>\r\n                    </div>\r\n                    <div className={\"label-right-sm-3 \" + (this.state.leftOpen === 3 ? \"active\" : \"\")} onClick={() => this.onLeftOpen(3)}>\r\n                        <CalendarTodayIcon/>\r\n                    </div>\r\n                    {\r\n                        this.state.isExpert\r\n                            ? \r\n                            <>\r\n                                <div className=\"label-menu-bottom\" />\r\n                                <div className={\"label-left-sm-2  expert \" + (this.state.leftOpen === 2 ? \"active\" : \"\")} onClick={() => this.onLeftOpen(2)}>\r\n                                    <AssignmentTurnedInIcon />\r\n                                </div>\r\n                                <div className={\"label-right-sm-6 \" + (this.state.leftOpen === 6 ? \"active\" : \"\")} onClick={() => this.onLeftOpen(6)}>\r\n                                    <CallSplitIcon/>\r\n                                </div>\r\n                                <div className={\"label-right-sm-4 \" + (this.state.leftOpen === 4 ? \"active\" : \"\")} onClick={() => this.onLeftOpen(4)}>\r\n                                    <ViewListIcon/>\r\n                                </div>\r\n                                <div className={\"label-right-sm-7 \" + (this.state.leftOpen === 7 ? \"active\" : \"\")} onClick={() => this.onLeftOpen(7)}>\r\n                                    <ScheduleIcon/>\r\n                                </div>\r\n\r\n                            </>\r\n                            :\r\n                            null\r\n                    } \r\n                    \r\n                </Grid>  \r\n            </div>\r\n        </MuiThemeProvider>;\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker === null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType !== null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport * as Sentry from '@sentry/browser';\r\nimport * as SentryIntegrations from '@sentry/integrations';\r\nimport { MuiThemeProvider} from '@material-ui/core/styles';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {version} from '../package.json';\r\n//import theme from './theme';\r\nimport theme from '@iobroker/adapter-react/Theme';\r\n\r\nimport Utils from '@iobroker/adapter-react/Components/Utils';\r\n\r\nwindow.adapterName = 'scheduler';\r\nlet themeName = Utils.getThemeName();\r\n\r\n// console.log(`iobroker.${window.adapterName}@${version} using theme \"${themeName}\"`);\r\n\r\nfunction build() {\r\n    return ReactDOM.render(\r\n        <MuiThemeProvider theme={theme(themeName)}>\r\n            <App\r\n                onThemeChange={_theme => {\r\n                    themeName = _theme;\r\n                    build();\r\n                }}\r\n            />\r\n        </MuiThemeProvider>,\r\n        document.getElementById('root')\r\n    );\r\n}\r\n\r\nif (false && window.location.host !== 'localhost:3000') {\r\n    Sentry.init({\r\n        dsn: 'https://5ad729dbed504d15aa8bde423cae9a8e@sentry.iobroker.net/57',\r\n        release: `iobroker.${window.adapterName}@${version}`,\r\n        integrations: [\r\n            new SentryIntegrations.Dedupe()\r\n        ]\r\n    });\r\n}\r\n\r\nbuild();\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}