{"version":3,"sources":["Tabs/Options.js","components/TapperPanel.js","components/TypePanel.js","components/PriorityPanel.js","components/SliderSingle.js","assets/img/day-night.jpg","components/DayNightSwitcher.js","components/Swiper_2.js","components/Sliders.js","components/TapperRightPanel.js","components/DevicesPanel.js","components/EditPanel.js","App.js","serviceWorker.js","index.js"],"names":["Options","props","state","toast","this","Snackbar","anchorOrigin","vertical","horizontal","open","autoHideDuration","onClose","setState","ContentProps","message","id","action","IconButton","aria-label","color","className","classes","close","onClick","title","attr","style","FormControlLabel","Object","assign","paddingTop","controlElement","control","Checkbox","checked","native","onChange","label","I18n","t","tab","clsx","column","columnSettings","renderToast","Component","withStyles","theme","width","minHeight","display","verticalAlign","marginRight","TapperPanel","on","isEdit","onDialog","isDialogOpen","onEditDialog","element","element_title","element_id","element_n","n","element_parent","parent","isnew","onUpdateItem","evt","menu","newMenu","push","forEach","e","i","onChangeMenu","max_menu_id","onDeleteItem","onAddChild","active","nextProps","items","dialog_content","map","submenus","filter","sub","index","MenuItem","disableRipple","Typography","variant","MenuList","Dialog","aria-labelledby","DialogTitle","htmlFor","Input","value","target","startAdornment","InputAdornment","position","Button","TypePanel","type","_width","FormControl","component","FormLabel","Select","labelId","PriorityPanel","priority","SliderSingle","handleSliderChange","event","data","handleSelected","selected","field","getLabel","step","parseInt","slice","options","defaultOptopns","postfix","redraw","PrettoSlider","root","palette","primary","dark","borderRadius","height","transition","thumb","valueLabel","left","background","fontWeight","fontSize","track","rail","borderBottomLeftRadius","borderBottomRightRadius","backgroundColor","light","Slider","nextState","console","log","setTimeout","render","max","getMinMax","toString","undefined","min","__Slider","marginBottom","staff","getPostfix","orientation","bottom","marginLeft","DayNightSwitcher","onSlide","quorte_id","sections","document","getElementById","nextStyle","region","quortes","Array","fill","_","src","day_night","alt","maxWidth","Swiper","setSections","setCount","count","getSectionByRange","range","getCountByRange","getMaxByRange","getStepByRange","sectionsByRange","prev","slide_id","setSlide_id","next","selectAll","selectNone","length","onSwipedDown","onSwipeEnd","onSwipeListener","x","onTransitionEnd","window","isLoading","sliders","nodeName","mouseSwipe","onSwipe","onSwipedLeft","onSwipeLeftListener","onSwipedRight","onSwipeRightListener","getSlide","Sliders","defaultData","labels","car","React","createRef","addEventListener","updateWindowDimensions","removeEventListener","w","getBoundingClientRect","innerWidth","_height","innerHeight","_w","padding","paddingBottom","default","TapperRightPanel","RadioGroup","defaultValue","name","DivicesPanel","CssTextField","margin","TextField","placeholder","helperText","fullWidth","multiline","rows","InputLabelProps","shrink","EditPanel","mobile_panel","flexDirection","alignItems","backgrounds","App","extendedProps","encryptedFields","translations","require","onLeftOpen1","leftOpen","leftOpen2","leftOpen3","leftOpen4","leftOpen5","leftOpen6","leftOpen7","onLeftOpen2","onLeftOpen3","onLeftOpen4","onLeftOpen5","onLeftOpen6","onLeftOpen7","onType","onPriority","onMenu","activeMenu","onEditMenu","isMenuEdit","onRange","isExpert","SchedullerApp","selectedTab","loaded","themeType","AntTabs","justifyContent","indicator","Tabs","AntTab","minWidth","opacity","Tab","app","Grid","container","spacing","paper","item","xs","lg","clip_left_sm_7","indicatorColor","textColor","centered","clip_left_sm_2","clip_left_sm_5","flexGrow","clip_left_sm_4","week","GenericApp","tabContent","overflow","tabContentIFrame","clip_left_sm_6","Boolean","location","hostname","match","adapterName","themeName","Utils","getThemeName","build","ReactDOM","onThemeChange","_theme","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.30b62886.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\n\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nimport {MdClose as IconClose} from 'react-icons/md';\r\n\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\nimport Logo from '@iobroker/adapter-react/Components/Logo';\r\n\r\nconst styles = theme => ({\r\n    tab: {\r\n        width: '100%',\r\n        minHeight: '100%'\r\n    },\r\n    column: {\r\n        display: 'inline-block',\r\n        verticalAlign: 'top',\r\n        marginRight: 20\r\n    },\r\n    columnSettings: {\r\n        width: 'calc(100% - 370px)',\r\n    },\r\n});\r\n\r\nclass Options extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            toast: '',\r\n        };\r\n    }\r\n\r\n    renderToast() {\r\n        if (!this.state.toast) {\r\n            return null;\r\n        }\r\n\r\n        return <Snackbar\r\n            anchorOrigin={{\r\n                vertical: 'bottom',\r\n                horizontal: 'left',\r\n            }}\r\n            open={true}\r\n            autoHideDuration={6000}\r\n            onClose={() => this.setState({toast: ''})}\r\n            ContentProps={{\r\n                'aria-describedby': 'message-id',\r\n            }}\r\n            message={<span id=\"message-id\">{this.state.toast}</span>}\r\n            action={[\r\n                <IconButton\r\n                    key=\"close\"\r\n                    aria-label=\"Close\"\r\n                    color=\"inherit\"\r\n                    className={this.props.classes.close}\r\n                    onClick={() => this.setState({toast: ''})}\r\n                >\r\n                    <IconClose />\r\n                </IconButton>,\r\n            ]}\r\n        />;\r\n    }\r\n\r\n    renderCheckbox(title, attr, style) {\r\n        return <FormControlLabel key={attr} style={Object.assign({paddingTop: 5}, style)} className={this.props.classes.controlElement}\r\n              control={\r\n                  <Checkbox\r\n                      checked={this.props.native[attr]}\r\n                      onChange={() => this.props.onChange(attr, !this.props.native[attr])}\r\n                      color=\"primary\"\r\n                  />\r\n              }\r\n              label={I18n.t(title)}\r\n        />;\r\n    }\r\n\r\n    render() {\r\n        return <form className={ this.props.classes.tab }>\r\n            {/*\r\n            <Logo\r\n                classes={{}}\r\n                instance={ this.props.instance }\r\n                common={ this.props.common }\r\n                native={ this.props.native }\r\n                onError={ text => this.setState({errorText: text}) }\r\n                onLoad={ this.props.onLoad }\r\n            />\r\n            */}\r\n            <div className={clsx(this.props.classes.column, this.props.classes.columnSettings) }>\r\n                Place your code here\r\n            </div>\r\n            { this.renderToast() }\r\n        </form>;\r\n    }\r\n}\r\n\r\nOptions.propTypes = {\r\n    common: PropTypes.object.isRequired,\r\n    native: PropTypes.object.isRequired,\r\n    instance: PropTypes.number.isRequired,\r\n    adapterName: PropTypes.string.isRequired,\r\n    onError: PropTypes.func,\r\n    onLoad: PropTypes.func,\r\n    onChange: PropTypes.func,\r\n    changed: PropTypes.bool,\r\n    socket: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(Options);\r\n","import { Button, Dialog, DialogTitle, FormControl, Input, InputAdornment, InputLabel, MenuItem, MenuList, TextField, Typography } from \"@material-ui/core\";\r\nimport React, { Component, Fragment } from \"react\";\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\n\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport PlaylistAddIcon from '@material-ui/icons/PlaylistAdd'; \r\n\r\nclass TapperPanel extends Component\r\n{\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.state ={\r\n            ...props,\r\n            active: typeof props.active !== \"undefined\" ? props.active : 0,\r\n            isDialogOpen : false\r\n        }\r\n    }\r\n    componentWillUpdate(nextProps)\r\n    {\r\n        if(nextProps.active != this.state.active)\r\n        {\r\n            this.setState({ active: nextProps.active });\r\n        }\r\n        if(nextProps.menu != this.state.menu)\r\n        {\r\n            this.setState({ menu: nextProps.menu });\r\n        }\r\n        if(nextProps.isEdit != this.state.isEdit)\r\n        {\r\n            this.setState({ isEdit: nextProps.isEdit });\r\n        }\r\n    }\r\n    onClick = id =>\r\n    { \r\n        if(this.props.on && !this.state.isEdit)\r\n        {\r\n            this.props.on( id )\r\n        }\r\n    }\r\n    onDialog = () =>\r\n    {\r\n        this.setState({ isDialogOpen : !this.state.isDialogOpen })\r\n    }\r\n    onEditDialog = element =>\r\n    { \r\n        this.setState(\r\n            { \r\n                isDialogOpen : true,\r\n                element_title: element.title,\r\n                element_id: element.id,\r\n                element_n : element.n,\r\n                element_parent: element.parent,\r\n                isnew: false\r\n            }\r\n        )\r\n    }\r\n    onUpdateItem = evt =>\r\n    {\r\n        let menu = [ ...this.state.menu ];\r\n        let newMenu= [];\r\n        if(this.state.isnew)\r\n        {\r\n            newMenu = [...menu];\r\n            newMenu.push({\r\n                n: this.state.element_n,\r\n                id : this.state.element_id,\r\n                title : this.state.element_title,\r\n                parent: this.state.element_parent  \r\n            })\r\n        }\r\n        else\r\n        {\r\n            menu.forEach((e, i) =>\r\n            {\r\n                if(e.n == this.state.element_n)\r\n                {\r\n                    newMenu[ i ] ={\r\n                        n: this.state.element_n,\r\n                        id : this.state.element_id,\r\n                        title : this.state.element_title,\r\n                        parent: this.state.element_parent                      \r\n                    };\r\n                }\r\n                else\r\n                    newMenu[i] = e;\r\n            }); \r\n        }\r\n        \r\n        this.setState({ menu:newMenu,  isDialogOpen : false,  isnew : false });\r\n        if(this.props.onChangeMenu)\r\n        {\r\n            this.props.onChangeMenu(newMenu, this.state.max_menu_id)\r\n        }\r\n    }\r\n    onDeleteItem = () =>\r\n    {\r\n        let menu = [ ...this.state.menu ];\r\n        let newMenu = [];\r\n        menu.forEach((e, i) =>\r\n        {\r\n            if(e.n == this.state.element_n)\r\n            {\r\n                \r\n            }\r\n            else\r\n                newMenu.push(e);\r\n        }); \r\n        this.setState({ menu:newMenu,  isDialogOpen : false,  isnew : false });\r\n        if(this.props.onChangeMenu)\r\n        {\r\n            this.props.onChangeMenu(newMenu, this.state.max_menu_id)\r\n        }\r\n    }\r\n    onAddChild = element =>\r\n    {        \r\n        this.setState(\r\n            { \r\n                isDialogOpen : true,\r\n                element_title: \"new title\",\r\n                element_id:  \"new-id\",\r\n                element_n :  this.state.max_menu_id + 1,\r\n                max_menu_id: this.state.max_menu_id + 1,\r\n                element_parent: element.n,\r\n                isnew: true\r\n            }\r\n        )\r\n    }\r\n    render()\r\n    {\r\n        const {active, menu, isEdit, isDialogOpen, dialog_content } = this.state;\r\n        const items = menu.map((e, i) =>\r\n        {\r\n            if(e.parent == \"\")\r\n            {\r\n                const submenus = menu\r\n                    .filter(sub => sub.parent == e.n )\r\n                        .map((sub, index) =>\r\n                        { \r\n                            return <MenuItem   \r\n                                key={sub.n}                  \r\n                                className={ \"flow-menu-item sub \" + ( isEdit ? \" disable \" : active == sub.n ? \" active \" : \"\") } \r\n                                onClick={() => this.onClick( sub.n )} \r\n                                disableRipple\r\n                            >\r\n                                <Typography variant=\"inherit\">\r\n                                    {I18n.t( sub.title  )}\r\n                                </Typography>\r\n                                {\r\n                                    isEdit\r\n                                        ?\r\n                                        <div className=\"absolute-right\">\r\n                                            <div \r\n                                                className=\"edit_button\" \r\n                                                title={I18n.t(\"Add new child\")} \r\n                                                onClick={ () => this.onEditDialog( sub ) }\r\n                                            >\r\n                                                <EditIcon />\r\n                                            </div> \r\n                                        </div>\r\n                                        :\r\n                                        null\r\n                                }\r\n                            </MenuItem>\r\n                        }) \r\n                return <div key={ e.n }>\r\n                    <MenuItem                     \r\n                        className={ \"flow-menu-item\" + ( isEdit ? \" disable \" : active == e.n ? \" active \" : \"\") } \r\n                        onClick={() => this.onClick( e.n )} \r\n                        \r\n                        disableRipple\r\n                    >\r\n                        <Typography variant=\"inherit\">\r\n                            {I18n.t( e.title  )}\r\n                        </Typography>\r\n                        {\r\n                            isEdit\r\n                                ?\r\n                                <div className=\"absolute-right\">\r\n                                    <div \r\n                                        className=\"edit_button\" \r\n                                        title={I18n.t(\"Add new child\")} \r\n                                        onClick={() =>this.onAddChild( e )}\r\n                                    >\r\n                                        <PlaylistAddIcon />\r\n                                    </div>\r\n                                    <div \r\n                                        className=\"edit_button\" \r\n                                        title={I18n.t(\"Edit button\")}  \r\n                                        onClick={() => this.onEditDialog( e )}\r\n                                    >\r\n                                        <EditIcon />\r\n                                    </div>\r\n                                </div>\r\n                                :\r\n                                null\r\n                        }\r\n                    </MenuItem>\r\n                    { submenus }\r\n                </div>\r\n            }               \r\n            else\r\n               return null\r\n        })\r\n        return <div className=\"flow-menu  scrolled-auto\">\r\n            <MenuList>\r\n                { items }\r\n            </MenuList>\r\n            {\r\n                isEdit\r\n                    ?\r\n                    <div className=\"flow-menu \">\r\n                        <div \r\n                            className={\"tapper-edit w-100\"}\r\n                            onClick={ () =>this.onAddChild( { n : \"\" } ) } \r\n                        >\r\n                        <PlaylistAddIcon />  {I18n.t( \"Add Button\")}\r\n                        </div>            \r\n                    </div>\r\n                    :\r\n                    null\r\n            }\r\n            \r\n            <Dialog \r\n                onClose={ this.onDialog } \r\n                aria-labelledby=\"simple-dialog-title\" \r\n                open={isDialogOpen}\r\n            >\r\n                <DialogTitle id=\"simple-dialog-title\">\r\n                    {I18n.t(\"Edit button\")}\r\n                </DialogTitle>\r\n                <div className=\"p-2\" style={{ width:250, minHeight:200 }}>\r\n                    <div className=\"p-2\">\r\n                        <div htmlFor=\"menu-item\">\r\n                            {I18n.t( \"menu item\" )}\r\n                        </div>\r\n                        <Input \r\n                            id=\"menu-item\" \r\n                            value={ this.state.element_id } \r\n                            onChange={ evt => this.setState({ element_id : evt.target.value })} \r\n                            startAdornment={\r\n                                <InputAdornment position=\"start\">\r\n                                    <EditIcon />\r\n                                </InputAdornment>\r\n                            }\r\n                        />\r\n                    </div> \r\n                    <div className=\"p-2\">\r\n                        <div htmlFor=\"label\">\r\n                            {I18n.t( \"label\" )}\r\n                        </div>\r\n                        <Input \r\n                            id=\"label\" \r\n                            value={ this.state.element_title } \r\n                            onChange={ evt => this.setState({ element_title : evt.target.value })} \r\n                            startAdornment={\r\n                                <InputAdornment position=\"start\">\r\n                                    <EditIcon />\r\n                                </InputAdornment>\r\n                            }/>\r\n                    </div> \r\n                    <div>\r\n                        <Button onClick={ this.onUpdateItem }>\r\n                            {I18n.t( this.state.isnew ? \"create\" : \"update\" )}\r\n                        </Button>\r\n                        {\r\n                            this.state.isnew\r\n                                ?\r\n                                null\r\n                                :\r\n                                <Button onClick={ this.onDeleteItem }>\r\n                                    {I18n.t( \"delete button\" )}\r\n                                </Button>\r\n\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </Dialog>\r\n        </div>\r\n    }\r\n\r\n}\r\nexport default TapperPanel;","import React, { Component } from \"react\";\r\nimport { FormControl, FormControlLabel, FormLabel, InputLabel, MenuItem, Radio, RadioGroup, Select } from \"@material-ui/core\";\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\n\r\nclass TypePanel extends Component\r\n{\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.state ={\r\n            type: props.type,\r\n            _width: props._width\r\n        \r\n        }\r\n    }\r\n    on = evt =>\r\n    {\r\n        const type = evt.target.value;\r\n        if( type )\r\n        {\r\n            this.setState({type});\r\n            if( this.props.on )\r\n                this.props.on(type);\r\n        }\r\n            \r\n        \r\n    }\r\n    render()\r\n    {\r\n        const{type} = this.state;\r\n        return <FormControl component=\"fieldset\" className=\"w-100\"> \r\n                <FormLabel component=\"legend\" className=\"tapper-title\">{ I18n.t( \"Type\" ) }</FormLabel>\r\n                <Select\r\n                    labelId=\"type-select-label\"\r\n                    id=\"type-select\" \r\n                    className=\"w-100\"\r\n                    value={type}\r\n                    onChange={ this.on }\r\n                >\r\n                    <MenuItem value={\"persent\"}>\r\n                        {I18n.t( \"Persent\")}\r\n                    </MenuItem>\r\n                    <MenuItem value={\"temperature\"}>\r\n                        {I18n.t( \"Temperature\")}\r\n                    </MenuItem>\r\n                    <MenuItem value={\"onnoff\"}>\r\n                        {I18n.t( \"On/Off\")}\r\n                    </MenuItem>\r\n                </Select>\r\n                {/*\r\n                <RadioGroup defaultValue=\"female\" aria-label=\"gender\" name=\"customized-radios\">\r\n                    <FormControlLabel \r\n                        value=\"persent\" \r\n                        control={\r\n                            <Radio \r\n                                color=\"primary\" \r\n                                className={ \"flow-little checkbox\" } \r\n                                checked={this.state.type == \"persent\"}\r\n                                disableRipple\r\n                                onChange={ evt => this.on( evt, \"persent\" ) }\r\n                            />\r\n                        } \r\n                        className=\"px-1\"\r\n                        label={I18n.t( \"Persent\")} \r\n                    />\r\n                    <FormControlLabel \r\n                        value=\"temperature\" \r\n                        control={\r\n                            <Radio \r\n                                color=\"primary\" \r\n                                className={ \"flow-little checkbox\" } \r\n                                checked={this.state.type == \"temperature\"}\r\n                                disableRipple\r\n                                onChange={ evt => this.on( evt, \"temperature\" ) }\r\n                            />} \r\n                        className=\"px-1\"\r\n                        label={I18n.t( \"Temperature\")} \r\n                    />\r\n                    <FormControlLabel \r\n                        value=\"onnoff\" \r\n                        control={\r\n                            <Radio \r\n                                color=\"primary\" \r\n                                checked={this.state.type == \"onnoff\"}\r\n                                className={ \"flow-little checkbox\" } \r\n                                disableRipple\r\n                                onChange={ evt => this.on( evt,  \"onnoff\" ) }\r\n                            />\r\n                        } \r\n                        className=\"px-1\"\r\n                        label={I18n.t( \"On/Off\")} \r\n                    />\r\n                </RadioGroup>\r\n                */}\r\n            </FormControl>\r\n    }\r\n\r\n}\r\nexport default TypePanel;","import React, { Component } from \"react\";\r\nimport { FormControl, FormControlLabel, FormLabel, InputLabel, MenuItem, Radio, RadioGroup, Select } from \"@material-ui/core\";\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\n\r\nclass PriorityPanel extends Component\r\n{\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.state ={\r\n            priority: props.priority\r\n        }\r\n    }\r\n    on = evt =>\r\n    {\r\n        const priority = evt.target.value\r\n        if( priority )\r\n        {\r\n            this.setState({ priority });\r\n            if( this.props.on )\r\n                this.props.on( priority );\r\n        }\r\n            \r\n        \r\n    }\r\n    render()\r\n    {\r\n        const{priority} = this.state;\r\n        return <FormControl component=\"fieldset\"  className=\"w-100\"> \r\n            <FormLabel component=\"legend\" className=\"tapper-title\">{ I18n.t( \"Priority\" ) }</FormLabel>\r\n            <Select\r\n                labelId=\"demo-simple-select-label\"\r\n                id=\"demo-simple-select\"\r\n                className=\"w-100\"\r\n                value={priority}\r\n                onChange={ this.on }\r\n            >\r\n                <MenuItem value={\"normal\"}>\r\n                    {I18n.t( \"Normal\")}\r\n                </MenuItem>\r\n                <MenuItem value={\"high\"}>\r\n                    {I18n.t( \"High\")}\r\n                </MenuItem>\r\n                <MenuItem value={\"highest\"}>\r\n                    {I18n.t( \"Highest eg. Holiday\")}\r\n                </MenuItem>\r\n            </Select>\r\n            {/*\r\n            <RadioGroup \r\n                defaultValue=\"female\" \r\n                aria-label=\"gender\"\r\n                name=\"customized-radios\"\r\n            >\r\n                <FormControlLabel \r\n                    value=\"normal\" \r\n                    control={\r\n                        <Radio \r\n                            color=\"primary\"\r\n                            className={ \"flow-little checkbox\" } \r\n                            disableRipple\r\n                        />\r\n                    } \r\n                    className=\"px-1\"\r\n                    label={I18n.t( \"Normal\")}\r\n                />\r\n                <FormControlLabel \r\n                    value=\"high\" \r\n                    control={\r\n                        <Radio \r\n                            color=\"primary\"\r\n                            className={ \"flow-little checkbox\" } \r\n                            disableRipple\r\n                        />\r\n                    } \r\n                    className=\"px-1\"\r\n                    label={I18n.t( \"High\")} \r\n                />\r\n                <FormControlLabel \r\n                    value=\"highest\" \r\n                    control={\r\n                        <Radio \r\n                            color=\"primary\"  \r\n                            className={ \"flow-little checkbox\" } \r\n                            disableRipple\r\n                        />\r\n                    } \r\n                    className=\"px-1\"\r\n                    label={I18n.t( \"Highest eg. Holiday\")} \r\n                />\r\n            </RadioGroup>\r\n            */}\r\n        </FormControl> \r\n    }\r\n\r\n}\r\nexport default PriorityPanel;","import { Component } from \"react\";\r\nimport { withStyles, makeStyles, useStyles } from '@material-ui/core/styles';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport defaultOptopns from \"../data/defaultOptopns.json\"\r\nimport defaultData from \"../data/defaultData.json\" \r\nimport chroma from \"chroma-js\"; \r\nimport { Button, Checkbox, Fab, FormControlLabel, Typography } from \"@material-ui/core\"; \r\nimport { PhonelinkRingSharp } from \"@material-ui/icons\";\r\n\r\nconst styles = theme => ({\r\n    \r\n});\r\nclass SliderSingle extends Component\r\n{\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.state ={\r\n            options : props.options\r\n                ?\r\n                props.options\r\n                :\r\n                defaultOptopns.options,\r\n            value : props.value,\r\n            label : props.label,\r\n            step : props.step,\r\n            selected : props.selected,\r\n            i : props.i,\r\n            postfix : props.postfix,\r\n            type : props.type,\r\n            theme : props.theme,\r\n            _width : props._width\r\n        }\r\n    }\r\n    componentWillMount()\r\n    {\r\n        this.redraw();  \r\n    }\r\n\r\n    redraw()\r\n    {   \r\n        const { options, _width, theme } = this.state; \r\n        // console.log( theme ) \r\n        this.PrettoSlider = withStyles({\r\n            root: {\r\n              //color: options.backgrounds[ 2 ],\r\n              color: theme.palette.primary.dark,\r\n              width: _width + \"px!important\",\r\n              borderRadius: 0,\r\n              height: \"calc(100% - 165px)!important\",\r\n              transition: \"all 100ms ease-out\",\r\n              position: \"relative\"\r\n            },\r\n            thumb: {\r\n                display:\"none\"\r\n            },\r\n            active: {\r\n                \r\n            },\r\n            valueLabel: {\r\n              left: \"calc(-50% + \" + _width/2 + \"px)!important\",\r\n              '& *': {\r\n                background: 'transparent',\r\n                fontWeight: 100,\r\n                borderRadius:0,\r\n                fontSize: \"1.0rem\", \r\n                width: \"90%!important\",\r\n                transition: \"all 100ms ease-out\" \r\n              },\r\n            },\r\n            track: {\r\n                width: \"90%!important\",\r\n                transition: \"all 100ms ease-out\",\r\n                borderRadius:4                \r\n            },\r\n            rail: { \r\n                transition: \"all 100ms ease-out\",\r\n                width: \"90%!important\",\r\n                borderRadius: 4, \r\n                borderBottomLeftRadius: \"0px!important\",  \r\n                borderBottomRightRadius: \"0px!important\",  \r\n                height:\"calc(100% + \" + _width + \"px)\",\r\n                // backgroundColor:\"#FFF\",\r\n                backgroundColor:theme.palette.primary.light,\r\n            },\r\n        })(Slider);\r\n    }\r\n    componentWillUpdate(nextProps, nextState )\r\n    {\r\n        if( nextProps.selected != this.state.selected )\r\n        { \r\n            this.setState({ selected: nextProps.selected });\r\n        }\r\n        if( nextProps.step != this.state.step )\r\n        { \r\n            this.setState({ step: nextProps.step });\r\n        }\r\n        if( nextProps.value != this.state.value )\r\n        {\r\n            this.setState({ value: nextProps.value })\r\n        }    \r\n        if( nextProps.theme != this.state.theme )\r\n        {\r\n            this.setState({ theme: nextProps.theme })\r\n        }       \r\n        if( nextProps._width != this.state._width )\r\n        {\r\n            console.log( nextProps._width );            \r\n            this.setState({ _width: nextProps._width });            \r\n            setTimeout( () => {\r\n                this.redraw();\r\n                this.render()\r\n            }, 30 )\r\n        }       \r\n        if( nextProps.type != this.state.type)\r\n        {\r\n            const { max }= this.getMinMax(nextProps.type);\r\n            let state = { type : nextProps.type };\r\n            if(max < this.state.value)\r\n            {\r\n                console.log(max, this.state.value)\r\n                state.value = max;\r\n                console.log( state )\r\n            }\r\n            this.setState( state )\r\n            this.redraw();\r\n        }\r\n    }\r\n    handleSliderChange = ( event, data) =>\r\n    {\r\n        //this.setState({value: data});\r\n        this.on( \"data\", data );\r\n    }\r\n    handleSelected = evt =>\r\n    { \r\n        this.on( \"selected\", !this.state.selected );\r\n    }\r\n    on = (field, value) =>\r\n    {\r\n        if(this.props.on)\r\n        {\r\n            this.props.on( field, value, this.props.i );\r\n        }\r\n    }\r\n    getPostfix(value)\r\n    {\r\n        switch(this.state.type)\r\n        {\r\n            case \"temperature\":\r\n                return value.toString() + \"º\";\r\n            case \"onnoff\":\r\n                return value \r\n                    ? \r\n                    <span className=\"text-success\">on</span> \r\n                    : \r\n                    <span className=\"text-danger\">off</span>\r\n            case \"persent\":\r\n            default:\r\n                return value.toString() + \"%\";\r\n        }\r\n    }\r\n    getMinMax( type = undefined)\r\n    {\r\n        const t = type ? type : this.state.type;\r\n        switch( t )\r\n        {\r\n            case \"temperature\":\r\n                return defaultOptopns.options;\r\n            case \"onnoff\":\r\n                return { min:0, max: 1 };\r\n            default:\r\n            case \"persent\":\r\n                return { min:0, max:100 };\r\n        }\r\n    }\r\n    getLabel = () =>\r\n    {\r\n        const {i, step} = this.state;\r\n        let label = i * step;\r\n        const hrs = parseInt(label)\r\n        const secs = ( \"0\" + ( label % 1 * 60) ).slice( -2 ) ;\r\n        return [hrs, secs];\r\n    }\r\n    render()\r\n    {\r\n        const {i, value, step, selected, options } = this.state;\r\n        if(i < 0 )\r\n        {\r\n            return \"\";\r\n        }\r\n        const{min, max} = this.getMinMax();\r\n        const __Slider = this.PrettoSlider;\r\n        const label = this.getLabel();\r\n        return <span className=\"pretto\" >\r\n            <span className=\"pretto-label\" style={{ marginBottom: options.staff.width / 2 + 20 }}>\r\n                { this.getPostfix( value || 0 ) } \r\n            </span>\r\n            <__Slider\r\n                key={i}\r\n                orientation=\"vertical\"  \r\n                aria-label=\"pretto slider\"\r\n                value={ value }\r\n                min={min}\r\n                max={max}\r\n                selected= { selected }\r\n                onChange={ this.handleSliderChange }\r\n            /> \r\n            <div \r\n                className={\"pretto-time flow-square\" + ( selected ? \" active\" : \"\" )} \r\n                style={{                           \r\n                    bottom:-(options.staff.width + 0),\r\n                    marginLeft:7,\r\n                    width:\"calc(100% - 14px)\" \r\n                }}\r\n                i={i}\r\n                onClick={this.handleSelected}\r\n            >\r\n                <span>{ label[0] }</span><span className=\"pretto-secs\">{label[1]}</span>\r\n                    \r\n            </div>\r\n        </span>  \r\n    }\r\n}\r\nexport default withStyles(styles)(SliderSingle);","export default __webpack_public_path__ + \"static/media/day-night.d6f09cbf.jpg\";","import { Component } from \"react\";\r\nimport day_night from \"../assets/img/day-night.jpg\"\r\n\r\nclass DayNightSwitcher extends Component\r\n{\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.state = {\r\n            quorte_id : props.quorte_id || 0,\r\n            sections  : props.sections,\r\n            height:     0\r\n        }\r\n    }\r\n    componentDidMount()\r\n    {\r\n        setTimeout(()=>\r\n        {\r\n            this.setState({\r\n                height : this.state.sections == 1\r\n                    ?\r\n                    0\r\n                    :\r\n                    document.getElementById(\"day-night\").height\r\n            }) \r\n        })\r\n        \r\n    }\r\n    componentWillUpdate(nextProps, nextStyle)\r\n    {\r\n        if(nextProps.sections != this.state.sections)\r\n        {\r\n            this.setState({ \r\n                sections : nextProps.sections, \r\n                quorte_id : this.state.quorte_id < nextProps.sections\r\n                    ? \r\n                    this.state.quorte_id\r\n                    :\r\n                    nextProps.sections - 1,\r\n                height : nextProps.sections == 1\r\n                    ?\r\n                    0\r\n                    :\r\n                    document.getElementById(\"day-night\").height\r\n            })\r\n        } \r\n        \r\n        if(nextProps.quorte_id != this.state.quorte_id)\r\n        {\r\n            this.setState({ \r\n                quorte_id : nextProps.quorte_id \r\n            })\r\n        } \r\n        /**/\r\n    }\r\n    onSlide = quorte_id =>\r\n    {\r\n        \r\n        if(this.props.on)\r\n        {\r\n            this.props.on( quorte_id )     \r\n        }\r\n        \r\n       /*this.setState({ quorte_id })*/\r\n    }\r\n    render()\r\n    {\r\n        const {sections, height} = this.state;\r\n        const region = 100 / sections;\r\n        const quortes = Array( sections ).fill().map((_, i) => \r\n        {\r\n            return <div \r\n                key={i}\r\n                className=\"day-night-quorte\" \r\n                onClick={()=> this.onSlide( i )}\r\n            >\r\n\r\n            </div>\r\n        })\r\n        return <div className=\"day_night_cont\" style={{ height }}>\r\n            <div>\r\n                <img src={ day_night } alt=\"day-night\" id=\"day-night\"/>\r\n                <div className=\"day_night\">\r\n                    \r\n                    { quortes }\r\n                    <div\r\n                        className=\"day-night-slide\"\r\n                        style={{ \r\n                            maxWidth: region + \"%\", \r\n                            width: region + \"%\", \r\n                            left: \"calc(\"+(this.state.quorte_id * region) +\"% - 5px)\" }}\r\n                    >\r\n                    </div>\r\n                </div>\r\n            </div>  \r\n        </div>\r\n    }\r\n}\r\nexport default DayNightSwitcher;","import React, { Component } from \"react\"; \r\nimport { Fragment } from \"react\";\r\nimport {Swipe} from 'react-swipe-component';\r\nimport DayNightSwitcher from \"./DayNightSwitcher\"\r\nimport SliderSingle from \"./SliderSingle\";\r\n\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport CodeIcon from '@material-ui/icons/Code'; \r\nimport ClearIcon from '@material-ui/icons/Clear';\r\n\r\nclass Swiper extends Component\r\n{\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.state = {\r\n            ...props,\r\n            count : this.getCountByRange( props.range || 0 ) , \r\n            sections: this.getSectionByRange( props.range || 0 ) ,\r\n            selected : [],\r\n            _width : props._width\r\n        }\r\n        window.Swiper = this;\r\n        \r\n    }\r\n    componentDidUpdate()\r\n    {\r\n    setTimeout(() => {\r\n        this.setState({ \r\n            count : this.getCountByRange( this.state.range ),\r\n            sections: this.getSectionByRange( this.state.range ) ,\r\n            isLoading:true \r\n        })\r\n    }, 200 )\r\n    }\r\n    componentWillUpdate(nextProps)\r\n    {\r\n        if(nextProps.type != this.state.type)\r\n        {\r\n            this.setState({ type : nextProps.type });\r\n        }\r\n        if(nextProps.theme != this.state.theme)\r\n        {\r\n            this.setState({ theme : nextProps.theme });\r\n        }\r\n        if(nextProps.range != this.state.range)\r\n        {\r\n            this.setState({ range : nextProps.range });\r\n            this.sectionsByRange( nextProps.range );\r\n            this.setState({slide_id:0})\r\n        }\r\n        if(nextProps._width != this.state._width)\r\n        {\r\n            this.setState({ _width : nextProps._width });\r\n        }\r\n    }\r\n    //\r\n    setSections = sections =>\r\n    {\r\n        this.setState({sections})\r\n    }\r\n    setCount = count =>\r\n    {\r\n        this.setState({ count })\r\n    }\r\n    getSectionByRange = range =>\r\n    {\r\n        if( this.state ? this.state._width >= 720 : this.props._width >= 720 )\r\n        {\r\n            return range == 0 ? 2 : 1;\r\n        }\r\n        switch( range )\r\n        {\r\n          case 0: \r\n            return 8; \r\n          case 1: \r\n            return 4; \r\n          case 2: \r\n            return 3; \r\n          case 4: \r\n            return 1; \r\n          case 3:\r\n          default: \r\n            return 2; \r\n        }\r\n    }\r\n    getCountByRange = range =>\r\n    {\r\n        if( this.state ? this.state._width >= 720 : this.props._width >= 720 )\r\n        {\r\n            return range == 0 ? 24 : this.getMaxByRange( range );\r\n        }\r\n        switch( range )\r\n        {\r\n          case 0: \r\n            return 6;\r\n          case 1:\r\n            return 6;\r\n          case 2:\r\n            return 4;\r\n          case 4:\r\n            return 6;\r\n          case 3:\r\n          default:\r\n            return 4;\r\n        }\r\n    }\r\n    getMaxByRange = range =>\r\n    {\r\n        return 24 / this.getStepByRange( range ) \r\n    }\r\n    getStepByRange = range =>\r\n    {\r\n        switch( range )\r\n        {\r\n          case 0: \r\n            return .5;\r\n          case 1:\r\n            return 1;\r\n          case 2:\r\n            return 2;\r\n          case 4:\r\n            return 4;\r\n          case 3:\r\n          default:\r\n            return 3;\r\n        }\r\n    }\r\n\r\n    sectionsByRange = range =>\r\n    {\r\n        this.setSections( this.getSectionByRange( range ) );\r\n        this.setCount( this.getCountByRange( range ) );\r\n    }\r\n\r\n    //\r\n    prev = () =>\r\n    {\r\n        const{ slide_id, count, data, range } = this.state;\r\n        console.log('swiped right')  \r\n        if(slide_id > 0)\r\n          this.setSlide_id( slide_id - 1 )\r\n        else\r\n          this.setSlide_id( this.getMaxByRange(range) / count );\r\n    }\r\n    next = () =>\r\n    {\r\n        const{ slide_id, count, data, range } = this.state;\r\n        console.log('swiped left')\r\n            if( slide_id < this.getMaxByRange(range) / count - 1 )\r\n        this.setSlide_id( slide_id + 1 );\r\n        else\r\n            this.setSlide_id( 0 );\r\n    }\r\n    selectAll = () =>\r\n    {\r\n        const{ range } = this.state;\r\n        this.setState( {selected: Array( this.getMaxByRange( range ) + 1).fill( 1 ).map( ( e, i ) => i ) } )\r\n    }\r\n    selectNone = () =>\r\n    {\r\n        this.setState( {selected: [] } )\r\n    }\r\n\r\n    setSlide_id = slide_id =>\r\n    {\r\n        this.setState( { slide_id : parseInt( slide_id ) } );\r\n    }\r\n    onChange = ( field, value, i ) =>\r\n    {     \r\n        const {slide_id, count, data, selected, type, sections, range} = this.state;\r\n        let state = {...this.state };\r\n        if( selected.filter( e  => e ).length == 0 || field == \"selected\")\r\n        {\r\n            state[ field ][i] = value; \r\n        }\r\n        else\r\n        {\r\n            state[ field ].forEach((element, index) => {\r\n                if( selected[index] )\r\n                {\r\n                    state[ field ][index] =  value;\r\n                }\r\n            });\r\n        } \r\n        this.setState( state )\r\n       \r\n    }\r\n    getSlide()\r\n    {\r\n        const {slide_id, count, data, selected, type, theme, _width, range, isLoading} = this.state;\r\n       \r\n        let sliders = []\r\n        for( let i = slide_id * count; i < ( slide_id + 1 ) * count; i++ )\r\n        {\r\n          sliders.push(\r\n            <SliderSingle\r\n                key={ i }\r\n                value={ data[ i ] } \r\n                selected= { selected[ i ] }\r\n                label={ \"\" }\r\n                i={ i }\r\n                step={this.getStepByRange( range )}\r\n                on={ this.onChange }\r\n                type={ type }\r\n                theme={ theme }\r\n                _width={ _width / count }\r\n            /> \r\n          )\r\n        }\r\n        return sliders;\r\n    }\r\n    // \r\n    onSwipedDown = evt =>\r\n    { \r\n\r\n    }\r\n    onSwipeEnd = evt =>\r\n    { \r\n\r\n    }\r\n    onSwipeLeftListener()\r\n    {\r\n        console.log(\"Swiped left\");\r\n        window.Swiper.prev();\r\n    }\r\n    onSwipeRightListener()\r\n    {\r\n        console.log(\"Swiped right\");\r\n        window.Swiper.next();\r\n    }\r\n    onSwipingRight()\r\n    {\r\n        console.log(\"onSwipingRight\");\r\n    }\r\n    onSwipingLeft() \r\n    {\r\n        console.log(\"onSwipingLeft\");\r\n    }\r\n    onSwipeListener = e =>\r\n    { \r\n        console.log(\"Swipe x: \", e.x, \" -- \" ); \r\n        \r\n    }\r\n    onTransitionEnd = () =>\r\n    {\r\n        console.log(\"onTransitionEnd\");\r\n    } \r\n    render()\r\n    {\r\n        const {slide_id, count, data, selected, type, sections, range, isLoading} = this.state;\r\n        if(!isLoading)  return \" \";\r\n        const selectorBtn = selected.length == 0\r\n            ?\r\n            <div className=\"left-button-add flow\" onClick={ this.selectAll }>\r\n                <CodeIcon/>\r\n            </div>\r\n            :\r\n            <div className=\"left-button-add flow\" onClick={ this.selectNone }>\r\n                <ClearIcon/>\r\n            </div>\r\n        return <Fragment> \r\n        <div className=\"swiper-content\"> \r\n            <Swipe\r\n                nodeName=\"div\"\r\n                className=\"h-100 w-100\"\r\n                mouseSwipe={false}\r\n                onSwipedDown={this.onSwipedDown}\r\n                onSwipeEnd={this.onSwipeEnd}\r\n                onSwipe={this.onSwipeListener}\r\n                onSwipedLeft={this.onSwipeLeftListener}\r\n                onSwipedRight={this.onSwipeRightListener} \r\n                onTransitionEnd={this.onTransitionEnd}\r\n            >\r\n                <div className=\"swiper\"> \r\n                    { this.getSlide() }\r\n                </div>            \r\n            </Swipe> \r\n        </div>\r\n        <DayNightSwitcher\r\n            sections={ sections }\r\n            quorte_id={ parseInt(slide_id ) }\r\n            on={ quorte_id => this.setSlide_id ( quorte_id ) }\r\n        />\r\n      </Fragment> ;\r\n    }\r\n}\r\nexport default Swiper;","import React, { Component } from \"react\";\r\nimport { withStyles, makeStyles, useStyles } from '@material-ui/core/styles'; \r\nimport defaultOptopns from \"../../src/data/defaultOptopns.json\"\r\nimport defaultData from \"../../src/data/defaultData.json\"  \r\nimport { Button, Checkbox, Fab, FormControlLabel, Typography } from \"@material-ui/core\"; \r\nimport SliderSingle from \"../../src/components/SliderSingle\";  \r\nimport Swiper from \"../../src/components/Swiper_2\";\r\n\r\nconst styles = theme => ({\r\n    tab: {\r\n        width: '100%',\r\n        minHeight: '100%'\r\n    },\r\n    column: {\r\n        display: 'inline-block',\r\n        verticalAlign: 'top',\r\n        marginRight: 20\r\n    },\r\n    columnSettings: {\r\n        width: 'calc(100% - 370px)',\r\n    },\r\n});\r\n\r\nclass Sliders extends Component\r\n{\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        window.Sliders = this;\r\n        this.state ={\r\n            data : props.data\r\n                ?\r\n                props.data\r\n                :\r\n                defaultData.data,\r\n            labels : props.data\r\n                ?\r\n                props.labels\r\n                :\r\n                defaultData.labels,\r\n            options : props.options\r\n                ?\r\n                props.options\r\n                :\r\n                defaultOptopns.options,\r\n                type : props.type ? props.type : \"persent\",\r\n            range : props.range,\r\n            selected: [],\r\n            theme: props.theme,\r\n            slide_id : 0,\r\n            _width:props._width\r\n        }\r\n\t\tthis.car = React.createRef();\r\n    }\r\n    componentDidMount()\r\n    {\r\n        window.addEventListener('resize', this.updateWindowDimensions);\r\n        this.updateWindowDimensions();\r\n    }\r\n    omponentWillUnmount() \r\n\t{ \r\n        window.removeEventListener('scroll', this.updateWindowDimensions);\r\n    }\r\n    updateWindowDimensions( evt )\r\n\t{\r\n        const w = document.getElementById('tapper-inside').getBoundingClientRect().width; \r\n        window.Sliders.setState({\r\n            _width : window.innerWidth,\r\n            _height: window.innerHeight,\r\n            _w : w ? w * .85 : 30 \r\n        })\r\n    }\r\n    componentWillUpdate(nextProps, nextState )\r\n    {\r\n        if(nextProps.type != this.state.type )\r\n        {\r\n            this.setState({ type: nextProps.type })\r\n        }\r\n        if(nextProps.range != this.state.range )\r\n        { \r\n            this.setState({ range: nextProps.range });\r\n            this.updateWindowDimensions( );\r\n        } \r\n        if(nextProps.theme != this.state.theme )\r\n        { \r\n            this.setState({ theme: nextProps.theme }); \r\n        } \r\n    } \r\n    \r\n    render()\r\n    { \r\n        const { data, options, type, theme, range, slide_id } = this.state; \r\n        // console.log(this.state);\r\n        const { staff } = options;  \r\n        return  <div \r\n            className={\"tapper-grid tapper-shadow m-1 p-1 h-100 \"}\r\n            style={{\r\n                padding : 0,\r\n                paddingBottom:0,\r\n                backgroundColor : theme.palette.background.default,\r\n\r\n            }}    \r\n        >\r\n            <div \r\n                className=\"tapper-inside\"\r\n                id=\"tapper-inside\"\r\n                style={{ \r\n                    padding: 0,\r\n                    width:\"100%\" \r\n                }}\r\n            > \r\n                <Swiper \r\n                    data={ data }\r\n                    theme={ theme }\r\n                    type={ type }\r\n                    range={ range }\r\n                    _width={this.state._w}\r\n                    slide_id={slide_id}\r\n                />\r\n            </div>\r\n        </div> \r\n    }\r\n\r\n}\r\nexport default withStyles(styles)(Sliders);","import { FormControl, FormControlLabel, FormLabel, Radio, RadioGroup } from \"@material-ui/core\";\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport React, { Component } from \"react\";\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\n\r\nclass TapperRightPanel extends Component\r\n{\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.state ={\r\n            ...props\r\n        }\r\n    }\r\n    render()\r\n    {\r\n        return <div className=\"\">\r\n            <div>\r\n                <FormControl component=\"fieldset\"> \r\n                    <RadioGroup defaultValue=\"female\" aria-label=\"gender\" name=\"customized-radios\">\r\n                        <FormControlLabel \r\n                            value=\"sn\" \r\n                            control={<Checkbox color=\"primary\" className={ \"flow checkbox\" } disableRipple={true}/>} \r\n                            label={I18n.t( \"Sn\" )}\r\n                            className=\"px-1\"\r\n                        />\r\n                        <FormControlLabel \r\n                            value=\"mn\" \r\n                            control={<Checkbox color=\"primary\" className={ \"flow checkbox\" } disableRipple={true}/>} \r\n                            label={I18n.t( \"Mn\" )}\r\n                            className=\"px-1\"\r\n                        />\r\n                        <FormControlLabel \r\n                            value=\"tu\" \r\n                            control={<Checkbox color=\"primary\" className={ \"flow checkbox\" } disableRipple={true}/>} \r\n                            label={I18n.t( \"Tu\" )} \r\n                            className=\"px-1\"\r\n                        />\r\n                        <FormControlLabel \r\n                            value=\"we\" \r\n                            control={<Checkbox color=\"primary\" className={ \"flow checkbox\" } disableRipple={true}/>} \r\n                            label={I18n.t( \"We\" )}\r\n                            className=\"px-1\"\r\n                        />\r\n                        <FormControlLabel \r\n                            value=\"th\" \r\n                            control={<Checkbox color=\"primary\" className={ \"flow checkbox\" } disableRipple={true}/>} \r\n                            label={I18n.t( \"Th\" )} \r\n                            className=\"px-1\"\r\n                        />\r\n                        <FormControlLabel \r\n                            value=\"fr\" \r\n                            control={<Checkbox color=\"primary\" className={ \"flow checkbox\" } disableRipple={true}/>} \r\n                            label={I18n.t( \"Fr\" )}\r\n                            className=\"px-1\"\r\n                            />\r\n                        <FormControlLabel \r\n                            value=\"sa\" \r\n                            control={<Checkbox color=\"primary\"  className={ \"flow checkbox\" } disableRipple={true}/>} \r\n                            label={I18n.t( \"Sa\" )} \r\n                            className=\"px-1\"\r\n                        /> \r\n                    </RadioGroup>\r\n                </FormControl> \r\n            </div>  \r\n        </div>\r\n    }\r\n\r\n}\r\nexport default TapperRightPanel;","\r\n\r\nimport React, { Component, Fragment } from \"react\";\r\nimport { FormLabel, TextField, withStyles } from \"@material-ui/core\";\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\n\r\nclass DivicesPanel extends Component\r\n{\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.state ={\r\n            ...props,\r\n            title: props.title ? props.title : \"Devices\"\r\n        }\r\n    }\r\n    render()\r\n    {\r\n        const CssTextField = withStyles({\r\n            root: {\r\n                backgroundColor:\"#FFFFFF12\", \r\n                padding: 0,\r\n                margin: 0,\r\n                borderRadius:15,                \r\n                display: \"flex\",\r\n                width: \"auto\"\r\n            },\r\n          })(TextField);\r\n        return <>\r\n            <FormLabel component=\"legend\" className=\"tapper-title\">\r\n                {I18n.t( this.state.title )}\r\n            </FormLabel>\r\n            <CssTextField\r\n                id=\"standard-full-width\"\r\n                label=\"\"\r\n                style={{ }}\r\n                className=\"p-0 m-0\"\r\n                placeholder={I18n.t( \"Put device names per comma\" )}\r\n                helperText=\"\"\r\n                fullWidth\r\n                margin=\"normal\"\r\n                multiline\r\n                rows={ this.props.rows || 3 }\r\n                InputLabelProps={{\r\n                    shrink: true,\r\n                }}\r\n            />\r\n        </> \r\n    }\r\n\r\n}\r\nexport default DivicesPanel;","import I18n from \"@iobroker/adapter-react/i18n\";\r\nimport { Component } from \"react\";\r\n\r\nclass EditPanel extends Component\r\n{\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.state={\r\n            isEdit:props.isEdit\r\n        }\r\n    }\r\n    componentWillUpdate(nextProps)\r\n    {\r\n        if(nextProps.isEdit != this.state.isEdit )\r\n        {\r\n            this.setState({ isEdit: nextProps.isEdit })\r\n        }\r\n    }\r\n    on = () =>\r\n    {\r\n        if(this.props.on)\r\n        {\r\n            this.props.on( this.state.isEdit )\r\n        }\r\n    }\r\n    render()\r\n    {\r\n        return <div className=\"flow-menu mt-auto\">\r\n            <div \r\n                className={\"tapper-edit w-100\" + (this.state.isEdit ? \" active\" : \"\") }\r\n                onClick={this.on}\r\n            >\r\n                {I18n.t( this.state.isEdit ? \"Finish edit\" : \"Edit Menu\")}\r\n            </div>            \r\n        </div>\r\n    }\r\n}\r\nexport default EditPanel;","import React from 'react'; \r\nimport './App.scss';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport { MuiThemeProvider } from '@material-ui/core/styles';\r\n\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';  \r\nimport Tab from '@material-ui/core/Tab';\r\nimport GenericApp from '@iobroker/adapter-react/GenericApp';\r\nimport Loader from '@iobroker/adapter-react/Components/Loader'\r\n\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\nimport TabOptions from './Tabs/Options';\r\nimport TapperPanel from './components/TapperPanel';\r\nimport TypePanel from './components/TypePanel';\r\nimport PriorityPanel from './components/PriorityPanel';\r\nimport Sliders from './components/Sliders';\r\nimport TapperRightPanel from './components/TapperRightPanel';\r\nimport DivicesPanel from './components/DevicesPanel';\r\nimport EditPanel from './components/EditPanel';\r\nimport defaultOptopns from \"./data/defaultOptopns.json\"\r\nimport { Grid, Typography } from '@material-ui/core';\r\n\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\nimport DehazeIcon from '@material-ui/icons/Dehaze';\r\nimport AssignmentTurnedInIcon from '@material-ui/icons/AssignmentTurnedIn';\r\nimport CalendarTodayIcon from '@material-ui/icons/CalendarToday';\r\nimport CallSplitIcon from '@material-ui/icons/CallSplit';\r\nimport ViewListIcon from '@material-ui/icons/ViewList';\r\nimport CodeIcon from '@material-ui/icons/Code';\r\nimport ScheduleIcon from '@material-ui/icons/Schedule';\r\n\r\nconst mobile_panel = {\r\n        background:\"transparent\",\r\n        ['@media (max-width:570px)']: \r\n        {\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n            padding: \"0px 10px 0 60px !important\",\r\n            height: \"100%\",\r\n            width:\"calc(100% - 70px)\",\r\n            left:\"calc(-100% - 70px)\",\r\n            background: defaultOptopns.options.backgrounds[ 1 ]\r\n        }\r\n    }\r\nconst styles = theme => ({\r\n    app:{\r\n        display:\"flex\",\r\n        position: \"relative\",\r\n        height: \"100%\",\r\n        backgroundColor: theme.palette.background.paper\r\n    },\r\n    root: {},\r\n    tabContent: {\r\n        padding: 10,\r\n        height: 'calc(100% - 64px - 48px - 20px)',\r\n        overflow: 'auto'\r\n    },\r\n    tabContentIFrame: {\r\n        padding: 10,\r\n        height: 'calc(100% - 64px - 48px - 20px - 38px)',\r\n        overflow: 'auto'\r\n    },\r\n    clip_left_sm_2 : mobile_panel,\r\n    clip_left_sm_4 : mobile_panel,\r\n    clip_left_sm_5 : mobile_panel,\r\n    clip_left_sm_6 : mobile_panel,\r\n    clip_left_sm_7 : mobile_panel\r\n    \r\n});\r\n\r\nclass App extends GenericApp {\r\n    constructor(props) {\r\n        const extendedProps = {...props};\r\n        extendedProps.encryptedFields = ['pass'];\r\n        extendedProps.translations = {\r\n            'en': require('./i18n/en'),\r\n            'de': require('./i18n/de'),\r\n            'ru': require('./i18n/ru'),\r\n            'pt': require('./i18n/pt'),\r\n            'nl': require('./i18n/nl'),\r\n            'fr': require('./i18n/fr'),\r\n            'it': require('./i18n/it'),\r\n            'es': require('./i18n/es'),\r\n            'pl': require('./i18n/pl'),\r\n            'zh-cn': require('./i18n/zh-cn'),\r\n        };\r\n\r\n        super(props, extendedProps);\r\n        this.state ={\r\n            ...this.state,\r\n            type : \"temperature\",\r\n            priority: \"normal\",\r\n            menu : defaultOptopns.menu,\r\n            max_menu_id : defaultOptopns.max_menu_id,\r\n            activeMenu : \"main\",\r\n            isMenuEdit : false,\r\n            range: 0 // масштаб \r\n        } \r\n        this.isExpert = true;  \r\n        window.SchedullerApp = this;\r\n    }\r\n    componentWillMount()\r\n    {\r\n        window.addEventListener('resize', this.updateWindowDimensions);\r\n        this.updateWindowDimensions();\r\n    }\r\n    omponentWillUnmount() \r\n\t{ \r\n        window.removeEventListener('scroll', this.updateWindowDimensions);\r\n    }\r\n    updateWindowDimensions( evt )\r\n\t{\r\n        window.SchedullerApp.setState({\r\n            _width : window.innerWidth,\r\n            _height: window.innerHeight\r\n        })\r\n    }\r\n    getSelectedTab() {\r\n        const tab = this.state.selectedTab;\r\n        if (!tab || tab === 'options') {\r\n            return 0;\r\n        }\r\n    }\r\n    onLeftOpen1 = () =>\r\n    {\r\n        this.setState({ \r\n            leftOpen  : !this.state.leftOpen,  \r\n            leftOpen2 : false,  \r\n            leftOpen3 : false,  \r\n            leftOpen4 : false,  \r\n            leftOpen5 : false,     \r\n            leftOpen6 : false,\r\n            leftOpen7 : false\r\n        })\r\n    }\r\n    onLeftOpen2 = () =>\r\n    {\r\n        this.setState({ \r\n            leftOpen7 : false, \r\n            leftOpen  : false, \r\n            leftOpen2 : !this.state.leftOpen2,\r\n            leftOpen3 : false,  \r\n            leftOpen4 : false,   \r\n            leftOpen5 : false,     \r\n            leftOpen6 : false \r\n        })\r\n    }\r\n    onLeftOpen3 = () =>\r\n    {\r\n        this.setState({ \r\n            leftOpen3 : !this.state.leftOpen3,  \r\n            leftOpen7 : false,  \r\n            leftOpen2 : false,  \r\n            leftOpen  : false,  \r\n            leftOpen4 : false,  \r\n            leftOpen5 : false,   \r\n            leftOpen6 : false  \r\n        })\r\n    }\r\n    onLeftOpen4 = () =>\r\n    {\r\n        this.setState({ \r\n            leftOpen4 : !this.state.leftOpen4,   \r\n            leftOpen7 : false,  \r\n            leftOpen6 : false,  \r\n            leftOpen5 : false,  \r\n            leftOpen3 : false,  \r\n            leftOpen2 : false,  \r\n            leftOpen  : false  \r\n        })\r\n    }\r\n    onLeftOpen5 = () =>\r\n    {\r\n        this.setState({ \r\n            leftOpen5 : !this.state.leftOpen5,  \r\n            leftOpen7 : false,  \r\n            leftOpen6 : false,  \r\n            leftOpen4 : false,  \r\n            leftOpen3 : false,  \r\n            leftOpen2 : false,  \r\n            leftOpen  : false  \r\n        })\r\n    }\r\n    onLeftOpen6 = () =>\r\n    {\r\n        this.setState({ \r\n            leftOpen6 : !this.state.leftOpen6, \r\n            leftOpen7 : false,    \r\n            leftOpen5 : false,    \r\n            leftOpen4 : false,  \r\n            leftOpen3 : false,  \r\n            leftOpen2 : false,  \r\n            leftOpen  : false  \r\n        })\r\n    }\r\n    onLeftOpen7 = () =>\r\n    {\r\n        this.setState({ \r\n            leftOpen7 : !this.state.leftOpen7, \r\n            leftOpen6 : false,    \r\n            leftOpen5 : false,    \r\n            leftOpen4 : false,  \r\n            leftOpen3 : false,  \r\n            leftOpen2 : false,  \r\n            leftOpen  : false  \r\n        })\r\n    }\r\n    onType = type =>\r\n    {\r\n        this.setState({ type });\r\n    }\r\n    onPriority = priority =>\r\n    {\r\n        this.setState({ priority });\r\n    }\r\n    onMenu = active =>\r\n    {\r\n        this.setState({ activeMenu : active });\r\n        setTimeout(()=>\r\n        {\r\n            this.setState({ leftOpen : false });\r\n        }, 250)\r\n    }\r\n    onEditMenu = isMenuEdit =>\r\n    {\r\n        this.setState({ isMenuEdit: !isMenuEdit })\r\n    }\r\n    onChangeMenu = (newMenu, max_menu_id) =>\r\n    {\r\n        console.log(newMenu, max_menu_id)\r\n        this.setState({ menu: newMenu, max_menu_id })\r\n    }\r\n    onRange = (event, range)  =>\r\n    {\r\n        this.setState({ range });\r\n        setTimeout(() =>\r\n        {\r\n            this.setState({ leftOpen7: false });\r\n        }, 350 )\r\n    }\r\n    render()\r\n    { \r\n        if (!this.state.loaded) \r\n        {\r\n            return <MuiThemeProvider theme={this.state.theme}>\r\n                <Loader theme={this.state.themeType} />\r\n            </MuiThemeProvider>;\r\n        }   \r\n        console.log(this.state);\r\n        const { classes } = this.props;\r\n        const { menu, activeMenu, isMenuEdit, max_menu_id, range } = this.state;\r\n\r\n        const AntTabs = withStyles({\r\n            root: { \r\n                margin:0,  \r\n                width: \"100%\",\r\n                justifyContent:\"center\"\r\n            },\r\n            indicator: { \r\n                transition : \"all 300ms ease-out\"\r\n            },\r\n        })(Tabs);\r\n        \r\n        const AntTab = withStyles((theme) => ({\r\n            root: { \r\n                //backgroundColor:'#444',\r\n                minWidth: 140,\r\n                fontWeight: 700, \r\n                fontSize: \"0.75rem\",\r\n                opacity: 1, \r\n            },\r\n            selected: {},\r\n        }))((props) => <Tab disableRipple {...props} />);\r\n\r\n        return <MuiThemeProvider theme={this.state.theme}>\r\n            <div className={classes.app}>\r\n                <Grid container \r\n                    spacing={0} \r\n                    style={{ background : this.state.theme.palette.background.paper }}\r\n                    className=\"mobile-scrolled\"\r\n                > \r\n                    <Grid \r\n                        item \r\n                        xs={12} \r\n                        lg={2} \r\n                        className={ \"h-100 sm-hidden \" } \r\n                    > \r\n                        <div \r\n                            className={\r\n                                \"tapper-grid tapper-shadow m-1 h-100 clip-left-sm-1 \" + \r\n                                ( this.state.leftOpen ? \" active\" : \"\" )\r\n                            }  \r\n                            style={{background:\"#444\"}}\r\n                        > \r\n                            <div className=\"close-label-left-sm flow-dark \" onClick={this.onLeftOpen1}>\r\n                                <ClearIcon />\r\n                            </div>\r\n                            <TapperPanel\r\n                                active={activeMenu}\r\n                                isEdit={isMenuEdit}\r\n                                menu={menu}\r\n                                on={this.onMenu}\r\n                                max_menu_id={max_menu_id}\r\n                                onChangeMenu={this.onChangeMenu}\r\n                            />\r\n                            {\r\n                                this.isExpert\r\n                                    ? \r\n                                    <EditPanel\r\n                                        isEdit={isMenuEdit}\r\n                                        menu={menu}\r\n                                        on={this.onEditMenu}\r\n                                    /> \r\n                                    :\r\n                                    null\r\n                            }\r\n                        </div>\r\n                    </Grid>\r\n                    <Grid item xs={12} lg={ 9 } className=\"sliders-container\"> \r\n                        \r\n                        <Sliders \r\n                            type={ this.state.type }\r\n                            theme={ this.state.theme }\r\n                            range={range}\r\n                            _width={ this.state._width }\r\n                        />\r\n                        {\r\n                            this.isExpert\r\n                                ? \r\n                                <div \r\n                                    className={\r\n                                        \"tapper-grid tapper-shadow m-1 mt-1 clip_left_sm_7 \"+ \r\n                                        classes.clip_left_sm_7 + \r\n                                        (this.state.leftOpen7 ? \" active \" :\"\") \r\n                                    }\r\n                                    style={{ }}\r\n                                >\r\n                                    <div className=\"close-label-left-sm flow-dark \" onClick={this.onLeftOpen7}>\r\n                                        <ClearIcon />\r\n                                    </div>\r\n                                    <div className=\"mt-sm-auto mb-sm-auto w-100\">\r\n                                        <AntTabs\r\n                                            value={ range }\r\n                                            onChange={ this.onRange } \r\n                                            orientation={ this.state._width < 768 ? \"vertical\" : \"horizontal\" }                                            \r\n                                            indicatorColor=\"primary\"\r\n                                            textColor=\"primary\"\r\n                                            centered\r\n                                        >\r\n                                            <AntTab label=\"0.5 hr\" />\r\n                                            <AntTab label=\"1 hr\"  />\r\n                                            <AntTab label=\"2 hrs\" />\r\n                                            <AntTab label=\"3 hrs\" />\r\n                                            <AntTab label=\"4 hrs\" />\r\n                                        </AntTabs>\r\n                                    </div>\r\n                                </div>\r\n                                    :\r\n                                    null\r\n                        }\r\n                        <Grid container \r\n                            spacing={0}   \r\n                        > \r\n                        {\r\n                            this.isExpert\r\n                                ? \r\n                                <Grid \r\n                                    item \r\n                                    xs={12} \r\n                                    lg={3}  \r\n                                    className={ \"h-100 expert sm-hidden \" }\r\n                                >\r\n                                    <div \r\n                                        className={\r\n                                            \"tapper-grid tapper-shadow h-100 m-1 p-2 clip_left_sm_2 \" + \r\n                                            classes.clip_left_sm_2 + \r\n                                            (this.state.leftOpen2 ? \" active \" :\"\")\r\n                                        }\r\n                                    > \r\n                                        <div className=\"close-label-left-sm flow-dark\" onClick={this.onLeftOpen2}>\r\n                                            <ClearIcon />\r\n                                        </div>\r\n                                        <div className=\"mt-sm-auto mb-sm-auto\">\r\n                                            <div>\r\n                                                <TypePanel\r\n                                                    on={this.onType}\r\n                                                    type={ this.state.type }\r\n                                                    _width={this.state._width}\r\n                                                \r\n                                                />\r\n                                            </div>\r\n                                           \r\n                                        </div>\r\n                                    </div> \r\n                                </Grid>    \r\n                                :\r\n                                null\r\n                            } \r\n                            <Grid \r\n                                item \r\n                                xs={12} \r\n                                lg={6}  \r\n                                className={ \"h-100 expert sm-hidden \" }\r\n                            >                                           \r\n                                <div className={\r\n                                        \"tapper-grid tapper-shadow m-1 p-2 mt-1 clip_left_sm_5 \"+ \r\n                                        classes.clip_left_sm_5 + \r\n                                        (this.state.leftOpen5 ? \" active \" :\"\") \r\n                                    }\r\n                                    style={{flexGrow:100}}\r\n                                >\r\n                                    <div className=\"close-label-left-sm flow-dark \" onClick={this.onLeftOpen5}>\r\n                                        <ClearIcon />\r\n                                    </div>\r\n                                    <div className=\"mt-sm-auto mb-sm-auto wc-100\">\r\n                                        <DivicesPanel\r\n                                            title={ this.isExpert ? \"Devices (expert)\" : \"Devices\" }\r\n                                            isExpert={ this.isExpert }\r\n                                            rows={ 1 }  \r\n                                            _width={ this.state._width }\r\n                                        /> \r\n                                    </div>\r\n                                </div>\r\n                            </Grid>  \r\n                            {\r\n                                this.isExpert\r\n                                    ? \r\n                                    <Grid \r\n                                        item \r\n                                        xs={12} \r\n                                        lg={3}  \r\n                                        className={ \"h-100 expert sm-hidden \" }\r\n                                    > \r\n                                        <div \r\n                                            className={\r\n                                                \"tapper-grid tapper-shadow h-100 m-1 p-2 clip_left_sm_4 \"+ \r\n                                                classes.clip_left_sm_4 + \r\n                                                (this.state.leftOpen4 ? \" active \" :\"\")\r\n\r\n                                            }\r\n                                        > \r\n                                            <div className=\"close-label-left-sm flow-dark\" onClick={this.onLeftOpen4}>\r\n                                                <ClearIcon />\r\n                                            </div>\r\n                                            <div className=\"mt-sm-auto mb-sm-auto\">\r\n                                                <div className=\" \">\r\n                                                    <PriorityPanel\r\n                                                        on={this.onPriority}\r\n                                                        priority={ this.state.priority }\r\n                                                        _width={this.state._width}\r\n                                                    \r\n                                                    />\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </Grid>    \r\n                                    :\r\n                                    null\r\n                            } \r\n                        </Grid> \r\n                    </Grid> \r\n                    <Grid \r\n                        item \r\n                        xs={12} \r\n                        lg={1} \r\n                        className={\r\n                            \"h-100  sm-hidden  \" \r\n                        }\r\n                    >\r\n                        <div \r\n                            className={\r\n                                \"tapper-grid tapper-shadow m-1 p-2 clip_right_sm_3 h-100 \"+ \r\n                                classes.clip_left_sm_2 + \r\n                                (this.state.leftOpen3 ? \" active \" :\"\")\r\n                            }                            \r\n                        >\r\n                            <div className=\"close-label-left-sm flow-dark\" onClick={this.onLeftOpen3}>\r\n                                <ClearIcon />\r\n                            </div>\r\n                            <div className=\"mt-sm-auto mb-sm-auto\">\r\n                                <TapperRightPanel\r\n                                    _width={this.state._width}\r\n                                    value={this.state.week}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        \r\n                    </Grid> \r\n                    <div className=\"label-menu\" />\r\n                    <div className={\"label-left-sm-1 \" + (this.state.leftOpen ? \"active\" : \"\")} onClick={this.onLeftOpen1}>\r\n                        <DehazeIcon />\r\n                    </div>\r\n                    <div className={\"label-right-sm-5 \" + (this.state.leftOpen5 ? \"active\" : \"\")} onClick={this.onLeftOpen5}>\r\n                        <CallSplitIcon/>\r\n                    </div>\r\n                    <div className={\"label-right-sm-3 \" + (this.state.leftOpen3 ? \"active\" : \"\")} onClick={this.onLeftOpen3}>\r\n                        <CalendarTodayIcon/>\r\n                    </div>\r\n                    {\r\n                        this.isExpert\r\n                            ? \r\n                            <>\r\n                                <div className=\"label-menu-bottom\" />\r\n                                <div className={\"label-left-sm-2  expert \" + (this.state.leftOpen2 ? \"active\" : \"\")} onClick={this.onLeftOpen2}>\r\n                                    <AssignmentTurnedInIcon />\r\n                                </div>\r\n                                <div className={\"label-right-sm-6 \" + (this.state.leftOpen6 ? \"active\" : \"\")} onClick={this.onLeftOpen6}>\r\n                                    <CallSplitIcon/>\r\n                                </div>\r\n                                <div className={\"label-right-sm-4 \" + (this.state.leftOpen4 ? \"active\" : \"\")} onClick={this.onLeftOpen4}>\r\n                                    <ViewListIcon/>\r\n                                </div>\r\n                                <div className={\"label-right-sm-7 \" + (this.state.leftOpen7 ? \"active\" : \"\")} onClick={this.onLeftOpen7}>\r\n                                    <ScheduleIcon/>\r\n                                </div>\r\n\r\n                            </>\r\n                            :\r\n                            null\r\n                    } \r\n                    \r\n                </Grid>  \r\n            </div>\r\n        </MuiThemeProvider>;\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport * as Sentry from '@sentry/browser';\r\nimport * as SentryIntegrations from '@sentry/integrations';\r\nimport { MuiThemeProvider} from '@material-ui/core/styles';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {version} from '../package.json';\r\n//import theme from './theme';\r\nimport theme from '@iobroker/adapter-react/Theme';\r\n\r\nimport Utils from '@iobroker/adapter-react/Components/Utils';\r\n\r\nwindow.adapterName = 'scheduler';\r\nlet themeName = Utils.getThemeName();\r\n\r\n// console.log(`iobroker.${window.adapterName}@${version} using theme \"${themeName}\"`);\r\n\r\nfunction build() {\r\n    return ReactDOM.render(\r\n        <MuiThemeProvider theme={theme(themeName)}>\r\n            <App\r\n                onThemeChange={_theme => {\r\n                    themeName = _theme;\r\n                    build();\r\n                }}\r\n            />\r\n        </MuiThemeProvider>,\r\n        document.getElementById('root')\r\n    );\r\n}\r\n\r\nif (false && window.location.host !== 'localhost:3000') {\r\n    Sentry.init({\r\n        dsn: 'https://5ad729dbed504d15aa8bde423cae9a8e@sentry.iobroker.net/57',\r\n        release: `iobroker.${window.adapterName}@${version}`,\r\n        integrations: [\r\n            new SentryIntegrations.Dedupe()\r\n        ]\r\n    });\r\n}\r\n\r\nbuild();\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}