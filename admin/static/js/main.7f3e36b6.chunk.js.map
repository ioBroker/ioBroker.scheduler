{"version":3,"sources":["Tabs/Options.js","components/TapperPanel.js","components/TypePanel.js","components/PriorityPanel.js","components/SliderSingle.js","assets/img/day-night.jpg","components/DayNightSwitcher.js","components/Swiper_2.js","components/Sliders.js","components/TapperRightPanel.js","components/DevicesPanel.js","components/EditPanel.js","App.js","serviceWorker.js","index.js"],"names":["Options","props","state","toast","this","Snackbar","anchorOrigin","vertical","horizontal","open","autoHideDuration","onClose","setState","ContentProps","message","id","action","IconButton","aria-label","color","className","classes","close","onClick","title","attr","style","FormControlLabel","Object","assign","paddingTop","controlElement","control","Checkbox","checked","native","onChange","label","I18n","t","tab","clsx","column","columnSettings","renderToast","Component","withStyles","theme","width","minHeight","display","verticalAlign","marginRight","TapperPanel","on","isEdit","onDialog","isDialogOpen","onEditDialog","element","element_title","element_id","element_n","n","element_parent","parent","isnew","onUpdateItem","evt","menu","newMenu","push","forEach","e","i","onChangeMenu","max_menu_id","onDeleteItem","onAddChild","active","nextProps","items","dialog_content","map","submenus","filter","sub","index","MenuItem","disableRipple","Typography","variant","MenuList","Dialog","aria-labelledby","DialogTitle","htmlFor","Input","value","target","startAdornment","InputAdornment","position","Button","TypePanel","type","_width","FormControl","component","InputLabel","shrink","Select","labelId","PriorityPanel","priority","SliderSingle","handleSliderChange","event","data","handleSelected","selected","field","getLabel","step","parseInt","slice","options","defaultOptopns","postfix","redraw","bg1","staff","backgrounds","bg4","chroma","darken","brighten","PrettoSlider","root","borderRadius","height","transition","thumb","valueLabel","left","background","fontWeight","fontSize","track","rail","backgroundColor","borderBottomLeftRadius","borderBottomRightRadius","Slider","nextState","console","log","setTimeout","render","max","getMinMax","toString","undefined","min","__Slider","marginBottom","getPostfix","orientation","bottom","marginLeft","DayNightSwitcher","onSlide","quorte_id","sections","nextStyle","document","getElementById","region","quortes","Array","fill","_","src","day_night","alt","maxWidth","Swiper","setSections","setCount","count","getSectionByRange","range","getCountByRange","getMaxByRange","getStepByRange","sectionsByRange","prev","slide_id","setSlide_id","next","selectAll","selectNone","length","onSwipedDown","onSwipeEnd","onSwipeListener","x","onTransitionEnd","window","sliders","selectorBtn","nodeName","mouseSwipe","onSwipe","onSwipedLeft","onSwipeLeftListener","onSwipedRight","onSwipeRightListener","getSlide","Sliders","defaultData","labels","car","React","createRef","addEventListener","updateWindowDimensions","removeEventListener","w","getBoundingClientRect","innerWidth","_height","innerHeight","_w","padding","paddingBottom","TapperRightPanel","RadioGroup","defaultValue","name","DivicesPanel","CssTextField","TextField","FormLabel","placeholder","helperText","fullWidth","margin","multiline","rows","InputLabelProps","EditPanel","mobile_panel","flexDirection","alignItems","App","extendedProps","encryptedFields","translations","require","onLeftOpen1","leftOpen","leftOpen2","leftOpen3","leftOpen4","leftOpen5","leftOpen6","leftOpen7","onLeftOpen2","onLeftOpen3","onLeftOpen4","onLeftOpen5","onLeftOpen6","onLeftOpen7","onType","onPriority","onMenu","activeMenu","onEditMenu","isMenuEdit","onRange","isExpert","SchedullerApp","selectedTab","loaded","themeType","AntTabs","justifyContent","indicator","Tabs","AntTab","minWidth","opacity","Tab","Grid","container","spacing","item","xs","lg","clip_left_sm_7","indicatorColor","textColor","centered","clip_left_sm_2","clip_left_sm_5","flexGrow","week","renderError","renderSaveCloseButtons","GenericApp","tabContent","overflow","tabContentIFrame","clip_left_sm_4","clip_left_sm_6","Boolean","location","hostname","match","adapterName","themeName","Utils","getThemeName","build","ReactDOM","onThemeChange","_theme","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7f3e36b6.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\n\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nimport {MdClose as IconClose} from 'react-icons/md';\r\n\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\nimport Logo from '@iobroker/adapter-react/Components/Logo';\r\n\r\nconst styles = theme => ({\r\n    tab: {\r\n        width: '100%',\r\n        minHeight: '100%'\r\n    },\r\n    column: {\r\n        display: 'inline-block',\r\n        verticalAlign: 'top',\r\n        marginRight: 20\r\n    },\r\n    columnSettings: {\r\n        width: 'calc(100% - 370px)',\r\n    },\r\n});\r\n\r\nclass Options extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            toast: '',\r\n        };\r\n    }\r\n\r\n    renderToast() {\r\n        if (!this.state.toast) {\r\n            return null;\r\n        }\r\n\r\n        return <Snackbar\r\n            anchorOrigin={{\r\n                vertical: 'bottom',\r\n                horizontal: 'left',\r\n            }}\r\n            open={true}\r\n            autoHideDuration={6000}\r\n            onClose={() => this.setState({toast: ''})}\r\n            ContentProps={{\r\n                'aria-describedby': 'message-id',\r\n            }}\r\n            message={<span id=\"message-id\">{this.state.toast}</span>}\r\n            action={[\r\n                <IconButton\r\n                    key=\"close\"\r\n                    aria-label=\"Close\"\r\n                    color=\"inherit\"\r\n                    className={this.props.classes.close}\r\n                    onClick={() => this.setState({toast: ''})}\r\n                >\r\n                    <IconClose />\r\n                </IconButton>,\r\n            ]}\r\n        />;\r\n    }\r\n\r\n    renderCheckbox(title, attr, style) {\r\n        return <FormControlLabel key={attr} style={Object.assign({paddingTop: 5}, style)} className={this.props.classes.controlElement}\r\n              control={\r\n                  <Checkbox\r\n                      checked={this.props.native[attr]}\r\n                      onChange={() => this.props.onChange(attr, !this.props.native[attr])}\r\n                      color=\"primary\"\r\n                  />\r\n              }\r\n              label={I18n.t(title)}\r\n        />;\r\n    }\r\n\r\n    render() {\r\n        return <form className={ this.props.classes.tab }>\r\n            {/*\r\n            <Logo\r\n                classes={{}}\r\n                instance={ this.props.instance }\r\n                common={ this.props.common }\r\n                native={ this.props.native }\r\n                onError={ text => this.setState({errorText: text}) }\r\n                onLoad={ this.props.onLoad }\r\n            />\r\n            */}\r\n            <div className={clsx(this.props.classes.column, this.props.classes.columnSettings) }>\r\n                Place your code here\r\n            </div>\r\n            { this.renderToast() }\r\n        </form>;\r\n    }\r\n}\r\n\r\nOptions.propTypes = {\r\n    common: PropTypes.object.isRequired,\r\n    native: PropTypes.object.isRequired,\r\n    instance: PropTypes.number.isRequired,\r\n    adapterName: PropTypes.string.isRequired,\r\n    onError: PropTypes.func,\r\n    onLoad: PropTypes.func,\r\n    onChange: PropTypes.func,\r\n    changed: PropTypes.bool,\r\n    socket: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(Options);\r\n","import { Button, Dialog, DialogTitle, FormControl, Input, InputAdornment, InputLabel, MenuItem, MenuList, TextField, Typography } from \"@material-ui/core\";\r\nimport React, { Component, Fragment } from \"react\";\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\n\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport PlaylistAddIcon from '@material-ui/icons/PlaylistAdd'; \r\n\r\nclass TapperPanel extends Component\r\n{\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.state ={\r\n            ...props,\r\n            active: typeof props.active !== \"undefined\" ? props.active : 0,\r\n            isDialogOpen : false\r\n        }\r\n    }\r\n    componentWillUpdate(nextProps)\r\n    {\r\n        if(nextProps.active != this.state.active)\r\n        {\r\n            this.setState({ active: nextProps.active });\r\n        }\r\n        if(nextProps.menu != this.state.menu)\r\n        {\r\n            this.setState({ menu: nextProps.menu });\r\n        }\r\n        if(nextProps.isEdit != this.state.isEdit)\r\n        {\r\n            this.setState({ isEdit: nextProps.isEdit });\r\n        }\r\n    }\r\n    onClick = id =>\r\n    { \r\n        if(this.props.on && !this.state.isEdit)\r\n        {\r\n            this.props.on( id )\r\n        }\r\n    }\r\n    onDialog = () =>\r\n    {\r\n        this.setState({ isDialogOpen : !this.state.isDialogOpen })\r\n    }\r\n    onEditDialog = element =>\r\n    { \r\n        this.setState(\r\n            { \r\n                isDialogOpen : true,\r\n                element_title: element.title,\r\n                element_id: element.id,\r\n                element_n : element.n,\r\n                element_parent: element.parent,\r\n                isnew: false\r\n            }\r\n        )\r\n    }\r\n    onUpdateItem = evt =>\r\n    {\r\n        let menu = [ ...this.state.menu ];\r\n        let newMenu= [];\r\n        if(this.state.isnew)\r\n        {\r\n            newMenu = [...menu];\r\n            newMenu.push({\r\n                n: this.state.element_n,\r\n                id : this.state.element_id,\r\n                title : this.state.element_title,\r\n                parent: this.state.element_parent  \r\n            })\r\n        }\r\n        else\r\n        {\r\n            menu.forEach((e, i) =>\r\n            {\r\n                if(e.n == this.state.element_n)\r\n                {\r\n                    newMenu[ i ] ={\r\n                        n: this.state.element_n,\r\n                        id : this.state.element_id,\r\n                        title : this.state.element_title,\r\n                        parent: this.state.element_parent                      \r\n                    };\r\n                }\r\n                else\r\n                    newMenu[i] = e;\r\n            }); \r\n        }\r\n        \r\n        this.setState({ menu:newMenu,  isDialogOpen : false,  isnew : false });\r\n        if(this.props.onChangeMenu)\r\n        {\r\n            this.props.onChangeMenu(newMenu, this.state.max_menu_id)\r\n        }\r\n    }\r\n    onDeleteItem = () =>\r\n    {\r\n        let menu = [ ...this.state.menu ];\r\n        let newMenu = [];\r\n        menu.forEach((e, i) =>\r\n        {\r\n            if(e.n == this.state.element_n)\r\n            {\r\n                \r\n            }\r\n            else\r\n                newMenu.push(e);\r\n        }); \r\n        this.setState({ menu:newMenu,  isDialogOpen : false,  isnew : false });\r\n        if(this.props.onChangeMenu)\r\n        {\r\n            this.props.onChangeMenu(newMenu, this.state.max_menu_id)\r\n        }\r\n    }\r\n    onAddChild = element =>\r\n    {        \r\n        this.setState(\r\n            { \r\n                isDialogOpen : true,\r\n                element_title: \"new title\",\r\n                element_id:  \"new-id\",\r\n                element_n :  this.state.max_menu_id + 1,\r\n                max_menu_id: this.state.max_menu_id + 1,\r\n                element_parent: element.n,\r\n                isnew: true\r\n            }\r\n        )\r\n    }\r\n    render()\r\n    {\r\n        const {active, menu, isEdit, isDialogOpen, dialog_content } = this.state;\r\n        const items = menu.map((e, i) =>\r\n        {\r\n            if(e.parent == \"\")\r\n            {\r\n                const submenus = menu\r\n                    .filter(sub => sub.parent == e.n )\r\n                        .map((sub, index) =>\r\n                        { \r\n                            return <MenuItem   \r\n                                key={sub.n}                  \r\n                                className={ \"flow-menu-item sub \" + ( isEdit ? \" disable \" : active == sub.n ? \" active \" : \"\") } \r\n                                onClick={() => this.onClick( sub.n )} \r\n                                disableRipple\r\n                            >\r\n                                <Typography variant=\"inherit\">\r\n                                    {I18n.t( sub.title  )}\r\n                                </Typography>\r\n                                {\r\n                                    isEdit\r\n                                        ?\r\n                                        <div className=\"absolute-right\">\r\n                                            <div \r\n                                                className=\"edit_button\" \r\n                                                title={I18n.t(\"Add new child\")} \r\n                                                onClick={ () => this.onEditDialog( sub ) }\r\n                                            >\r\n                                                <EditIcon />\r\n                                            </div> \r\n                                        </div>\r\n                                        :\r\n                                        null\r\n                                }\r\n                            </MenuItem>\r\n                        }) \r\n                return <div key={ e.n }>\r\n                    <MenuItem                     \r\n                        className={ \"flow-menu-item\" + ( isEdit ? \" disable \" : active == e.n ? \" active \" : \"\") } \r\n                        onClick={() => this.onClick( e.n )} \r\n                        \r\n                        disableRipple\r\n                    >\r\n                        <Typography variant=\"inherit\">\r\n                            {I18n.t( e.title  )}\r\n                        </Typography>\r\n                        {\r\n                            isEdit\r\n                                ?\r\n                                <div className=\"absolute-right\">\r\n                                    <div \r\n                                        className=\"edit_button\" \r\n                                        title={I18n.t(\"Add new child\")} \r\n                                        onClick={() =>this.onAddChild( e )}\r\n                                    >\r\n                                        <PlaylistAddIcon />\r\n                                    </div>\r\n                                    <div \r\n                                        className=\"edit_button\" \r\n                                        title={I18n.t(\"Edit button\")}  \r\n                                        onClick={() => this.onEditDialog( e )}\r\n                                    >\r\n                                        <EditIcon />\r\n                                    </div>\r\n                                </div>\r\n                                :\r\n                                null\r\n                        }\r\n                    </MenuItem>\r\n                    { submenus }\r\n                </div>\r\n            }               \r\n            else\r\n               return null\r\n        })\r\n        return <div className=\"flow-menu  scrolled-auto\">\r\n            <MenuList>\r\n                { items }\r\n            </MenuList>\r\n            {\r\n                isEdit\r\n                    ?\r\n                    <div className=\"flow-menu \">\r\n                        <div \r\n                            className={\"tapper-edit w-100\"}\r\n                            onClick={ () =>this.onAddChild( { n : \"\" } ) } \r\n                        >\r\n                        <PlaylistAddIcon />  {I18n.t( \"Add Button\")}\r\n                        </div>            \r\n                    </div>\r\n                    :\r\n                    null\r\n            }\r\n            \r\n            <Dialog \r\n                onClose={ this.onDialog } \r\n                aria-labelledby=\"simple-dialog-title\" \r\n                open={isDialogOpen}\r\n            >\r\n                <DialogTitle id=\"simple-dialog-title\">\r\n                    {I18n.t(\"Edit button\")}\r\n                </DialogTitle>\r\n                <div className=\"p-2\" style={{ width:250, minHeight:200 }}>\r\n                    <div className=\"p-2\">\r\n                        <div htmlFor=\"menu-item\">\r\n                            {I18n.t( \"menu item\" )}\r\n                        </div>\r\n                        <Input \r\n                            id=\"menu-item\" \r\n                            value={ this.state.element_id } \r\n                            onChange={ evt => this.setState({ element_id : evt.target.value })} \r\n                            startAdornment={\r\n                                <InputAdornment position=\"start\">\r\n                                    <EditIcon />\r\n                                </InputAdornment>\r\n                            }\r\n                        />\r\n                    </div> \r\n                    <div className=\"p-2\">\r\n                        <div htmlFor=\"label\">\r\n                            {I18n.t( \"label\" )}\r\n                        </div>\r\n                        <Input \r\n                            id=\"label\" \r\n                            value={ this.state.element_title } \r\n                            onChange={ evt => this.setState({ element_title : evt.target.value })} \r\n                            startAdornment={\r\n                                <InputAdornment position=\"start\">\r\n                                    <EditIcon />\r\n                                </InputAdornment>\r\n                            }/>\r\n                    </div> \r\n                    <div>\r\n                        <Button onClick={ this.onUpdateItem }>\r\n                            {I18n.t( this.state.isnew ? \"create\" : \"update\" )}\r\n                        </Button>\r\n                        {\r\n                            this.state.isnew\r\n                                ?\r\n                                null\r\n                                :\r\n                                <Button onClick={ this.onDeleteItem }>\r\n                                    {I18n.t( \"delete button\" )}\r\n                                </Button>\r\n\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </Dialog>\r\n        </div>\r\n    }\r\n\r\n}\r\nexport default TapperPanel;","import React, { Component } from \"react\";\r\nimport { FormControl, FormControlLabel, FormLabel, InputLabel, MenuItem, Radio, RadioGroup, Select } from \"@material-ui/core\";\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\n\r\nclass TypePanel extends Component\r\n{\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.state ={\r\n            type: props.type,\r\n            _width: props._width\r\n        \r\n        }\r\n    }\r\n    on = evt =>\r\n    {\r\n        const type = evt.target.value;\r\n        if( type )\r\n        {\r\n            this.setState({type});\r\n            if( this.props.on )\r\n                this.props.on(type);\r\n        }\r\n            \r\n        \r\n    }\r\n    render()\r\n    {\r\n        const{type} = this.state;\r\n        return <FormControl component=\"fieldset\" className=\"w-100\"> \r\n                <InputLabel shrink id=\"type-select-label\">{ I18n.t( \"Type\" ) }</InputLabel>\r\n                <Select\r\n                    labelId=\"type-select-label\"\r\n                    id=\"type-select\" \r\n                    className=\"w-100\"\r\n                    value={type}\r\n                    onChange={ this.on }\r\n                >\r\n                    <MenuItem value={\"persent\"}>\r\n                        {I18n.t( \"Persent\")}\r\n                    </MenuItem>\r\n                    <MenuItem value={\"temperature\"}>\r\n                        {I18n.t( \"Temperature\")}\r\n                    </MenuItem>\r\n                    <MenuItem value={\"onnoff\"}>\r\n                        {I18n.t( \"On/Off\")}\r\n                    </MenuItem>\r\n                </Select>\r\n                {/*\r\n                <RadioGroup defaultValue=\"female\" aria-label=\"gender\" name=\"customized-radios\">\r\n                    <FormControlLabel \r\n                        value=\"persent\" \r\n                        control={\r\n                            <Radio \r\n                                color=\"primary\" \r\n                                className={ \"flow-little checkbox\" } \r\n                                checked={this.state.type == \"persent\"}\r\n                                disableRipple\r\n                                onChange={ evt => this.on( evt, \"persent\" ) }\r\n                            />\r\n                        } \r\n                        className=\"px-1\"\r\n                        label={I18n.t( \"Persent\")} \r\n                    />\r\n                    <FormControlLabel \r\n                        value=\"temperature\" \r\n                        control={\r\n                            <Radio \r\n                                color=\"primary\" \r\n                                className={ \"flow-little checkbox\" } \r\n                                checked={this.state.type == \"temperature\"}\r\n                                disableRipple\r\n                                onChange={ evt => this.on( evt, \"temperature\" ) }\r\n                            />} \r\n                        className=\"px-1\"\r\n                        label={I18n.t( \"Temperature\")} \r\n                    />\r\n                    <FormControlLabel \r\n                        value=\"onnoff\" \r\n                        control={\r\n                            <Radio \r\n                                color=\"primary\" \r\n                                checked={this.state.type == \"onnoff\"}\r\n                                className={ \"flow-little checkbox\" } \r\n                                disableRipple\r\n                                onChange={ evt => this.on( evt,  \"onnoff\" ) }\r\n                            />\r\n                        } \r\n                        className=\"px-1\"\r\n                        label={I18n.t( \"On/Off\")} \r\n                    />\r\n                </RadioGroup>\r\n                */}\r\n            </FormControl>\r\n    }\r\n\r\n}\r\nexport default TypePanel;","import React, { Component } from \"react\";\r\nimport { FormControl, FormControlLabel, FormLabel, InputLabel, MenuItem, Radio, RadioGroup, Select } from \"@material-ui/core\";\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\n\r\nclass PriorityPanel extends Component\r\n{\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.state ={\r\n            priority: props.priority\r\n        }\r\n    }\r\n    on = evt =>\r\n    {\r\n        const priority = evt.target.value\r\n        if( priority )\r\n        {\r\n            this.setState({ priority });\r\n            if( this.props.on )\r\n                this.props.on( priority );\r\n        }\r\n            \r\n        \r\n    }\r\n    render()\r\n    {\r\n        const{priority} = this.state;\r\n        return <FormControl component=\"fieldset\"  className=\"w-100\"> \r\n            <InputLabel shrink id=\"demo-simple-select-label\">{ I18n.t( \"Priority\" ) }</InputLabel>\r\n            <Select\r\n                labelId=\"demo-simple-select-label\"\r\n                id=\"demo-simple-select\"\r\n                className=\"w-100\"\r\n                value={priority}\r\n                onChange={ this.on }\r\n            >\r\n                <MenuItem value={\"normal\"}>\r\n                    {I18n.t( \"Normal\")}\r\n                </MenuItem>\r\n                <MenuItem value={\"high\"}>\r\n                    {I18n.t( \"High\")}\r\n                </MenuItem>\r\n                <MenuItem value={\"highest\"}>\r\n                    {I18n.t( \"Highest eg. Holiday\")}\r\n                </MenuItem>\r\n            </Select>\r\n            {/*\r\n            <RadioGroup \r\n                defaultValue=\"female\" \r\n                aria-label=\"gender\"\r\n                name=\"customized-radios\"\r\n            >\r\n                <FormControlLabel \r\n                    value=\"normal\" \r\n                    control={\r\n                        <Radio \r\n                            color=\"primary\"\r\n                            className={ \"flow-little checkbox\" } \r\n                            disableRipple\r\n                        />\r\n                    } \r\n                    className=\"px-1\"\r\n                    label={I18n.t( \"Normal\")}\r\n                />\r\n                <FormControlLabel \r\n                    value=\"high\" \r\n                    control={\r\n                        <Radio \r\n                            color=\"primary\"\r\n                            className={ \"flow-little checkbox\" } \r\n                            disableRipple\r\n                        />\r\n                    } \r\n                    className=\"px-1\"\r\n                    label={I18n.t( \"High\")} \r\n                />\r\n                <FormControlLabel \r\n                    value=\"highest\" \r\n                    control={\r\n                        <Radio \r\n                            color=\"primary\"  \r\n                            className={ \"flow-little checkbox\" } \r\n                            disableRipple\r\n                        />\r\n                    } \r\n                    className=\"px-1\"\r\n                    label={I18n.t( \"Highest eg. Holiday\")} \r\n                />\r\n            </RadioGroup>\r\n            */}\r\n        </FormControl> \r\n    }\r\n\r\n}\r\nexport default PriorityPanel;","import { Component } from \"react\";\r\nimport { withStyles, makeStyles, useStyles } from '@material-ui/core/styles';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport defaultOptopns from \"../data/defaultOptopns.json\"\r\nimport defaultData from \"../data/defaultData.json\" \r\nimport chroma from \"chroma-js\"; \r\nimport { Button, Checkbox, Fab, FormControlLabel, Typography } from \"@material-ui/core\"; \r\nimport { PhonelinkRingSharp } from \"@material-ui/icons\";\r\n\r\nconst styles = theme => ({\r\n    \r\n});\r\nclass SliderSingle extends Component\r\n{\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.state ={\r\n            options : props.options\r\n                ?\r\n                props.options\r\n                :\r\n                defaultOptopns.options,\r\n            value : props.value,\r\n            label : props.label,\r\n            step : props.step,\r\n            selected : props.selected,\r\n            i : props.i,\r\n            postfix : props.postfix,\r\n            type : props.type,\r\n            _width : props._width\r\n        }\r\n    }\r\n    componentWillMount()\r\n    {\r\n        this.redraw();\r\n    }\r\n\r\n    redraw()\r\n    {   \r\n        const { options, _width } = this.state;\r\n        const { staff } = options;\r\n        const bg1 = options.backgrounds[ 0 ];\r\n        const bg2 = chroma( bg1 ).darken(.33);\r\n        const bg22 = chroma( bg1 ).darken(.5);\r\n        const bg3 = chroma( bg1 ).brighten(4);\r\n        const bg4 = options.backgrounds[ 2 ];\r\n        const bg5 = chroma( bg4 ).darken(.33);\r\n       \r\n        this.PrettoSlider = withStyles({\r\n            root: {\r\n              color: options.backgrounds[ 2 ],\r\n              width: _width + \"px!important\",\r\n              borderRadius: 0,\r\n              height: \"calc(100% - 165px)!important\",\r\n              transition: \"all 100ms ease-out\",\r\n              position: \"relative\"\r\n            },\r\n            thumb: {\r\n                display:\"none\"\r\n            },\r\n            active: {\r\n                \r\n            },\r\n            valueLabel: {\r\n              left: \"calc(-50% + \" + _width/2 + \"px)!important\",\r\n              '& *': {\r\n                background: 'transparent',\r\n                fontWeight: 100,\r\n                borderRadius:0,\r\n                fontSize: \"1.0rem\", \r\n                width: \"90%!important\",\r\n                transition: \"all 100ms ease-out\" \r\n              },\r\n            },\r\n            track: {\r\n                width: \"90%!important\",\r\n                transition: \"all 100ms ease-out\",\r\n                borderRadius:4                \r\n            },\r\n            rail: {\r\n                backgroundColor: options.backgrounds[ 0 ],\r\n                transition: \"all 100ms ease-out\",\r\n                width: \"90%!important\",\r\n                borderRadius: 4, \r\n                borderBottomLeftRadius: \"0px!important\",  \r\n                borderBottomRightRadius: \"0px!important\",  \r\n                height:\"calc(100% + \" + _width + \"px)\",\r\n                backgroundColor:\"#FFF\"\r\n            },\r\n        })(Slider);\r\n    }\r\n    componentWillUpdate(nextProps, nextState )\r\n    {\r\n        if( nextProps.selected != this.state.selected )\r\n        { \r\n            this.setState({ selected: nextProps.selected });\r\n        }\r\n        if( nextProps.step != this.state.step )\r\n        { \r\n            this.setState({ step: nextProps.step });\r\n        }\r\n        if( nextProps.value != this.state.value )\r\n        {\r\n            this.setState({ value: nextProps.value })\r\n        }       \r\n        if( nextProps._width != this.state._width )\r\n        {\r\n            console.log( nextProps._width );            \r\n            this.setState({ _width: nextProps._width });            \r\n            setTimeout( () => {\r\n                this.redraw();\r\n                this.render()\r\n            }, 30 )\r\n        }       \r\n        if( nextProps.type != this.state.type)\r\n        {\r\n            const { max }= this.getMinMax(nextProps.type);\r\n            let state = { type : nextProps.type };\r\n            if(max < this.state.value)\r\n            {\r\n                console.log(max, this.state.value)\r\n                state.value = max;\r\n                console.log( state )\r\n            }\r\n            this.setState( state )\r\n            this.redraw();\r\n        }\r\n    }\r\n    handleSliderChange = ( event, data) =>\r\n    {\r\n        //this.setState({value: data});\r\n        this.on( \"data\", data );\r\n    }\r\n    handleSelected = evt =>\r\n    { \r\n        this.on( \"selected\", !this.state.selected );\r\n    }\r\n    on = (field, value) =>\r\n    {\r\n        if(this.props.on)\r\n        {\r\n            this.props.on( field, value, this.props.i );\r\n        }\r\n    }\r\n    getPostfix(value)\r\n    {\r\n        switch(this.state.type)\r\n        {\r\n            case \"temperature\":\r\n                return value.toString() + \"º\";\r\n            case \"onnoff\":\r\n                return value \r\n                    ? \r\n                    <span className=\"text-success\">on</span> \r\n                    : \r\n                    <span className=\"text-danger\">off</span>\r\n            case \"persent\":\r\n            default:\r\n                return value.toString() + \"%\";\r\n        }\r\n    }\r\n    getMinMax( type = undefined)\r\n    {\r\n        const t = type ? type : this.state.type;\r\n        switch( t )\r\n        {\r\n            case \"temperature\":\r\n                return defaultOptopns.options;\r\n            case \"onnoff\":\r\n                return { min:0, max: 1 };\r\n            default:\r\n            case \"persent\":\r\n                return { min:0, max:100 };\r\n        }\r\n    }\r\n    getLabel = () =>\r\n    {\r\n        const {i, step} = this.state;\r\n        let label = i * step;\r\n        const hrs = parseInt(label)\r\n        const secs = ( \"0\" + ( label % 1 * 60) ).slice( -2 ) ;\r\n        return [hrs, secs];\r\n    }\r\n    render()\r\n    {\r\n        const {i, value, step, selected, options } = this.state;\r\n        if(i < 0 )\r\n        {\r\n            return \"\";\r\n        }\r\n        const{min, max} = this.getMinMax();\r\n        const __Slider = this.PrettoSlider;\r\n        const label = this.getLabel();\r\n        return <span className=\"pretto\" >\r\n            <span className=\"pretto-label\" style={{ marginBottom: options.staff.width / 2 + 20 }}>\r\n                { this.getPostfix( value || 0 ) } \r\n            </span>\r\n            <__Slider\r\n                key={i}\r\n                orientation=\"vertical\"  \r\n                aria-label=\"pretto slider\"\r\n                value={ value }\r\n                min={min}\r\n                max={max}\r\n                selected= { selected }\r\n                onChange={ this.handleSliderChange }\r\n            /> \r\n            <div \r\n                className={\"pretto-time flow-square\" + ( selected ? \" active\" : \"\" )} \r\n                style={{                           \r\n                    bottom:-(options.staff.width + 0),\r\n                    marginLeft:7,\r\n                    width:\"calc(100% - 14px)\" \r\n                }}\r\n                i={i}\r\n                onClick={this.handleSelected}\r\n            >\r\n                <span>{ label[0] }</span><span className=\"pretto-secs\">{label[1]}</span>\r\n                    \r\n            </div>\r\n        </span>  \r\n    }\r\n}\r\nexport default withStyles(styles)(SliderSingle);","export default __webpack_public_path__ + \"static/media/day-night.d6f09cbf.jpg\";","import { Component } from \"react\";\r\nimport day_night from \"../assets/img/day-night.jpg\"\r\n\r\nclass DayNightSwitcher extends Component\r\n{\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.state = {\r\n            quorte_id : props.quorte_id || 0,\r\n            sections  : props.sections,\r\n            height:     0\r\n        }\r\n    }\r\n    componentWillUpdate(nextProps, nextStyle)\r\n    {\r\n        if(nextProps.sections != this.state.sections)\r\n        {\r\n            this.setState({ \r\n                sections : nextProps.sections, \r\n                quorte_id : this.state.quorte_id < nextProps.sections\r\n                    ? \r\n                    this.state.quorte_id\r\n                    :\r\n                    nextProps.sections - 1,\r\n                height : nextProps.sections == 1\r\n                    ?\r\n                    0\r\n                    :\r\n                    document.getElementById(\"day-night\").height\r\n            })\r\n        } \r\n        \r\n        if(nextProps.quorte_id != this.state.quorte_id)\r\n        {\r\n            this.setState({ \r\n                quorte_id : nextProps.quorte_id \r\n            })\r\n        } \r\n        /**/\r\n    }\r\n    onSlide = quorte_id =>\r\n    {\r\n        \r\n        if(this.props.on)\r\n        {\r\n            this.props.on( quorte_id )     \r\n        }\r\n        \r\n       /*this.setState({ quorte_id })*/\r\n    }\r\n    render()\r\n    {\r\n        const {sections, height} = this.state;\r\n        const region = 100 / sections;\r\n        const quortes = Array( sections ).fill().map((_, i) => \r\n        {\r\n            return <div \r\n                key={i}\r\n                className=\"day-night-quorte\" \r\n                onClick={()=> this.onSlide( i )}\r\n            >\r\n\r\n            </div>\r\n        })\r\n        return <div className=\"day_night_cont\" style={{ height }}>\r\n            <div>\r\n                <img src={ day_night } alt=\"day-night\" id=\"day-night\"/>\r\n                <div className=\"day_night\">\r\n                    \r\n                    { quortes }\r\n                    <div\r\n                        className=\"day-night-slide\"\r\n                        style={{ \r\n                            maxWidth: region + \"%\", \r\n                            width: region + \"%\", \r\n                            left: \"calc(\"+(this.state.quorte_id * region) +\"% - 5px)\" }}\r\n                    >\r\n                    </div>\r\n                </div>\r\n            </div>  \r\n        </div>\r\n    }\r\n}\r\nexport default DayNightSwitcher;","import React, { Component } from \"react\"; \r\nimport { Fragment } from \"react\";\r\nimport {Swipe} from 'react-swipe-component';\r\nimport DayNightSwitcher from \"./DayNightSwitcher\"\r\nimport SliderSingle from \"./SliderSingle\";\r\n\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport CodeIcon from '@material-ui/icons/Code'; \r\nimport ClearIcon from '@material-ui/icons/Clear';\r\n\r\nclass Swiper extends Component\r\n{\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.state = {\r\n            ...props,\r\n            count : this.getCountByRange( props.range || 0 ) , \r\n            sections: this.getSectionByRange( props.range || 0 ) ,\r\n            selected : [],\r\n            _width : props._width\r\n        }\r\n        window.Swiper = this;\r\n        \r\n    }\r\n    componentWillUpdate(nextProps)\r\n    {\r\n        if(nextProps.type != this.state.type)\r\n        {\r\n            this.setState({ type : nextProps.type });\r\n        }\r\n        if(nextProps.range != this.state.range)\r\n        {\r\n            this.setState({ range : nextProps.range });\r\n            this.sectionsByRange( nextProps.range );\r\n            this.setState({slide_id:0})\r\n        }\r\n        if(nextProps._width != this.state._width)\r\n        {\r\n            this.setState({ _width : nextProps._width });\r\n        }\r\n    }\r\n    //\r\n    setSections = sections =>\r\n    {\r\n        this.setState({sections})\r\n    }\r\n    setCount = count =>\r\n    {\r\n        this.setState({ count })\r\n    }\r\n    getSectionByRange = range =>\r\n    {\r\n        if( this.state ? this.state._width >= 720 : this.props._width >= 720 )\r\n        {\r\n            return range == 0 ? 2 : 1;\r\n        }\r\n        switch( range )\r\n        {\r\n          case 0: \r\n            return 8; \r\n          case 1: \r\n            return 4; \r\n          case 2: \r\n            return 3; \r\n          case 4: \r\n            return 1; \r\n          case 3:\r\n          default: \r\n            return 2; \r\n        }\r\n    }\r\n    getCountByRange = range =>\r\n    {\r\n        if( this.state ? this.state._width >= 720 : this.props._width >= 720 )\r\n        {\r\n            return range == 0 ? 24 : this.getMaxByRange( range );\r\n        }\r\n        switch( range )\r\n        {\r\n          case 0: \r\n            return 6;\r\n          case 1:\r\n            return 6;\r\n          case 2:\r\n            return 4;\r\n          case 4:\r\n            return 6;\r\n          case 3:\r\n          default:\r\n            return 4;\r\n        }\r\n    }\r\n    getMaxByRange = range =>\r\n    {\r\n        return 24 / this.getStepByRange( range ) - 1 \r\n    }\r\n    getStepByRange = range =>\r\n    {\r\n        switch( range )\r\n        {\r\n          case 0: \r\n            return .5;\r\n          case 1:\r\n            return 1;\r\n          case 2:\r\n            return 2;\r\n          case 4:\r\n            return 4;\r\n          case 3:\r\n          default:\r\n            return 3;\r\n        }\r\n    }\r\n\r\n    sectionsByRange = range =>\r\n    {\r\n        this.setSections( this.getSectionByRange( range ) );\r\n        this.setCount( this.getCountByRange( range ) );\r\n    }\r\n\r\n    //\r\n    prev = () =>\r\n    {\r\n        const{ slide_id, count, data, range } = this.state;\r\n        console.log('swiped right')  \r\n        if(slide_id > 0)\r\n          this.setSlide_id( slide_id - 1 )\r\n        else\r\n          this.setSlide_id( this.getMaxByRange(range) / count );\r\n    }\r\n    next = () =>\r\n    {\r\n        const{ slide_id, count, data, range } = this.state;\r\n        console.log('swiped left')\r\n            if( slide_id < this.getMaxByRange(range) / count - 1 )\r\n        this.setSlide_id( slide_id + 1 );\r\n        else\r\n            this.setSlide_id( 0 );\r\n    }\r\n    selectAll = () =>\r\n    {\r\n        const{ range } = this.state;\r\n        this.setState( {selected: Array( this.getMaxByRange( range ) + 1).fill( 1 ).map( ( e, i ) => i ) } )\r\n    }\r\n    selectNone = () =>\r\n    {\r\n        this.setState( {selected: [] } )\r\n    }\r\n\r\n    setSlide_id = slide_id =>\r\n    {\r\n        this.setState( { slide_id : parseInt( slide_id ) } );\r\n    }\r\n    onChange = ( field, value, i ) =>\r\n    {     \r\n        const {slide_id, count, data, selected, type, sections, range} = this.state;\r\n        let state = {...this.state };\r\n        if( selected.filter( e  => e ).length == 0 || field == \"selected\")\r\n        {\r\n            state[ field ][i] = value; \r\n        }\r\n        else\r\n        {\r\n            state[ field ].forEach((element, index) => {\r\n                if( selected[index] )\r\n                {\r\n                    state[ field ][index] =  value;\r\n                }\r\n            });\r\n        }\r\n        console.log( selected );\r\n        console.log( value);\r\n        console.log( state[ field ] );\r\n        this.setState( state )\r\n       \r\n    }\r\n    getSlide()\r\n    {\r\n        const {slide_id, count, data, selected, type, _width, range} = this.state;\r\n        let sliders = []\r\n        for( let i = slide_id * count; i < ( slide_id + 1 ) * count; i++ )\r\n        {\r\n          sliders.push(\r\n            <SliderSingle\r\n                key={ i }\r\n                value={ data[ i ] } \r\n                selected= { selected[ i ] }\r\n                label={ \"\" }\r\n                i={ i }\r\n                step={this.getStepByRange( range )}\r\n                on={ this.onChange }\r\n                type={ type }\r\n                _width={ _width / count }\r\n            /> \r\n          )\r\n        }\r\n        return sliders;\r\n    }\r\n    // \r\n    onSwipedDown = evt =>\r\n    { \r\n\r\n    }\r\n    onSwipeEnd = evt =>\r\n    { \r\n\r\n    }\r\n    onSwipeLeftListener()\r\n    {\r\n        console.log(\"Swiped left\");\r\n        window.Swiper.prev();\r\n    }\r\n    onSwipeRightListener()\r\n    {\r\n        console.log(\"Swiped right\");\r\n        window.Swiper.next();\r\n    }\r\n    onSwipingRight()\r\n    {\r\n        console.log(\"onSwipingRight\");\r\n    }\r\n    onSwipingLeft() \r\n    {\r\n        console.log(\"onSwipingLeft\");\r\n    }\r\n    onSwipeListener = e =>\r\n    { \r\n        console.log(\"Swipe x: \", e.x, \" -- \" ); \r\n        \r\n    }\r\n    onTransitionEnd = () =>\r\n    {\r\n        console.log(\"onTransitionEnd\");\r\n    } \r\n    render()\r\n    {\r\n        const {slide_id, count, data, selected, type, sections, range} = this.state;\r\n        const selectorBtn = selected.length == 0\r\n            ?\r\n            <div className=\"left-button-add flow\" onClick={ this.selectAll }>\r\n                <CodeIcon/>\r\n            </div>\r\n            :\r\n            <div className=\"left-button-add flow\" onClick={ this.selectNone }>\r\n                <ClearIcon/>\r\n            </div>\r\n        return <Fragment> \r\n        <div className=\"swiper-content\">\r\n            <div className={ sections > 1 ? \"btn-cont\" : \"btn-cont hidden\"}>\r\n                <div className=\"left-button flow\" onClick={ this.prev }>\r\n                    <ChevronLeftIcon/>\r\n                </div>\r\n                { selectorBtn }\r\n            </div>\r\n            <Swipe\r\n                nodeName=\"div\"\r\n                className=\"h-100 w-100\"\r\n                mouseSwipe={false}\r\n                onSwipedDown={this.onSwipedDown}\r\n                onSwipeEnd={this.onSwipeEnd}\r\n                onSwipe={this.onSwipeListener}\r\n                onSwipedLeft={this.onSwipeLeftListener}\r\n                onSwipedRight={this.onSwipeRightListener} \r\n                onTransitionEnd={this.onTransitionEnd}\r\n            >\r\n                <div className=\"swiper\" id=\"tapper-inside\"> \r\n                    { this.getSlide() }\r\n                </div>            \r\n            </Swipe>\r\n            <div className={ sections > 1 ? \"btn-cont\" : \"btn-cont hidden\"}>\r\n                <div className=\"right-button flow\" onClick={ this.next }>\r\n                    <ChevronRightIcon/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        {/*\r\n        <div>\r\n            SLIDE_ID = {slide_id}, QUORTE_ID = { parseInt(slide_id ) }\r\n        </div>\r\n        <div>\r\n            COUNT = { count }\r\n        </div>\r\n        */}\r\n        <DayNightSwitcher\r\n            sections={ sections }\r\n            quorte_id={ parseInt(slide_id ) }\r\n            on={ quorte_id => this.setSlide_id ( quorte_id ) }\r\n        />\r\n      </Fragment> ;\r\n    }\r\n}\r\nexport default Swiper;","import React, { Component } from \"react\";\r\nimport { withStyles, makeStyles, useStyles } from '@material-ui/core/styles'; \r\nimport defaultOptopns from \"../../src/data/defaultOptopns.json\"\r\nimport defaultData from \"../../src/data/defaultData.json\"  \r\nimport { Button, Checkbox, Fab, FormControlLabel, Typography } from \"@material-ui/core\"; \r\nimport SliderSingle from \"../../src/components/SliderSingle\";  \r\nimport Swiper from \"../../src/components/Swiper_2\";\r\n\r\nconst styles = theme => ({\r\n    tab: {\r\n        width: '100%',\r\n        minHeight: '100%'\r\n    },\r\n    column: {\r\n        display: 'inline-block',\r\n        verticalAlign: 'top',\r\n        marginRight: 20\r\n    },\r\n    columnSettings: {\r\n        width: 'calc(100% - 370px)',\r\n    },\r\n});\r\n\r\nclass Sliders extends Component\r\n{\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        window.Sliders = this;\r\n        this.state ={\r\n            data : props.data\r\n                ?\r\n                props.data\r\n                :\r\n                defaultData.data,\r\n            labels : props.data\r\n                ?\r\n                props.labels\r\n                :\r\n                defaultData.labels,\r\n            options : props.options\r\n                ?\r\n                props.options\r\n                :\r\n                defaultOptopns.options,\r\n                type : props.type ? props.type : \"persent\",\r\n            range : props.range,\r\n            selected: [],\r\n            slide_id : 0,\r\n            _width:props._width\r\n        }\r\n\t\tthis.car = React.createRef();\r\n    }\r\n    componentDidMount()\r\n    {\r\n        window.addEventListener('resize', this.updateWindowDimensions);\r\n        setTimeout(() => this.updateWindowDimensions(), 300);\r\n    }\r\n    omponentWillUnmount() \r\n\t{ \r\n        window.removeEventListener('scroll', this.updateWindowDimensions);\r\n    }\r\n    updateWindowDimensions( evt )\r\n\t{\r\n        const w = document.getElementById('tapper-inside').getBoundingClientRect().width; \r\n        console.log ( w )\r\n        window.Sliders.setState({\r\n            _width : window.innerWidth,\r\n            _height: window.innerHeight,\r\n            _w : w ? w * .85 : 30\r\n        })\r\n    }\r\n    componentWillUpdate(nextProps, nextState )\r\n    {\r\n        if(nextProps.type != this.state.type )\r\n        {\r\n            this.setState({ type: nextProps.type })\r\n        }\r\n        if(nextProps.range != this.state.range )\r\n        {\r\n            console.log( nextProps.range )\r\n            this.setState({ range: nextProps.range });\r\n            this.updateWindowDimensions( );\r\n        } \r\n    } \r\n    \r\n    render()\r\n    { \r\n        const { data, options, type, range, slide_id } = this.state; \r\n        const { staff } = options;  \r\n        return  <div \r\n            className={\"tapper-grid tapper-shadow m-1 p-1 h-100 \"}\r\n            style={{\r\n                padding : 0,\r\n                paddingBottom:0,\r\n                backgroundColor : options.backgrounds[0],\r\n\r\n            }}    \r\n        >\r\n            <div \r\n                className=\"tapper-inside\"\r\n                style={{ \r\n                    padding: 0,\r\n                    width:\"100%\" \r\n                }}\r\n            > \r\n                <Swiper \r\n                    data={ data }\r\n                    type={ type }\r\n                    range={ range }\r\n                    _width={this.state._w}\r\n                    slide_id={slide_id}\r\n                />\r\n            </div>\r\n        </div> \r\n    }\r\n\r\n}\r\nexport default withStyles(styles)(Sliders);","import { FormControl, FormControlLabel, FormLabel, Radio, RadioGroup } from \"@material-ui/core\";\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport React, { Component } from \"react\";\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\n\r\nclass TapperRightPanel extends Component\r\n{\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.state ={\r\n            ...props\r\n        }\r\n    }\r\n    render()\r\n    {\r\n        return <div className=\"\">\r\n            <div>\r\n                <FormControl component=\"fieldset\"> \r\n                    <RadioGroup defaultValue=\"female\" aria-label=\"gender\" name=\"customized-radios\">\r\n                        <FormControlLabel \r\n                            value=\"sn\" \r\n                            control={<Checkbox color=\"primary\" className={ \"flow checkbox\" } disableRipple={true}/>} \r\n                            label={I18n.t( \"Sn\" )}\r\n                            className=\"px-1\"\r\n                        />\r\n                        <FormControlLabel \r\n                            value=\"mn\" \r\n                            control={<Checkbox color=\"primary\" className={ \"flow checkbox\" } disableRipple={true}/>} \r\n                            label={I18n.t( \"Mn\" )}\r\n                            className=\"px-1\"\r\n                        />\r\n                        <FormControlLabel \r\n                            value=\"tu\" \r\n                            control={<Checkbox color=\"primary\" className={ \"flow checkbox\" } disableRipple={true}/>} \r\n                            label={I18n.t( \"Tu\" )} \r\n                            className=\"px-1\"\r\n                        />\r\n                        <FormControlLabel \r\n                            value=\"we\" \r\n                            control={<Checkbox color=\"primary\" className={ \"flow checkbox\" } disableRipple={true}/>} \r\n                            label={I18n.t( \"We\" )}\r\n                            className=\"px-1\"\r\n                        />\r\n                        <FormControlLabel \r\n                            value=\"th\" \r\n                            control={<Checkbox color=\"primary\" className={ \"flow checkbox\" } disableRipple={true}/>} \r\n                            label={I18n.t( \"Th\" )} \r\n                            className=\"px-1\"\r\n                        />\r\n                        <FormControlLabel \r\n                            value=\"fr\" \r\n                            control={<Checkbox color=\"primary\" className={ \"flow checkbox\" } disableRipple={true}/>} \r\n                            label={I18n.t( \"Fr\" )}\r\n                            className=\"px-1\"\r\n                            />\r\n                        <FormControlLabel \r\n                            value=\"sa\" \r\n                            control={<Checkbox color=\"primary\"  className={ \"flow checkbox\" } disableRipple={true}/>} \r\n                            label={I18n.t( \"Sa\" )} \r\n                            className=\"px-1\"\r\n                        /> \r\n                    </RadioGroup>\r\n                </FormControl> \r\n            </div>  \r\n        </div>\r\n    }\r\n\r\n}\r\nexport default TapperRightPanel;","\r\n\r\nimport React, { Component, Fragment } from \"react\";\r\nimport { FormLabel, TextField, withStyles } from \"@material-ui/core\";\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\n\r\nclass DivicesPanel extends Component\r\n{\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.state ={\r\n            ...props,\r\n            title: props.title ? props.title : \"Devices\"\r\n        }\r\n    }\r\n    render()\r\n    {\r\n        const CssTextField = withStyles({\r\n            root: {\r\n                backgroundColor:\"#FFFFFF12\", \r\n                padding: 20,\r\n                borderRadius:15,                \r\n                display: \"flex\",\r\n                width: \"auto\"\r\n            },\r\n          })(TextField);\r\n        return <>\r\n            <FormLabel component=\"legend\" className=\"tapper-title\">\r\n                {I18n.t( this.state.title )}\r\n            </FormLabel>\r\n            <CssTextField\r\n                id=\"standard-full-width\"\r\n                label=\"\"\r\n                style={{ }}\r\n                className=\"tapper-shadow\"\r\n                placeholder={I18n.t( \"Put device names per comma\" )}\r\n                helperText=\"\"\r\n                fullWidth\r\n                margin=\"normal\"\r\n                multiline\r\n                rows={ this.props.rows || 3 }\r\n                InputLabelProps={{\r\n                    shrink: true,\r\n                }}\r\n            />\r\n        </> \r\n    }\r\n\r\n}\r\nexport default DivicesPanel;","import I18n from \"@iobroker/adapter-react/i18n\";\r\nimport { Component } from \"react\";\r\n\r\nclass EditPanel extends Component\r\n{\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.state={\r\n            isEdit:props.isEdit\r\n        }\r\n    }\r\n    componentWillUpdate(nextProps)\r\n    {\r\n        if(nextProps.isEdit != this.state.isEdit )\r\n        {\r\n            this.setState({ isEdit: nextProps.isEdit })\r\n        }\r\n    }\r\n    on = () =>\r\n    {\r\n        if(this.props.on)\r\n        {\r\n            this.props.on( this.state.isEdit )\r\n        }\r\n    }\r\n    render()\r\n    {\r\n        return <div className=\"flow-menu mt-auto\">\r\n            <div \r\n                className={\"tapper-edit w-100\" + (this.state.isEdit ? \" active\" : \"\") }\r\n                onClick={this.on}\r\n            >\r\n                {I18n.t( this.state.isEdit ? \"Finish edit\" : \"Edit Menu\")}\r\n            </div>            \r\n        </div>\r\n    }\r\n}\r\nexport default EditPanel;","import React from 'react'; \r\nimport './App.scss';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport { MuiThemeProvider } from '@material-ui/core/styles';\r\n\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';  \r\nimport Tab from '@material-ui/core/Tab';\r\nimport GenericApp from '@iobroker/adapter-react/GenericApp';\r\nimport Loader from '@iobroker/adapter-react/Components/Loader'\r\n\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\nimport TabOptions from './Tabs/Options';\r\nimport TapperPanel from './components/TapperPanel';\r\nimport TypePanel from './components/TypePanel';\r\nimport PriorityPanel from './components/PriorityPanel';\r\nimport Sliders from './components/Sliders';\r\nimport TapperRightPanel from './components/TapperRightPanel';\r\nimport DivicesPanel from './components/DevicesPanel';\r\nimport EditPanel from './components/EditPanel';\r\nimport defaultOptopns from \"./data/defaultOptopns.json\"\r\nimport { FormLabel, Grid, Typography } from '@material-ui/core';\r\n\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\nimport DehazeIcon from '@material-ui/icons/Dehaze';\r\nimport AssignmentTurnedInIcon from '@material-ui/icons/AssignmentTurnedIn';\r\nimport CalendarTodayIcon from '@material-ui/icons/CalendarToday';\r\nimport CallSplitIcon from '@material-ui/icons/CallSplit';\r\nimport ViewListIcon from '@material-ui/icons/ViewList';\r\nimport CodeIcon from '@material-ui/icons/Code';\r\nimport ScheduleIcon from '@material-ui/icons/Schedule';\r\n\r\nconst mobile_panel = {\r\n        background:\"transparent\",\r\n        ['@media (max-width:570px)']: \r\n        {\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n            padding: \"0px 10px 0 60px !important\",\r\n            height: \"100%\",\r\n            width:\"calc(100% - 70px)\",\r\n            left:\"calc(-100% - 70px)\",\r\n            background: defaultOptopns.options.backgrounds[ 1 ]\r\n        }\r\n    }\r\nconst styles = theme => ({\r\n    root: {},\r\n    tabContent: {\r\n        padding: 10,\r\n        height: 'calc(100% - 64px - 48px - 20px)',\r\n        overflow: 'auto'\r\n    },\r\n    tabContentIFrame: {\r\n        padding: 10,\r\n        height: 'calc(100% - 64px - 48px - 20px - 38px)',\r\n        overflow: 'auto'\r\n    },\r\n    clip_left_sm_2 : mobile_panel,\r\n    clip_left_sm_4 : mobile_panel,\r\n    clip_left_sm_5 : mobile_panel,\r\n    clip_left_sm_6 : mobile_panel,\r\n    clip_left_sm_7 : mobile_panel\r\n    \r\n});\r\n\r\nclass App extends GenericApp {\r\n    constructor(props) {\r\n        const extendedProps = {...props};\r\n        extendedProps.encryptedFields = ['pass'];\r\n        extendedProps.translations = {\r\n            'en': require('./i18n/en'),\r\n            'de': require('./i18n/de'),\r\n            'ru': require('./i18n/ru'),\r\n            'pt': require('./i18n/pt'),\r\n            'nl': require('./i18n/nl'),\r\n            'fr': require('./i18n/fr'),\r\n            'it': require('./i18n/it'),\r\n            'es': require('./i18n/es'),\r\n            'pl': require('./i18n/pl'),\r\n            'zh-cn': require('./i18n/zh-cn'),\r\n        };\r\n\r\n        super(props, extendedProps);\r\n        this.state ={\r\n            type : \"temperature\",\r\n            priority: \"normal\",\r\n            menu : defaultOptopns.menu,\r\n            max_menu_id : defaultOptopns.max_menu_id,\r\n            activeMenu : \"main\",\r\n            isMenuEdit : false,\r\n            range: 0 // масштаб \r\n        } \r\n        this.isExpert = true;  \r\n        window.SchedullerApp = this;\r\n    }\r\n    componentWillMount()\r\n    {\r\n        window.addEventListener('resize', this.updateWindowDimensions);\r\n        this.updateWindowDimensions();\r\n    }\r\n    omponentWillUnmount() \r\n\t{ \r\n        window.removeEventListener('scroll', this.updateWindowDimensions);\r\n    }\r\n    updateWindowDimensions( evt )\r\n\t{\r\n        window.SchedullerApp.setState({\r\n            _width : window.innerWidth,\r\n            _height: window.innerHeight\r\n        })\r\n    }\r\n    getSelectedTab() {\r\n        const tab = this.state.selectedTab;\r\n        if (!tab || tab === 'options') {\r\n            return 0;\r\n        }\r\n    }\r\n    onLeftOpen1 = () =>\r\n    {\r\n        this.setState({ \r\n            leftOpen  : !this.state.leftOpen,  \r\n            leftOpen2 : false,  \r\n            leftOpen3 : false,  \r\n            leftOpen4 : false,  \r\n            leftOpen5 : false,     \r\n            leftOpen6 : false,\r\n            leftOpen7 : false\r\n        })\r\n    }\r\n    onLeftOpen2 = () =>\r\n    {\r\n        this.setState({ \r\n            leftOpen7 : false, \r\n            leftOpen  : false, \r\n            leftOpen2 : !this.state.leftOpen2,\r\n            leftOpen3 : false,  \r\n            leftOpen4 : false,   \r\n            leftOpen5 : false,     \r\n            leftOpen6 : false \r\n        })\r\n    }\r\n    onLeftOpen3 = () =>\r\n    {\r\n        this.setState({ \r\n            leftOpen3 : !this.state.leftOpen3,  \r\n            leftOpen7 : false,  \r\n            leftOpen2 : false,  \r\n            leftOpen  : false,  \r\n            leftOpen4 : false,  \r\n            leftOpen5 : false,   \r\n            leftOpen6 : false  \r\n        })\r\n    }\r\n    onLeftOpen4 = () =>\r\n    {\r\n        this.setState({ \r\n            leftOpen4 : !this.state.leftOpen4,   \r\n            leftOpen7 : false,  \r\n            leftOpen6 : false,  \r\n            leftOpen5 : false,  \r\n            leftOpen3 : false,  \r\n            leftOpen2 : false,  \r\n            leftOpen  : false  \r\n        })\r\n    }\r\n    onLeftOpen5 = () =>\r\n    {\r\n        this.setState({ \r\n            leftOpen5 : !this.state.leftOpen5,  \r\n            leftOpen7 : false,  \r\n            leftOpen6 : false,  \r\n            leftOpen4 : false,  \r\n            leftOpen3 : false,  \r\n            leftOpen2 : false,  \r\n            leftOpen  : false  \r\n        })\r\n    }\r\n    onLeftOpen6 = () =>\r\n    {\r\n        this.setState({ \r\n            leftOpen6 : !this.state.leftOpen6, \r\n            leftOpen7 : false,    \r\n            leftOpen5 : false,    \r\n            leftOpen4 : false,  \r\n            leftOpen3 : false,  \r\n            leftOpen2 : false,  \r\n            leftOpen  : false  \r\n        })\r\n    }\r\n    onLeftOpen7 = () =>\r\n    {\r\n        this.setState({ \r\n            leftOpen7 : !this.state.leftOpen7, \r\n            leftOpen6 : false,    \r\n            leftOpen5 : false,    \r\n            leftOpen4 : false,  \r\n            leftOpen3 : false,  \r\n            leftOpen2 : false,  \r\n            leftOpen  : false  \r\n        })\r\n    }\r\n    onType = type =>\r\n    {\r\n        this.setState({ type });\r\n    }\r\n    onPriority = priority =>\r\n    {\r\n        this.setState({ priority });\r\n    }\r\n    onMenu = active =>\r\n    {\r\n        this.setState({ activeMenu : active });\r\n        setTimeout(()=>\r\n        {\r\n            this.setState({ leftOpen : false });\r\n        }, 250)\r\n    }\r\n    onEditMenu = isMenuEdit =>\r\n    {\r\n        this.setState({ isMenuEdit: !isMenuEdit })\r\n    }\r\n    onChangeMenu = (newMenu, max_menu_id) =>\r\n    {\r\n        console.log(newMenu, max_menu_id)\r\n        this.setState({ menu: newMenu, max_menu_id })\r\n    }\r\n    onRange = (event, range)  =>\r\n    {\r\n        this.setState({ range });\r\n        setTimeout(() =>\r\n        {\r\n            this.setState({ leftOpen7: false });\r\n        }, 350 )\r\n    }\r\n    render()\r\n    { \r\n        if (!this.state.loaded) \r\n        {\r\n            return <MuiThemeProvider theme={this.state.theme}>\r\n                <Loader theme={this.state.themeType} />\r\n            </MuiThemeProvider>;\r\n        }   \r\n        // console.log(this.props);\r\n        const { classes } = this.props;\r\n        const { menu, activeMenu, isMenuEdit, max_menu_id, range } = this.state;\r\n\r\n        const AntTabs = withStyles({\r\n            root: { \r\n                margin:0,  \r\n                width: \"100%\",\r\n                justifyContent:\"center\"\r\n            },\r\n            indicator: { \r\n                transition : \"all 300ms ease-out\"\r\n            },\r\n        })(Tabs);\r\n        \r\n        const AntTab = withStyles((theme) => ({\r\n            root: { \r\n                //backgroundColor:'#444',\r\n                minWidth: 120,\r\n                fontWeight: 700, \r\n                fontSize: \"0.75rem\",\r\n                opacity: 1, \r\n            },\r\n            selected: {},\r\n        }))((props) => <Tab disableRipple {...props} />);\r\n\r\n        return <MuiThemeProvider theme={this.state.theme}>\r\n            <div className=\"App\">\r\n                <Grid container \r\n                    spacing={0} \r\n                    style={{ }}\r\n                    className=\"mobile-scrolled\"\r\n                > \r\n                    <Grid \r\n                        item \r\n                        xs={12} \r\n                        lg={2} \r\n                        className={ \"h-100 sm-hidden \" } \r\n                    > \r\n                        <div \r\n                            className={\r\n                                \"tapper-grid tapper-shadow m-1 h-100 clip-left-sm-1 \" + \r\n                                ( this.state.leftOpen ? \" active\" : \"\" )\r\n                            }  \r\n                            style={{background:\"#444\"}}\r\n                        > \r\n                            <div className=\"close-label-left-sm flow-dark \" onClick={this.onLeftOpen1}>\r\n                                <ClearIcon />\r\n                            </div>\r\n                            <TapperPanel\r\n                                active={activeMenu}\r\n                                isEdit={isMenuEdit}\r\n                                menu={menu}\r\n                                on={this.onMenu}\r\n                                max_menu_id={max_menu_id}\r\n                                onChangeMenu={this.onChangeMenu}\r\n                            />\r\n                            {\r\n                                this.isExpert\r\n                                    ? \r\n                                    <EditPanel\r\n                                        isEdit={isMenuEdit}\r\n                                        menu={menu}\r\n                                        on={this.onEditMenu}\r\n                                    /> \r\n                                    :\r\n                                    null\r\n                            }\r\n                        </div>\r\n                    </Grid>\r\n                    <Grid item xs={12} lg={10} className=\"sliders-container\"> \r\n                        \r\n                        <Sliders \r\n                            type={ this.state.type }\r\n                            range={range}\r\n                            _width={ this.state._width }\r\n                        />\r\n                        {\r\n                            this.isExpert\r\n                                ? \r\n                                <div \r\n                                    className={\r\n                                        \"tapper-grid tapper-shadow m-1 mt-1 clip_left_sm_7 \"+ \r\n                                        classes.clip_left_sm_7 + \r\n                                        (this.state.leftOpen7 ? \" active \" :\"\") \r\n                                    }\r\n                                    style={{ }}\r\n                                >\r\n                                    <div className=\"close-label-left-sm flow-dark \" onClick={this.onLeftOpen7}>\r\n                                        <ClearIcon />\r\n                                    </div>\r\n                                    <div className=\"mt-sm-auto mb-sm-auto w-100\">\r\n                                        <AntTabs\r\n                                            value={ range }\r\n                                            onChange={ this.onRange } \r\n                                            orientation={ this.state._width < 768 ? \"vertical\" : \"horizontal\" }                                            \r\n                                            indicatorColor=\"primary\"\r\n                                            textColor=\"primary\"\r\n                                            centered\r\n                                        >\r\n                                            <AntTab label=\"0.5 hr\" />\r\n                                            <AntTab label=\"1 hr\"  />\r\n                                            <AntTab label=\"2 hrs\" />\r\n                                            <AntTab label=\"3 hrs\" />\r\n                                            <AntTab label=\"4 hrs\" />\r\n                                        </AntTabs>\r\n                                    </div>\r\n                                </div>\r\n                                    :\r\n                                    null\r\n                        }\r\n                        <Grid container \r\n                            spacing={0}   \r\n                        > \r\n                        {\r\n                            this.isExpert\r\n                                ? \r\n                                <Grid \r\n                                    item \r\n                                    xs={12} \r\n                                    lg={3}  \r\n                                    className={ \"h-100 expert sm-hidden \" }\r\n                                >\r\n                                    <div \r\n                                        className={\r\n                                            \"tapper-grid tapper-shadow h-100 m-1 p-2 clip_left_sm_2 \" + \r\n                                            classes.clip_left_sm_2 + \r\n                                            (this.state.leftOpen2 ? \" active \" :\"\")\r\n                                        }\r\n                                    > \r\n                                        <div className=\"close-label-left-sm flow-dark\" onClick={this.onLeftOpen2}>\r\n                                            <ClearIcon />\r\n                                        </div>\r\n                                        <div className=\"mt-sm-auto mb-sm-auto\">                                            \r\n                                            <FormLabel component=\"legend\" className=\"tapper-title\">\r\n                                                {I18n.t( \"Settings\" )}\r\n                                            </FormLabel>\r\n                                            <div>\r\n                                                <TypePanel\r\n                                                    on={this.onType}\r\n                                                    type={ this.state.type }\r\n                                                    _width={this.state._width}\r\n                                                \r\n                                                />\r\n                                            </div>\r\n                                            <div className=\"mt-3\">\r\n                                                <PriorityPanel\r\n                                                    on={this.onPriority}\r\n                                                    priority={ this.state.priority }\r\n                                                    _width={this.state._width}\r\n                                                \r\n                                                />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </Grid>    \r\n                                :\r\n                                null\r\n                            } \r\n                            <Grid \r\n                                item \r\n                                xs={12} \r\n                                lg={7}  \r\n                                className={ \"h-100 expert sm-hidden \" }\r\n                            >                                           \r\n                                <div className={\r\n                                        \"tapper-grid tapper-shadow m-1 p-2 mt-1 clip_left_sm_5 \"+ \r\n                                        classes.clip_left_sm_5 + \r\n                                        (this.state.leftOpen5 ? \" active \" :\"\") \r\n                                    }\r\n                                    style={{flexGrow:100}}\r\n                                >\r\n                                    <div className=\"close-label-left-sm flow-dark \" onClick={this.onLeftOpen5}>\r\n                                        <ClearIcon />\r\n                                    </div>\r\n                                    <div className=\"mt-sm-auto mb-sm-auto wc-100\">\r\n                                        <DivicesPanel\r\n                                            title={ this.isExpert ? \"Devices (expert)\" : \"Devices\" }\r\n                                            isExpert={ this.isExpert }\r\n                                            rows={ 4 }  \r\n                                            _width={ this.state._width }\r\n                                        /> \r\n                                    </div>\r\n                                </div>\r\n                            </Grid>\r\n                            <Grid \r\n                                item \r\n                                xs={12} \r\n                                lg={2}  \r\n                                className={ \"h-100 sm-hidden \" }\r\n                            >                                           \r\n                                <div \r\n                                    className={\r\n                                        \"tapper-grid tapper-shadow m-1 p-2 clip_right_sm_3 h-100 \"+ \r\n                                        classes.clip_left_sm_2 + \r\n                                        (this.state.leftOpen3 ? \" active \" :\"\")\r\n                                    }                            \r\n                                >\r\n                                    <div className=\"close-label-left-sm flow-dark\" onClick={this.onLeftOpen3}>\r\n                                        <ClearIcon />\r\n                                    </div>\r\n                                    <div className=\"mt-sm-auto mb-sm-auto\">\r\n                                        <TapperRightPanel\r\n                                            _width={this.state._width}\r\n                                            value={this.state.week}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                            </Grid> \r\n                        </Grid> \r\n                    </Grid>  \r\n                    <div className=\"label-menu\" />\r\n                    <div className={\"label-left-sm-1 \" + (this.state.leftOpen ? \"active\" : \"\")} onClick={this.onLeftOpen1}>\r\n                        <DehazeIcon />\r\n                    </div>\r\n                    <div className={\"label-right-sm-5 \" + (this.state.leftOpen5 ? \"active\" : \"\")} onClick={this.onLeftOpen5}>\r\n                        <CallSplitIcon/>\r\n                    </div>\r\n                    <div className={\"label-right-sm-3 \" + (this.state.leftOpen3 ? \"active\" : \"\")} onClick={this.onLeftOpen3}>\r\n                        <CalendarTodayIcon/>\r\n                    </div>\r\n                    {\r\n                        this.isExpert\r\n                            ? \r\n                            <>\r\n                                <div className=\"label-menu-bottom\" />\r\n                                <div className={\"label-left-sm-2  expert \" + (this.state.leftOpen2 ? \"active\" : \"\")} onClick={this.onLeftOpen2}>\r\n                                    <AssignmentTurnedInIcon />\r\n                                </div>\r\n                                <div className={\"label-right-sm-6 \" + (this.state.leftOpen6 ? \"active\" : \"\")} onClick={this.onLeftOpen6}>\r\n                                    <CallSplitIcon/>\r\n                                </div>\r\n                                <div className={\"label-right-sm-4 \" + (this.state.leftOpen4 ? \"active\" : \"\")} onClick={this.onLeftOpen4}>\r\n                                    <ViewListIcon/>\r\n                                </div>\r\n                                <div className={\"label-right-sm-7 \" + (this.state.leftOpen7 ? \"active\" : \"\")} onClick={this.onLeftOpen7}>\r\n                                    <ScheduleIcon/>\r\n                                </div>\r\n\r\n                            </>\r\n                            :\r\n                            null\r\n                    } \r\n                    \r\n                </Grid> \r\n                { this.renderError() }\r\n                { this.renderSaveCloseButtons() }\r\n            </div>\r\n        </MuiThemeProvider>;\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport * as Sentry from '@sentry/browser';\r\nimport * as SentryIntegrations from '@sentry/integrations';\r\nimport { MuiThemeProvider} from '@material-ui/core/styles';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {version} from '../package.json';\r\n//import theme from './theme';\r\nimport theme from '@iobroker/adapter-react/Theme';\r\n\r\nimport Utils from '@iobroker/adapter-react/Components/Utils';\r\n\r\nwindow.adapterName = 'scheduler';\r\nlet themeName = Utils.getThemeName();\r\n\r\n// console.log(`iobroker.${window.adapterName}@${version} using theme \"${themeName}\"`);\r\n\r\nfunction build() {\r\n    return ReactDOM.render(\r\n        <MuiThemeProvider theme={theme(themeName)}>\r\n            <App\r\n                onThemeChange={_theme => {\r\n                    themeName = _theme;\r\n                    build();\r\n                }}\r\n            />\r\n        </MuiThemeProvider>,\r\n        document.getElementById('root')\r\n    );\r\n}\r\n\r\nif (false && window.location.host !== 'localhost:3000') {\r\n    Sentry.init({\r\n        dsn: 'https://5ad729dbed504d15aa8bde423cae9a8e@sentry.iobroker.net/57',\r\n        release: `iobroker.${window.adapterName}@${version}`,\r\n        integrations: [\r\n            new SentryIntegrations.Dedupe()\r\n        ]\r\n    });\r\n}\r\n\r\nbuild();\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}