{"version":3,"file":"static/js/src_Scheduler_jsx.94712072.chunk.js","mappings":"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","sources":["Scheduler.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles, withTheme } from '@mui/styles';\r\n\r\nimport { MenuItem, Select } from '@mui/material';\r\n\r\nimport { I18n } from '@iobroker/adapter-react-v5';\r\n\r\nimport Generic from './Generic';\r\nimport IntervalsContainer from './components/IntervalsContainer';\r\nimport DayOfWeekPanel from './components/DayOfWeekPanel';\r\n\r\nconst styles = () => ({\r\n});\r\n\r\nconst ProfileSelector = props => {\r\n    const [object, setObject] = useState(null);\r\n    useEffect(() => {\r\n        props.socket.getObject(`system.adapter.scheduler.${props.data.instance}`).then(_object => setObject(_object));\r\n    }, []);\r\n\r\n    if (!object) {\r\n        return null;\r\n    }\r\n\r\n    const profilesArray = [];\r\n\r\n    const profileRecursive = (profiles, level) => {\r\n        profiles.forEach(profile => {\r\n            profilesArray.push({\r\n                profile,\r\n                level,\r\n            });\r\n            if (object.native.profiles.filter(p => p.parent === profile.id).length) {\r\n                profileRecursive(object.native.profiles.filter(p => p.parent === profile.id), level + 1);\r\n            }\r\n        });\r\n    };\r\n\r\n    profileRecursive(object.native.profiles.filter(p => !p.parent), 0);\r\n\r\n    console.log(profilesArray);\r\n\r\n    return <Select\r\n        value={props.data[props.field.name]}\r\n        onChange={e => props.setData({ ...props.data, [props.field.name]: e.target.value })}\r\n        variant=\"standard\"\r\n        renderValue={value => {\r\n            const profile = profilesArray.find(p => p.profile.id === value);\r\n            return <div>{profile ? profile.profile.title : ''}</div>;\r\n        }}\r\n    >\r\n        {profilesArray.map(profile =>\r\n            <MenuItem\r\n                key={profile.profile.id}\r\n                value={profile.profile.id}\r\n            >\r\n                <div\r\n                    style={{\r\n                        paddingLeft: profile.level * 20,\r\n                    }}\r\n                >\r\n                    {profile.profile.title}\r\n                </div>\r\n            </MenuItem>)}\r\n    </Select>;\r\n};\r\n\r\nclass Scheduler extends Generic {\r\n    static getWidgetInfo() {\r\n        return {\r\n            id: 'tplScheduler',\r\n            visSet: 'scheduler',\r\n            visWidgetLabel: 'scheduler',  // Label of widget\r\n            visSetLabel: 'set_label', // Label of widget set\r\n            visName: 'Scheduler',\r\n            visAttrs: [{\r\n                name: 'common',\r\n                fields: [\r\n                    {\r\n                        label: 'Instance',\r\n                        name: 'instance',\r\n                        type: 'instance',\r\n                        adapter: 'scheduler',\r\n                        isShort: true,\r\n                    },\r\n                    {\r\n                        label: 'Scheduler',\r\n                        name: 'profile',\r\n                        type: 'custom',\r\n                        hidden: data => !data.instance && data.instance !== 0,\r\n                        component: (field, data, setData, props) => <ProfileSelector\r\n                            field={field}\r\n                            data={data}\r\n                            setData={setData}\r\n                            socket={props.socket}\r\n                            selectedWidgets={props.selectedWidgets}\r\n                            selectedView={props.selectedView}\r\n                            project={props.project}\r\n                            projectName={props.projectName}\r\n                            instance={props.instance}\r\n                            adapterName={props.adapterName}\r\n                        />,\r\n                    },\r\n                    {\r\n                        label: 'Read only',\r\n                        name: 'readOnly',\r\n                        type: 'checkbox',\r\n                        default: false,\r\n                    },\r\n                ],\r\n            }],\r\n            visDefaultStyle: {\r\n                width: '100%',\r\n                height: 120,\r\n                position: 'relative',\r\n            },\r\n            visPrev: 'widgets/scheduler/img/prev_scheduler.png',\r\n        };\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.widgetRef = React.createRef();\r\n    }\r\n\r\n    async propertiesUpdate() {\r\n        const object = await this.props.socket.getObject(`system.adapter.scheduler.${this.state.rxData.instance}`);\r\n        this.setState({ object });\r\n    }\r\n\r\n    componentDidMount() {\r\n        super.componentDidMount();\r\n        this.propertiesUpdate();\r\n    }\r\n\r\n    onRxDataChanged() {\r\n        this.propertiesUpdate();\r\n    }\r\n\r\n    // eslint-disable-next-line class-methods-use-this\r\n    getWidgetInfo() {\r\n        return Scheduler.getWidgetInfo();\r\n    }\r\n\r\n    onDow = (day, enabled) => {\r\n        const profile = JSON.parse(JSON.stringify(this.currentProfile()));\r\n        if (enabled && !profile.dow.includes(day)) {\r\n            profile.dow.push(day);\r\n        } else if (!enabled && profile.dow.includes(day)) {\r\n            profile.dow.splice(profile.dow.indexOf(day), 1);\r\n        }\r\n        this.changeProfile(profile);\r\n    };\r\n\r\n    onIntervals = intervals => {\r\n        const profile = JSON.parse(JSON.stringify(this.currentProfile()));\r\n        profile.intervals = intervals;\r\n        this.changeProfile(profile);\r\n    };\r\n\r\n    changeProfile = newData => {\r\n        if (this.state.rxData.readOnly) {\r\n            return;\r\n        }\r\n        const object = JSON.parse(JSON.stringify(this.state.object));\r\n        const profileIndex = this.state.object.native.profiles.findIndex(\r\n            profile => profile.id === this.state.rxData.profile,\r\n        );\r\n        object.native.profiles[profileIndex].data = newData;\r\n        this.setState({ object });\r\n        this.props.socket.setObject(object._id, object);\r\n    };\r\n\r\n    currentProfile = () => {\r\n        const foundProfile = this.state.object.native.profiles.find(profile => profile.id === this.state.rxData.profile);\r\n        return foundProfile ? foundProfile.type === 'profile' && foundProfile.data : null;\r\n    };\r\n\r\n    renderWidgetBody(props) {\r\n        super.renderWidgetBody(props);\r\n\r\n        if (!this.state.object) {\r\n            return null;\r\n        }\r\n\r\n        console.log(this.state.object);\r\n\r\n        const profile  = this.currentProfile();\r\n\r\n        if (!profile) {\r\n            return <div>{I18n.t('Profile not selected')}</div>;\r\n        }\r\n\r\n        if (!this.widgetRef.current?.offsetWidth) {\r\n            this.forceUpdate();\r\n        }\r\n\r\n        let width = (this.widgetRef.current?.offsetWidth || 0) - 80;\r\n        if (width < 0) {\r\n            width = 0;\r\n        }\r\n\r\n        const content = <div\r\n            style={{\r\n                display: 'flex',\r\n                width: '100%',\r\n                height: '100%',\r\n            }}\r\n            ref={this.widgetRef}\r\n        >\r\n            <IntervalsContainer\r\n                onChange={this.onIntervals}\r\n                theme={this.props.theme}\r\n                intervals={profile.intervals}\r\n                range={profile.intervalDuration}\r\n                type={profile.type}\r\n                socket={this.props.socket}\r\n                windowWidth={width}\r\n                intervalsWidth={width}\r\n            />\r\n            <DayOfWeekPanel\r\n                firstDayOfWeek={this.props.socket.systemConfig.common.firstDayOfWeek || 'monday'}\r\n                dow={profile.dow}\r\n                onChange={this.onDow}\r\n                theme={this.props.theme}\r\n            />\r\n        </div>;\r\n\r\n        return content;\r\n    }\r\n}\r\n\r\nScheduler.propTypes = {\r\n    systemConfig: PropTypes.object,\r\n    socket: PropTypes.object,\r\n    themeType: PropTypes.string,\r\n    style: PropTypes.object,\r\n    data: PropTypes.object,\r\n};\r\n\r\nexport default withStyles(styles)(withTheme(Scheduler));\r\n"],"names":["styles","ProfileSelector","props","object","setObject","_object","profilesArray","profileRecursive","profiles","level","profile","p","e","value","Scheduler","day","enabled","intervals","newData","profileIndex","foundProfile","data","field","setData","width"],"sourceRoot":""}