{"version":3,"file":"static/js/src_Scheduler_jsx.1eb405fa.chunk.js","mappings":"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","sources":["Scheduler.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles, withTheme } from '@mui/styles';\r\n\r\nimport {\r\n    MenuItem,\r\n    Select,\r\n    Card,\r\n    CardContent,\r\n} from '@mui/material';\r\n\r\nimport {\r\n    Schedule as ScheduleIcon,\r\n} from '@mui/icons-material';\r\n\r\nimport {\r\n    IconClosed as FolderIcon,\r\n    I18n,\r\n} from '@iobroker/adapter-react-v5';\r\n\r\nimport { VisRxWidget } from '@iobroker/vis-2-widgets-react-dev';\r\n\r\nimport IntervalsContainer from './components/IntervalsContainer';\r\nimport DayOfWeekPanel from './components/DayOfWeekPanel';\r\n\r\nconst styles = () => ({\r\n    content: {\r\n        display: 'flex',\r\n        width: '100%',\r\n        height: '100%',\r\n    },\r\n});\r\n\r\nconst ProfileSelector = props => {\r\n    const [object, setObject] = useState(null);\r\n    useEffect(() => {\r\n        props.socket.getObject(`system.adapter.scheduler.${props.data.instance}`).then(_object => setObject(_object));\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    if (!object) {\r\n        return null;\r\n    }\r\n\r\n    const profilesArray = [];\r\n\r\n    const profileRecursive = (profiles, level) => {\r\n        profiles.forEach(profile => {\r\n            profilesArray.push({\r\n                profile,\r\n                level,\r\n            });\r\n            if (object.native.profiles.filter(p => p.parent === profile.id).length) {\r\n                profileRecursive(object.native.profiles.filter(p => p.parent === profile.id), level + 1);\r\n            }\r\n        });\r\n    };\r\n\r\n    profileRecursive(object.native.profiles.filter(p => !p.parent), 0);\r\n\r\n    console.log(profilesArray);\r\n\r\n    return <Select\r\n        style={{ width: '100%' }}\r\n        value={props.data[props.field.name]}\r\n        onChange={e => {\r\n            const data = { ...props.data, [props.field.name]: e.target.value };\r\n            const oldProfile = profilesArray.find(p => p.profile.id === props.data[props.field.name]);\r\n            const newProfile = profilesArray.find(p => p.profile.id === e.target.value);\r\n            if (newProfile && (!data.name || (oldProfile && props.data.name === oldProfile.profile.title))) {\r\n                data.name = newProfile.profile.title;\r\n            }\r\n            props.setData(data);\r\n        }}\r\n        variant=\"standard\"\r\n        renderValue={value => {\r\n            const profile = profilesArray.find(p => p.profile.id === value);\r\n            return <div>{profile ? profile.profile.title : ''}</div>;\r\n        }}\r\n    >\r\n        {profilesArray.map(profile =>\r\n            <MenuItem\r\n                key={profile.profile.id}\r\n                value={profile.profile.id}\r\n                disabled={profile.profile.type === 'folder'}\r\n            >\r\n                <div style={{ paddingLeft: profile.level * 20, display: 'flex' }}>\r\n                    <span style={{ paddingRight: 4 }}>\r\n                        {profile.profile.type === 'folder' ? <FolderIcon /> : <ScheduleIcon />}\r\n                    </span>\r\n                    {profile.profile.title}\r\n                </div>\r\n            </MenuItem>)}\r\n    </Select>;\r\n};\r\n\r\nconst Generic = window.visRxWidget || VisRxWidget;\r\n\r\nclass Scheduler extends Generic {\r\n    static getWidgetInfo() {\r\n        return {\r\n            id: 'tplScheduler',\r\n            visSet: 'scheduler',\r\n            visWidgetLabel: 'scheduler',  // Label of widget\r\n            visSetLabel: 'set_label', // Label of widget set\r\n            visSetColor: '#70BBF7', // color of widget set\r\n            visName: 'Scheduler',\r\n            visAttrs: [{\r\n                name: 'common',\r\n                fields: [\r\n                    {\r\n                        label: 'instance',\r\n                        name: 'instance',\r\n                        type: 'instance',\r\n                        adapter: 'scheduler',\r\n                        isShort: true,\r\n                    },\r\n                    {\r\n                        label: 'profile',\r\n                        name: 'profile',\r\n                        type: 'custom',\r\n                        hidden: data => !data.instance && data.instance !== 0,\r\n                        component: (field, data, setData, props) => <ProfileSelector\r\n                            field={field}\r\n                            data={data}\r\n                            setData={setData}\r\n                            socket={props.socket}\r\n                            selectedWidgets={props.selectedWidgets}\r\n                            selectedView={props.selectedView}\r\n                            project={props.project}\r\n                            projectName={props.projectName}\r\n                            instance={props.instance}\r\n                            adapterName={props.adapterName}\r\n                        />,\r\n                    },\r\n                    {\r\n                        label: 'read_only',\r\n                        name: 'readOnly',\r\n                        type: 'checkbox',\r\n                        default: false,\r\n                    },\r\n                    {\r\n                        label: 'hide_days_of_week',\r\n                        name: 'hideDow',\r\n                        type: 'checkbox',\r\n                        default: false,\r\n                    },\r\n                    {\r\n                        label: 'name',\r\n                        name: 'name',\r\n                        tooltip: 'used_only_with_relative',\r\n                        default: '',\r\n                    },\r\n                ],\r\n            }],\r\n            visDefaultStyle: {\r\n                width: '100%',\r\n                height: 355,\r\n                position: 'relative',\r\n            },\r\n            visPrev: 'widgets/scheduler/img/prev_scheduler.png',\r\n        };\r\n    }\r\n\r\n    static t(key, ...args) {\r\n        return I18n.t(`scheduler_${key}`, ...args);\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.widgetRef = React.createRef();\r\n    }\r\n\r\n    async propertiesUpdate() {\r\n        // calculate current instance\r\n        const instanceId = this.state.rxData.instance || this.state.rxData.instance === 0 ? `system.adapter.scheduler.${this.state.rxData.instance}` : '';\r\n\r\n        // if instance changed\r\n        if (this.subscribedId !== instanceId) {\r\n            // unsubscribe from old instance\r\n            this.subscribedId && this.props.socket.unsubscribeObject(this.subscribedId, this.onProfileChanged);\r\n            this.subscribedId = null;\r\n        }\r\n        if (instanceId) {\r\n            // read new instance\r\n            const object = await this.props.socket.getObject(instanceId);\r\n            this.setState({ object }, () => {\r\n                if (!this.subscribedId && object) {\r\n                    if (instanceId) {\r\n                        this.subscribedId = instanceId;\r\n                        this.props.socket.subscribeObject(instanceId, this.onProfileChanged);\r\n                    }\r\n                }\r\n            });\r\n        } else {\r\n            this.setState({ object: null });\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        super.componentDidMount();\r\n        this.propertiesUpdate();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        super.componentWillUnmount();\r\n        this.subscribedId && this.props.socket.unsubscribeObject(this.subscribedId, this.onProfileChanged);\r\n    }\r\n\r\n    onProfileChanged = (id, obj) => {\r\n        if (id === this.state.object._id) {\r\n            const profileOld = this.state.object.native.profiles.find(\r\n                profile => profile.id === this.state.rxData.profile,\r\n            );\r\n\r\n            const profileNew = obj.native?.profiles?.find(\r\n                profile => profile.id === this.state.rxData.profile,\r\n            );\r\n\r\n            if (JSON.stringify(profileOld) !== JSON.stringify(profileNew)) {\r\n                this.setState({ object: obj });\r\n            }\r\n        }\r\n    };\r\n\r\n    onRxDataChanged() {\r\n        this.propertiesUpdate();\r\n    }\r\n\r\n    // eslint-disable-next-line class-methods-use-this\r\n    getWidgetInfo() {\r\n        return Scheduler.getWidgetInfo();\r\n    }\r\n\r\n    onDow = (day, enabled) => {\r\n        const profile = JSON.parse(JSON.stringify(this.currentProfile()));\r\n        if (enabled && !profile.dow.includes(day)) {\r\n            profile.dow.push(day);\r\n        } else if (!enabled && profile.dow.includes(day)) {\r\n            profile.dow.splice(profile.dow.indexOf(day), 1);\r\n        }\r\n        this.changeProfile(profile);\r\n    };\r\n\r\n    onIntervals = intervals => {\r\n        const profile = JSON.parse(JSON.stringify(this.currentProfile()));\r\n        profile.intervals = intervals;\r\n        this.changeProfile(profile);\r\n    };\r\n\r\n    changeProfile = newData => {\r\n        if (this.state.rxData.readOnly) {\r\n            return;\r\n        }\r\n        const object = JSON.parse(JSON.stringify(this.state.object));\r\n        const profileIndex = this.state.object.native.profiles.findIndex(\r\n            profile => profile.id === this.state.rxData.profile,\r\n        );\r\n        object.native.profiles[profileIndex].data = newData;\r\n        this.setState({ object });\r\n        this.props.socket.setObject(object._id, object);\r\n    };\r\n\r\n    currentProfile = () => {\r\n        const foundProfile = this.state.object.native.profiles.find(profile => profile.id === this.state.rxData.profile);\r\n        return foundProfile ? foundProfile.type === 'profile' && foundProfile.data : null;\r\n    };\r\n\r\n    renderWidgetBody(props) {\r\n        super.renderWidgetBody(props);\r\n\r\n        if (!this.state.rxData.instance) {\r\n            return <div>{Scheduler.t('instance_not_selected')}</div>;\r\n        }\r\n\r\n        if (!this.state.object) {\r\n            return null;\r\n        }\r\n\r\n        console.log(this.state.object);\r\n\r\n        const profile  = this.currentProfile();\r\n\r\n        if (!profile) {\r\n            return <div>{Scheduler.t('profile_not_selected')}</div>;\r\n        }\r\n\r\n        if (!this.widgetRef.current?.offsetWidth) {\r\n            setTimeout(() => this.forceUpdate(), 100);\r\n        }\r\n\r\n        let width = (this.widgetRef.current?.offsetWidth || 0) - (this.state.rxData.hideDow ? 0 : 80);\r\n        if (width < 0) {\r\n            width = 0;\r\n        }\r\n\r\n        const content = <div\r\n            className={this.props.classes.content}\r\n            ref={this.widgetRef}\r\n        >\r\n            <IntervalsContainer\r\n                onChange={this.onIntervals}\r\n                theme={this.props.theme}\r\n                intervals={profile.intervals}\r\n                range={profile.intervalDuration}\r\n                type={profile.type}\r\n                socket={this.props.socket}\r\n                windowWidth={width}\r\n                readOnly={this.state.rxData.readOnly}\r\n                intervalsWidth={width}\r\n            />\r\n            {this.state.rxData.hideDow && width ? null :\r\n                <DayOfWeekPanel\r\n                    firstDayOfWeek={this.props.socket.systemConfig.common.firstDayOfWeek || 'monday'}\r\n                    readOnly={this.state.rxData.readOnly}\r\n                    dow={profile.dow}\r\n                    onChange={this.onDow}\r\n                    theme={this.props.theme}\r\n                    t={Scheduler.t}\r\n                />}\r\n        </div>;\r\n\r\n        if (this.state.rxStyle.position === 'relative') {\r\n            return this.wrapContent(content, null, { height: 'calc(100% - 24px)', width: 'calc(100% - 24px)' }, null, null, { Card, CardContent });\r\n        }\r\n\r\n        return content;\r\n    }\r\n}\r\n\r\nScheduler.propTypes = {\r\n    systemConfig: PropTypes.object,\r\n    socket: PropTypes.object,\r\n    themeType: PropTypes.string,\r\n    style: PropTypes.object,\r\n    data: PropTypes.object,\r\n};\r\n\r\nexport default withStyles(styles)(withTheme(Scheduler));\r\n"],"names":["styles","ProfileSelector","props","object","setObject","_object","profilesArray","profileRecursive","profiles","level","profile","p","e","data","oldProfile","newProfile","value","Generic","Scheduler","id","obj","profileOld","profileNew","day","enabled","intervals","newData","profileIndex","foundProfile","field","setData","key","args","instanceId","width","content"],"sourceRoot":""}